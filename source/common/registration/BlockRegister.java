package net.tslat.aoa3.common.registration;

import net.minecraft.block.Block;
import net.minecraft.block.BlockSlab;
import net.minecraft.block.material.Material;
import net.minecraft.client.renderer.block.model.ModelResourceLocation;
import net.minecraft.init.Items;
import net.minecraft.init.SoundEvents;
import net.minecraft.item.Item;
import net.minecraft.item.ItemBlock;
import net.minecraft.item.ItemSlab;
import net.minecraft.util.ResourceLocation;
import net.minecraftforge.client.event.ModelRegistryEvent;
import net.minecraftforge.client.model.ModelLoader;
import net.minecraftforge.event.RegistryEvent;
import net.minecraftforge.fml.common.Mod;
import net.minecraftforge.fml.common.eventhandler.SubscribeEvent;
import net.minecraftforge.fml.common.registry.GameRegistry;
import net.minecraftforge.fml.relauncher.Side;
import net.minecraftforge.fml.relauncher.SideOnly;
import net.minecraftforge.oredict.OreDictionary;
import net.minecraftforge.registries.IForgeRegistry;
import net.tslat.aoa3.advent.AdventOfAscension;
import net.tslat.aoa3.block.*;
import net.tslat.aoa3.block.decoration.BasicDecorationBlock;
import net.tslat.aoa3.block.decoration.banner.BannerBlock;
import net.tslat.aoa3.block.decoration.carpets.CarpetBlock;
import net.tslat.aoa3.block.decoration.fences.FenceBlock;
import net.tslat.aoa3.block.decoration.fences.TwinklestoneFence;
import net.tslat.aoa3.block.decoration.gates.GateBlock;
import net.tslat.aoa3.block.decoration.glass.GlassBlock;
import net.tslat.aoa3.block.decoration.glass.UnbreakableGlassBlock;
import net.tslat.aoa3.block.decoration.misc.CompressedBlock;
import net.tslat.aoa3.block.decoration.slabs.SlabBlock;
import net.tslat.aoa3.block.decoration.stairs.StairsBlock;
import net.tslat.aoa3.block.decoration.statue.StatueBlock;
import net.tslat.aoa3.block.functional.altar.*;
import net.tslat.aoa3.block.functional.crops.CropBlock;
import net.tslat.aoa3.block.functional.lamps.LampBlock;
import net.tslat.aoa3.block.functional.lights.LightBlock;
import net.tslat.aoa3.block.functional.lights.UnbreakableLightBlock;
import net.tslat.aoa3.block.functional.lights.VoxLight;
import net.tslat.aoa3.block.functional.liquids.CandiedWaterBlock;
import net.tslat.aoa3.block.functional.misc.*;
import net.tslat.aoa3.block.functional.portal.AncientCavernPortalBlock;
import net.tslat.aoa3.block.functional.portal.ImmortallisPortalBlock;
import net.tslat.aoa3.block.functional.portal.PortalBlock;
import net.tslat.aoa3.block.functional.saplings.*;
import net.tslat.aoa3.block.functional.spawners.SpawnerBlock;
import net.tslat.aoa3.block.functional.utility.*;
import net.tslat.aoa3.block.generation.dirt.DirtBlock;
import net.tslat.aoa3.block.generation.grass.GrassBlock;
import net.tslat.aoa3.block.generation.grass.UpsideDownGrassBlock;
import net.tslat.aoa3.block.generation.leaves.LeavesBlock;
import net.tslat.aoa3.block.generation.leaves.TranslucentLeavesBlock;
import net.tslat.aoa3.block.generation.misc.*;
import net.tslat.aoa3.block.generation.ores.OreBlock;
import net.tslat.aoa3.block.generation.plants.*;
import net.tslat.aoa3.block.generation.special.DimensionalFabric;
import net.tslat.aoa3.block.generation.special.DustopianLamp;
import net.tslat.aoa3.block.generation.special.DustopianLampOff;
import net.tslat.aoa3.block.generation.stone.DeeplandsStone;
import net.tslat.aoa3.block.generation.stone.StoneBlock;
import net.tslat.aoa3.block.generation.wood.LogBlock;
import net.tslat.aoa3.block.generation.wood.StranglewoodLog;
import net.tslat.aoa3.block.generation.wood.TentaclesEyeRed;
import net.tslat.aoa3.library.Enums;
import net.tslat.aoa3.utils.ConfigurationUtil;
import org.apache.logging.log4j.Level;

import javax.annotation.Nonnull;
import javax.annotation.Nullable;
import java.util.ArrayList;

import static net.tslat.aoa3.library.Enums.Deities.*;

@SuppressWarnings({"ConstantConditions", "unused"})
@Mod.EventBusSubscriber
@GameRegistry.ObjectHolder("aoa3")
public final class BlockRegister {
	private static ArrayList<BlockRegistryWrapper> blockRegistryList = new ArrayList<BlockRegistryWrapper>(1500);

	private static final String ORE_DICT_COBBLE = "cobblestone";
	private static final String ORE_DICT_FENCE_GATE_WOOD = "fenceGateWood";
	private static final String ORE_DICT_FENCE_WOOD = "fenceWood";
	private static final String ORE_DICT_GLASS = "blockGlass";
	private static final String ORE_DICT_LEAVES = "treeLeaves";
	private static final String ORE_DICT_PLANKS = "plankWood";
	private static final String ORE_DICT_SAND = "sand";
	private static final String ORE_DICT_SLAB_WOOD = "slabWood";
	private static final String ORE_DICT_STAIRS_WOOD = "stairWood";
	private static final String ORE_DICT_STONE = "stone";
	private static final String ORE_DICT_WOOD = "logWood";

	public static final BasicBlock ABYSS_STONE = null;
	public static final BasicBlock BARATHOS_HELLSTONE = ObjectHolder();
	public static final BasicBlock BARON_STONE = ObjectHolder();
	public static final BasicBlock BOREAN_STONE = ObjectHolder();
	public static final BasicBlock CREEP_STONE = ObjectHolder();
	public static final BasicBlock CRYSTEVIA_STONE = ObjectHolder();
	public static final BasicBlock DEEPLANDS_STONE = ObjectHolder();
	public static final BasicBlock DUSTOPIA_STONE = ObjectHolder();
	public static final BasicBlock GARDENCIA_STONE = ObjectHolder();
	public static final BasicBlock GRECKON_STONE = ObjectHolder();
	public static final BasicBlock HAVEN_STONE = ObjectHolder();
	public static final BasicBlock IROMINE_STONE = ObjectHolder();
	public static final BasicBlock LELYETIA_STONE = ObjectHolder();
	public static final BasicBlock MYSTERIUM_STONE = ObjectHolder();
	public static final BasicBlock HIGH_PRECASIA_STONE = ObjectHolder();
	public static final BasicBlock LOW_PRECASIA_STONE = ObjectHolder();
	public static final BasicBlock PRIMED_STONE = ObjectHolder();
	public static final BasicBlock RUNIC_STONE = ObjectHolder();
	public static final BasicBlock SHYRELANDS_STONE = ObjectHolder();
	public static final BasicBlock TOXIC_STONE = ObjectHolder();
	public static final BasicBlock UNSTABLE_STONE = ObjectHolder();

	public static final DirtBlock BOREAN_DIRT = ObjectHolder();
	public static final DirtBlock CANDYLAND_DIRT = ObjectHolder();
	public static final DirtBlock CELEVE_DIRT = ObjectHolder();
	public static final DirtBlock CREEPONIA_DIRT = ObjectHolder();
	public static final DirtBlock DUSTOPIA_DIRT = ObjectHolder();
	public static final DirtBlock GARDENCIA_DIRT = ObjectHolder();
	public static final DirtBlock GRECKON_DIRT = ObjectHolder();
	public static final DirtBlock HAVEN_DIRT = ObjectHolder();
	public static final DirtBlock LUNALYTE_DIRT = ObjectHolder();
	public static final DirtBlock LUNASOLE_DIRT = ObjectHolder();
	public static final DirtBlock MYSTERIUM_DIRT = ObjectHolder();
	public static final DirtBlock TOXIC_DIRT = ObjectHolder();

	public static final GrassBlock ABYSS_GRASS = ObjectHolder();
	public static final GrassBlock BOREAN_GRASS = ObjectHolder();
	public static final GrassBlock CANDYLAND_GRASS = ObjectHolder();
	public static final GrassBlock CELEVE_GRASS = ObjectHolder();
	public static final GrassBlock CREEPONIA_GRASS = ObjectHolder();
	public static final GrassBlock DUSTOPIA_GRASS = ObjectHolder();
	public static final GrassBlock GARDENCIA_GRASS = ObjectHolder();
	public static final GrassBlock GRECKON_GRASS = ObjectHolder();
	public static final GrassBlock HAVEN_GRASS = ObjectHolder();
	public static final GrassBlock IROMINE_GRASS = ObjectHolder();
	public static final GrassBlock LELYETIA_GRASS = ObjectHolder();
	public static final GrassBlock LELYETIA_DOWN_GRASS = ObjectHolder();
	public static final GrassBlock LUNALYTE_GRASS = ObjectHolder();
	public static final GrassBlock LUNASOLE_GRASS = ObjectHolder();
	public static final GrassBlock MYSTERIUM_GRASS = ObjectHolder();
	public static final GrassBlock PRECASIA_GRASS = ObjectHolder();
	public static final GrassBlock RUNIC_GRASS = ObjectHolder();
	public static final GrassBlock SHYRELANDS_GRASS = ObjectHolder();
	public static final GrassBlock TOXIC_GRASS = ObjectHolder();

	public static final OreBlock AMETHYST_ORE = ObjectHolder();
	public static final OreBlock BARONYTE_ORE = ObjectHolder();
	public static final OreBlock BLAZIUM_ORE = ObjectHolder();
	public static final OreBlock BLOODSTONE_ORE = ObjectHolder();
	public static final OreBlock BLUE_CRYSTAL_ORE = ObjectHolder();
	public static final OreBlock CHARGED_RUNIUM_ORE = ObjectHolder();
	public static final OreBlock CHESTBONE_FRAGMENTS_ORE = ObjectHolder();
	public static final OreBlock CRYSTALLITE_ORE = ObjectHolder();
	public static final OreBlock ELECANIUM_ORE = ObjectHolder();
	public static final OreBlock EMBERSTONE_ORE = ObjectHolder();
	public static final OreBlock FOOTBONE_FRAGMENTS_ORE = ObjectHolder();
	public static final OreBlock GEMENYTE_ORE = ObjectHolder();
	public static final OreBlock GHASTLY_ORE = ObjectHolder();
	public static final OreBlock GHOULISH_ORE = ObjectHolder();
	public static final OreBlock GREEN_CRYSTAL_ORE = ObjectHolder();
	public static final OreBlock JADE_ORE = ObjectHolder();
	public static final OreBlock JEWELYTE_ORE = ObjectHolder();
	public static final OreBlock LEGBONE_FRAGMENTS_ORE = ObjectHolder();
	public static final OreBlock LIMONITE_ORE = ObjectHolder();
	public static final OreBlock LYON_ORE = ObjectHolder();
	public static final OreBlock MYSTITE_ORE = ObjectHolder();
	public static final OreBlock ORNAMYTE_ORE = ObjectHolder();
	public static final OreBlock PURPLE_CRYSTAL_ORE = ObjectHolder();
	public static final OreBlock RED_CRYSTAL_ORE = ObjectHolder();
	public static final OreBlock ROSITE_ORE = ObjectHolder();
	public static final OreBlock RUNIUM_ORE = ObjectHolder();
	public static final OreBlock SAPPHIRE_ORE = ObjectHolder();
	public static final OreBlock SHYREGEM_ORE = ObjectHolder();
	public static final OreBlock SHYRESTONE_ORE = ObjectHolder();
	public static final OreBlock SKULLBONE_FRAGMENTS_ORE = ObjectHolder();
	public static final OreBlock VARSIUM_ORE = ObjectHolder();
	public static final OreBlock WHITE_CRYSTAL_ORE = ObjectHolder();
	public static final OreBlock YELLOW_CRYSTAL_ORE = ObjectHolder();

	public static final BasicBlock BARON_BRICKS = ObjectHolder();
	public static final BasicBlock BLACK_BRICKS = ObjectHolder();
	public static final BasicBlock BLOODSTONE_BRICKS = ObjectHolder();
	public static final BasicBlock BLUE_BRICKS = ObjectHolder();
	public static final BasicBlock BROWN_BRICKS = ObjectHolder();
	public static final BasicBlock CORAL_BRICKS = ObjectHolder();
	public static final BasicBlock CREEPONIA_BRICKS = ObjectHolder();
	public static final BasicBlock CRYSTALLITE_BRICKS = ObjectHolder();
	public static final BasicBlock CRYSTEVIA_BRICKS = ObjectHolder();
	public static final BasicBlock CYAN_BRICKS = ObjectHolder();
	public static final BasicBlock DARK_BRICKS = ObjectHolder();
	public static final BasicBlock DARK_BLUE_BRICKS = ObjectHolder();
	public static final BasicBlock DARK_GREY_BRICKS = ObjectHolder();
	public static final BasicBlock DARKWASH_BRICKS = ObjectHolder();
	public static final BasicBlock GARDENCIA_BRICKS = ObjectHolder();
	public static final BasicBlock GRECKON_BRICKS = ObjectHolder();
	public static final BasicBlock GREEN_BRICKS = ObjectHolder();
	public static final BasicBlock GREY_BRICKS = ObjectHolder();
	public static final BasicBlock HAUNTED_BRICKS = ObjectHolder();
	public static final BasicBlock IRO_DOTTED_BRICKS = ObjectHolder();
	public static final BasicBlock IRO_STRIPED_BRICKS = ObjectHolder();
	public static final BasicBlock LELYETIA_BRICKS = ObjectHolder();
	public static final BasicBlock LIME_BRICKS = ObjectHolder();
	public static final BasicBlock LUNAR_BRICKS = ObjectHolder();
	public static final BasicBlock MAGENTA_BRICKS = ObjectHolder();
	public static final BasicBlock BLACK_MYSTERIUM_BRICKS = ObjectHolder();
	public static final BasicBlock GREEN_MYSTERIUM_BRICKS = ObjectHolder();
	public static final BasicBlock ORANGE_BRICKS = ObjectHolder();
	public static final BasicBlock PINK_BRICKS = ObjectHolder();
	public static final BasicBlock PURPLE_BRICKS = ObjectHolder();
	public static final BasicBlock RED_BRICKS = ObjectHolder();
	public static final BasicBlock ROSIDIAN_BRICKS = ObjectHolder();
	public static final BasicBlock RUNIC_CONSTRUCT_BRICKS = ObjectHolder();
	public static final BasicBlock WHITE_SHYRE_BRICKS = ObjectHolder();
	public static final BasicBlock YELLOW_SHYRE_BRICKS = ObjectHolder();
	public static final BasicBlock SKELETAL_BRICKS = ObjectHolder();
	public static final BasicBlock WHITE_BRICKS = ObjectHolder();
	public static final BasicBlock WHITEWASH_BRICKS = ObjectHolder();
	public static final BasicBlock YELLOW_BRICKS = ObjectHolder();

	public static final BasicBlock INTRICATE_AMETHYST_IVORY = ObjectHolder();
	public static final BasicBlock NATURAL_AMETHYST_IVORY = ObjectHolder();
	public static final BasicBlock ORNATE_AMETHYST_IVORY = ObjectHolder();
	public static final BasicBlock PATTERNED_AMETHYST_IVORY = ObjectHolder();
	public static final BasicBlock INTRICATE_IVORY = ObjectHolder();
	public static final BasicBlock INTRICATE_JADE_IVORY = ObjectHolder();
	public static final BasicBlock NATURAL_JADE_IVORY = ObjectHolder();
	public static final BasicBlock ORNATE_JADE_IVORY = ObjectHolder();
	public static final BasicBlock PATTERNED_JADE_IVORY = ObjectHolder();
	public static final BasicBlock INTRICATE_LIMONITE_IVORY = ObjectHolder();
	public static final BasicBlock NATURAL_LIMONITE_IVORY = ObjectHolder();
	public static final BasicBlock ORNATE_LIMONITE_IVORY = ObjectHolder();
	public static final BasicBlock PATTERNED_LIMONITE_IVORY = ObjectHolder();
	public static final BasicBlock NATURAL_IVORY = ObjectHolder();
	public static final BasicBlock ORNATE_IVORY = ObjectHolder();
	public static final BasicBlock PATTERNED_IVORY = ObjectHolder();
	public static final BasicBlock INTRICATE_ROSITE_IVORY = ObjectHolder();
	public static final BasicBlock NATURAL_ROSITE_IVORY = ObjectHolder();
	public static final BasicBlock ORNATE_ROSITE_IVORY = ObjectHolder();
	public static final BasicBlock PATTERNED_ROSITE_IVORY = ObjectHolder();
	public static final BasicBlock INTRICATE_SAPPHIRE_IVORY = ObjectHolder();
	public static final BasicBlock NATURAL_SAPPHIRE_IVORY = ObjectHolder();
	public static final BasicBlock ORNATE_SAPPHIRE_IVORY = ObjectHolder();
	public static final BasicBlock PATTERNED_SAPPHIRE_IVORY = ObjectHolder();

	public static final LeavesBlock ACHONY_LEAVES = ObjectHolder();
	public static final LeavesBlock BLOOD_LEAVES = ObjectHolder();
	public static final LeavesBlock BLUE_CELEVUS_LEAVES = ObjectHolder();
	public static final LeavesBlock GREEN_CELEVUS_LEAVES = ObjectHolder();
	public static final LeavesBlock PURPLE_CELEVUS_LEAVES = ObjectHolder();
	public static final LeavesBlock RED_CELEVUS_LEAVES = ObjectHolder();
	public static final LeavesBlock WHITE_CELEVUS_LEAVES = ObjectHolder();
	public static final LeavesBlock YELLOW_CELEVUS_LEAVES = ObjectHolder();
	public static final LeavesBlock CHURRY_LEAVES = ObjectHolder();
	public static final LeavesBlock CREEP_LEAVES = ObjectHolder();
	public static final LeavesBlock CYCADE_LEAVES = ObjectHolder();
	public static final LeavesBlock DAWN_LEAVES = ObjectHolder();
	public static final LeavesBlock HAUNTED_LEAVES = ObjectHolder();
	public static final LeavesBlock HAUNTED_EYES_LEAVES = ObjectHolder();
	public static final LeavesBlock BLUE_HAVEN_LEAVES = ObjectHolder();
	public static final LeavesBlock PINK_HAVEN_LEAVES = ObjectHolder();
	public static final LeavesBlock PURPLE_HAVEN_LEAVES = ObjectHolder();
	public static final LeavesBlock RED_HAVEN_LEAVES = ObjectHolder();
	public static final LeavesBlock TURQUOISE_HAVEN_LEAVES = ObjectHolder();
	public static final LeavesBlock YELLOW_HAVEN_LEAVES = ObjectHolder();
	public static final LeavesBlock IRODUST_LEAVES = ObjectHolder();
	public static final LeavesBlock IROGOLD_LEAVES = ObjectHolder();
	public static final LeavesBlock LELYETIAN_LEAVES = ObjectHolder();
	public static final LeavesBlock LUCALUS_LEAVES = ObjectHolder();
	public static final LeavesBlock LUNICIA_LEAVES = ObjectHolder();
	public static final LeavesBlock LUNOSSO_LEAVES = ObjectHolder();
	public static final LeavesBlock RUNIC_LEAVES = ObjectHolder();
	public static final LeavesBlock SHADOW_LEAVES = ObjectHolder();
	public static final LeavesBlock SHADOWBLOOD_LEAVES = ObjectHolder();
	public static final LeavesBlock SHYRE_LEAVES = ObjectHolder();
	public static final LeavesBlock BRIGHT_SHYRE_LEAVES = ObjectHolder();
	public static final LeavesBlock STRANGLEWOOD_LEAVES = ObjectHolder();
	public static final LeavesBlock VEIN_LEAVES = ObjectHolder();

	public static final LogBlock ACHONY_LOG = ObjectHolder();
	public static final LogBlock BLOOD_LOG = ObjectHolder();
	public static final LogBlock CHURRY_LOG = ObjectHolder();
	public static final LogBlock CREEP_LOG = ObjectHolder();
	public static final LogBlock CYCADE_LOG = ObjectHolder();
	public static final LogBlock DAWN_LOG = ObjectHolder();
	public static final LogBlock EYEBALL_LOG = ObjectHolder();
	public static final LogBlock HAUNTED_LOG = ObjectHolder();
	public static final LogBlock HAUNTED_EYE_LOG = ObjectHolder();
	public static final LogBlock HAUNTED_EYES_LOG = ObjectHolder();
	public static final LogBlock HAUNTED_FLASHING_LOG = ObjectHolder();
	public static final LogBlock HAUNTED_PURPLING_LOG = ObjectHolder();
	public static final LogBlock IRO_LOG = ObjectHolder();
	public static final LogBlock LUCALUS_LOG = ObjectHolder();
	public static final LogBlock LUNIDE_LOG = ObjectHolder();
	public static final LogBlock RUNIC_LOG = ObjectHolder();
	public static final LogBlock SHADOW_LOG = ObjectHolder();
	public static final LogBlock SHYRE_LOG = ObjectHolder();
	public static final LogBlock STRANGLEWOOD_LOG = ObjectHolder();
	public static final LogBlock TOXIC_LOG = ObjectHolder();

	public static final BasicBlock ACHONY_PLANKS = ObjectHolder();
	public static final BasicBlock BLOODWOOD_PLANKS = ObjectHolder();
	public static final BasicBlock CHURRY_PLANKS = ObjectHolder();
	public static final BasicBlock CREEP_PLANKS = ObjectHolder();
	public static final BasicBlock CYCADE_PLANKS = ObjectHolder();
	public static final BasicBlock DAWNWOOD_PLANKS = ObjectHolder();
	public static final BasicBlock HAUNTEDWOOD_PLANKS = ObjectHolder();
	public static final BasicBlock IROWOOD_PLANKS = ObjectHolder();
	public static final BasicBlock LUCALUS_PLANKS = ObjectHolder();
	public static final BasicBlock LUNIDE_PLANKS = ObjectHolder();
	public static final BasicBlock RUNIC_PLANKS = ObjectHolder();
	public static final BasicBlock SHADOW_PLANKS = ObjectHolder();
	public static final BasicBlock SHYRE_PLANKS = ObjectHolder();
	public static final BasicBlock STRANGLEWOOD_PLANKS = ObjectHolder();
	public static final BasicBlock TOXICWOOD_PLANKS = ObjectHolder();

	public static final SlabBlock.DoubleSlabBlock DOUBLE_ACHONY_SLAB = ObjectHolder();
	public static final SlabBlock.DoubleSlabBlock DOUBLE_BARON_BRICKS_SLAB = ObjectHolder();
	public static final SlabBlock.DoubleSlabBlock DOUBLE_BLACK_BRICKS_SLAB = ObjectHolder();
	public static final SlabBlock.DoubleSlabBlock DOUBLE_BLOODSTONE_BRICKS_SLAB = ObjectHolder();
	public static final SlabBlock.DoubleSlabBlock DOUBLE_BLOODWOOD_SLAB = ObjectHolder();
	public static final SlabBlock.DoubleSlabBlock DOUBLE_BLUE_BRICKS_SLAB = ObjectHolder();
	public static final SlabBlock.DoubleSlabBlock DOUBLE_BROWN_BRICKS_SLAB = ObjectHolder();
	public static final SlabBlock.DoubleSlabBlock DOUBLE_CHURRY_SLAB = ObjectHolder();
	public static final SlabBlock.DoubleSlabBlock DOUBLE_CORAL_BRICKS_SLAB = ObjectHolder();
	public static final SlabBlock.DoubleSlabBlock DOUBLE_CREEP_SLAB = ObjectHolder();
	public static final SlabBlock.DoubleSlabBlock DOUBLE_CREEPONIA_BRICKS_SLAB = ObjectHolder();
	public static final SlabBlock.DoubleSlabBlock DOUBLE_CRYSTALLITE_BRICKS_SLAB = ObjectHolder();
	public static final SlabBlock.DoubleSlabBlock DOUBLE_CRYSTEVIA_BRICKS_SLAB = ObjectHolder();
	public static final SlabBlock.DoubleSlabBlock DOUBLE_CYAN_BRICKS_SLAB = ObjectHolder();
	public static final SlabBlock.DoubleSlabBlock DOUBLE_CYCADE_SLAB = ObjectHolder();
	public static final SlabBlock.DoubleSlabBlock DOUBLE_DARK_BLUE_BRICKS_SLAB = ObjectHolder();
	public static final SlabBlock.DoubleSlabBlock DOUBLE_DARK_BRICKS_SLAB = ObjectHolder();
	public static final SlabBlock.DoubleSlabBlock DOUBLE_DARK_GREY_BRICKS_SLAB = ObjectHolder();
	public static final SlabBlock.DoubleSlabBlock DOUBLE_DARKWASH_BRICKS_SLAB = ObjectHolder();
	public static final SlabBlock.DoubleSlabBlock DOUBLE_DAWNWOOD_SLAB = ObjectHolder();
	public static final SlabBlock.DoubleSlabBlock DOUBLE_GARDENCIA_BRICKS_SLAB = ObjectHolder();
	public static final SlabBlock.DoubleSlabBlock DOUBLE_GRECKON_BRICKS_SLAB = ObjectHolder();
	public static final SlabBlock.DoubleSlabBlock DOUBLE_GREEN_BRICKS_SLAB = ObjectHolder();
	public static final SlabBlock.DoubleSlabBlock DOUBLE_GREY_BRICKS_SLAB = ObjectHolder();
	public static final SlabBlock.DoubleSlabBlock DOUBLE_HAUNTED_BRICKS_SLAB = ObjectHolder();
	public static final SlabBlock.DoubleSlabBlock DOUBLE_HAUNTEDWOOD_SLAB = ObjectHolder();
	public static final SlabBlock.DoubleSlabBlock DOUBLE_IRO_DOTTED_BRICKS_SLAB = ObjectHolder();
	public static final SlabBlock.DoubleSlabBlock DOUBLE_IRO_STRIPED_BRICKS_SLAB = ObjectHolder();
	public static final SlabBlock.DoubleSlabBlock DOUBLE_IROWOOD_SLAB = ObjectHolder();
	public static final SlabBlock.DoubleSlabBlock DOUBLE_INTRICATE_AMETHYST_IVORY_SLAB = ObjectHolder();
	public static final SlabBlock.DoubleSlabBlock DOUBLE_NATURAL_AMETHYST_IVORY_SLAB = ObjectHolder();
	public static final SlabBlock.DoubleSlabBlock DOUBLE_ORNATE_AMETHYST_IVORY_SLAB = ObjectHolder();
	public static final SlabBlock.DoubleSlabBlock DOUBLE_PATTERNED_AMETHYST_IVORY_SLAB = ObjectHolder();
	public static final SlabBlock.DoubleSlabBlock DOUBLE_INTRICATE_IVORY_SLAB = ObjectHolder();
	public static final SlabBlock.DoubleSlabBlock DOUBLE_INTRICATE_JADE_IVORY_SLAB = ObjectHolder();
	public static final SlabBlock.DoubleSlabBlock DOUBLE_NATURAL_JADE_IVORY_SLAB = ObjectHolder();
	public static final SlabBlock.DoubleSlabBlock DOUBLE_ORNATE_JADE_IVORY_SLAB = ObjectHolder();
	public static final SlabBlock.DoubleSlabBlock DOUBLE_PATTERNED_JADE_IVORY_SLAB = ObjectHolder();
	public static final SlabBlock.DoubleSlabBlock DOUBLE_INTRICATE_LIMONITE_IVORY_SLAB = ObjectHolder();
	public static final SlabBlock.DoubleSlabBlock DOUBLE_NATURAL_LIMONITE_IVORY_SLAB = ObjectHolder();
	public static final SlabBlock.DoubleSlabBlock DOUBLE_ORNATE_LIMONITE_IVORY_SLAB = ObjectHolder();
	public static final SlabBlock.DoubleSlabBlock DOUBLE_PATTERNED_LIMONITE_IVORY_SLAB = ObjectHolder();
	public static final SlabBlock.DoubleSlabBlock DOUBLE_NATURAL_IVORY_SLAB = ObjectHolder();
	public static final SlabBlock.DoubleSlabBlock DOUBLE_ORNATE_IVORY_SLAB = ObjectHolder();
	public static final SlabBlock.DoubleSlabBlock DOUBLE_PATTERNED_IVORY_SLAB = ObjectHolder();
	public static final SlabBlock.DoubleSlabBlock DOUBLE_INTRICATE_ROSITE_IVORY_SLAB = ObjectHolder();
	public static final SlabBlock.DoubleSlabBlock DOUBLE_NATURAL_ROSITE_IVORY_SLAB = ObjectHolder();
	public static final SlabBlock.DoubleSlabBlock DOUBLE_ORNATE_ROSITE_IVORY_SLAB = ObjectHolder();
	public static final SlabBlock.DoubleSlabBlock DOUBLE_PATTERNED_ROSITE_IVORY_SLAB = ObjectHolder();
	public static final SlabBlock.DoubleSlabBlock DOUBLE_INTRICATE_SAPPHIRE_IVORY_SLAB = ObjectHolder();
	public static final SlabBlock.DoubleSlabBlock DOUBLE_NATURAL_SAPPHIRE_IVORY_SLAB = ObjectHolder();
	public static final SlabBlock.DoubleSlabBlock DOUBLE_ORNATE_SAPPHIRE_IVORY_SLAB = ObjectHolder();
	public static final SlabBlock.DoubleSlabBlock DOUBLE_PATTERNED_SAPPHIRE_IVORY_SLAB = ObjectHolder();
	public static final SlabBlock.DoubleSlabBlock DOUBLE_LELYETIA_BRICKS_SLAB = ObjectHolder();
	public static final SlabBlock.DoubleSlabBlock DOUBLE_LIME_BRICKS_SLAB = ObjectHolder();
	public static final SlabBlock.DoubleSlabBlock DOUBLE_LUCALUS_SLAB = ObjectHolder();
	public static final SlabBlock.DoubleSlabBlock DOUBLE_LUNAR_BRICKS_SLAB = ObjectHolder();
	public static final SlabBlock.DoubleSlabBlock DOUBLE_LUNIDE_SLAB = ObjectHolder();
	public static final SlabBlock.DoubleSlabBlock DOUBLE_MAGENTA_BRICKS_SLAB = ObjectHolder();
	public static final SlabBlock.DoubleSlabBlock DOUBLE_BLACK_MYSTERIUM_BRICKS_SLAB = ObjectHolder();
	public static final SlabBlock.DoubleSlabBlock DOUBLE_GREEN_MYSTERIUM_BRICKS_SLAB = ObjectHolder();
	public static final SlabBlock.DoubleSlabBlock DOUBLE_ORANGE_BRICKS_SLAB = ObjectHolder();
	public static final SlabBlock.DoubleSlabBlock DOUBLE_PINK_BRICKS_SLAB = ObjectHolder();
	public static final SlabBlock.DoubleSlabBlock DOUBLE_PURPLE_BRICKS_SLAB = ObjectHolder();
	public static final SlabBlock.DoubleSlabBlock DOUBLE_RED_BRICKS_SLAB = ObjectHolder();
	public static final SlabBlock.DoubleSlabBlock DOUBLE_ROSIDIAN_BRICKS_SLAB = ObjectHolder();
	public static final SlabBlock.DoubleSlabBlock DOUBLE_RUNIC_SLAB = ObjectHolder();
	public static final SlabBlock.DoubleSlabBlock DOUBLE_RUNIC_CONSTRUCT_BRICKS_SLAB = ObjectHolder();
	public static final SlabBlock.DoubleSlabBlock DOUBLE_SHADOW_SLAB = ObjectHolder();
	public static final SlabBlock.DoubleSlabBlock DOUBLE_SHYRE_SLAB = ObjectHolder();
	public static final SlabBlock.DoubleSlabBlock DOUBLE_WHITE_SHYRE_BRICKS_SLAB = ObjectHolder();
	public static final SlabBlock.DoubleSlabBlock DOUBLE_YELLOW_SHYRE_BRICKS_SLAB = ObjectHolder();
	public static final SlabBlock.DoubleSlabBlock DOUBLE_SKELETAL_BRICKS_SLAB = ObjectHolder();
	public static final SlabBlock.DoubleSlabBlock DOUBLE_STRANGLEWOOD_SLAB = ObjectHolder();
	public static final SlabBlock.DoubleSlabBlock DOUBLE_TOXICWOOD_SLAB = ObjectHolder();
	public static final SlabBlock.DoubleSlabBlock DOUBLE_WHITEWASH_BRICKS_SLAB = ObjectHolder();
	public static final SlabBlock.DoubleSlabBlock DOUBLE_YELLOW_BRICKS_SLAB = ObjectHolder();

	public static final StairsBlock ACHONY_STAIRS = ObjectHolder();
	public static final StairsBlock BARON_BRICKS_STAIRS = ObjectHolder();
	public static final StairsBlock BLACK_BRICKS_STAIRS = ObjectHolder();
	public static final StairsBlock BLOODSTONE_BRICKS_STAIRS = ObjectHolder();
	public static final StairsBlock BLOODWOOD_STAIRS = ObjectHolder();
	public static final StairsBlock BLUE_BRICKS_STAIRS = ObjectHolder();
	public static final StairsBlock BROWN_BRICKS_STAIRS = ObjectHolder();
	public static final StairsBlock CHURRY_STAIRS = ObjectHolder();
	public static final StairsBlock CORAL_BRICKS_STAIRS = ObjectHolder();
	public static final StairsBlock CREEP_STAIRS = ObjectHolder();
	public static final StairsBlock CREEPONIA_BRICKS_STAIRS = ObjectHolder();
	public static final StairsBlock CRYSTALLITE_BRICKS_STAIRS = ObjectHolder();
	public static final StairsBlock CRYSTEVIA_BRICKS_STAIRS = ObjectHolder();
	public static final StairsBlock CYAN_BRICKS_STAIRS = ObjectHolder();
	public static final StairsBlock CYCADE_STAIRS = ObjectHolder();
	public static final StairsBlock DARK_BLUE_BRICKS_STAIRS = ObjectHolder();
	public static final StairsBlock DARK_BRICKS_STAIRS = ObjectHolder();
	public static final StairsBlock DARK_GREY_BRICKS_STAIRS = ObjectHolder();
	public static final StairsBlock DARKWASH_BRICKS_STAIRS = ObjectHolder();
	public static final StairsBlock DAWNWOOD_STAIRS = ObjectHolder();
	public static final StairsBlock GARDENCIA_BRICKS_STAIRS = ObjectHolder();
	public static final StairsBlock GRECKON_BRICKS_STAIRS = ObjectHolder();
	public static final StairsBlock GREEN_BRICKS_STAIRS = ObjectHolder();
	public static final StairsBlock GREY_BRICKS_STAIRS = ObjectHolder();
	public static final StairsBlock HAUNTED_BRICKS_STAIRS = ObjectHolder();
	public static final StairsBlock HAUNTEDWOOD_STAIRS = ObjectHolder();
	public static final StairsBlock IRO_DOTTED_BRICKS_STAIRS = ObjectHolder();
	public static final StairsBlock IRO_STRIPED_BRICKS_STAIRS = ObjectHolder();
	public static final StairsBlock IROWOOD_STAIRS = ObjectHolder();
	public static final StairsBlock INTRICATE_AMETHYST_IVORY_STAIRS = ObjectHolder();
	public static final StairsBlock NATURAL_AMETHYST_IVORY_STAIRS = ObjectHolder();
	public static final StairsBlock ORNATE_AMETHYST_IVORY_STAIRS = ObjectHolder();
	public static final StairsBlock PATTERNED_AMETHYST_IVORY_STAIRS = ObjectHolder();
	public static final StairsBlock INTRICATE_IVORY_STAIRS = ObjectHolder();
	public static final StairsBlock INTRICATE_JADE_IVORY_STAIRS = ObjectHolder();
	public static final StairsBlock NATURAL_JADE_IVORY_STAIRS = ObjectHolder();
	public static final StairsBlock ORNATE_JADE_IVORY_STAIRS = ObjectHolder();
	public static final StairsBlock PATTERNED_JADE_IVORY_STAIRS = ObjectHolder();
	public static final StairsBlock INTRICATE_LIMONITE_IVORY_STAIRS = ObjectHolder();
	public static final StairsBlock NATURAL_LIMONITE_IVORY_STAIRS = ObjectHolder();
	public static final StairsBlock ORNATE_LIMONITE_IVORY_STAIRS = ObjectHolder();
	public static final StairsBlock PATTERNED_LIMONITE_IVORY_STAIRS = ObjectHolder();
	public static final StairsBlock NATURAL_IVORY_STAIRS = ObjectHolder();
	public static final StairsBlock ORNATE_IVORY_STAIRS = ObjectHolder();
	public static final StairsBlock PATTERNED_IVORY_STAIRS = ObjectHolder();
	public static final StairsBlock INTRICATE_ROSITE_IVORY_STAIRS = ObjectHolder();
	public static final StairsBlock NATURAL_ROSITE_IVORY_STAIRS = ObjectHolder();
	public static final StairsBlock ORNATE_ROSITE_IVORY_STAIRS = ObjectHolder();
	public static final StairsBlock PATTERNED_ROSITE_IVORY_STAIRS = ObjectHolder();
	public static final StairsBlock INTRICATE_SAPPHIRE_IVORY_STAIRS = ObjectHolder();
	public static final StairsBlock NATURAL_SAPPHIRE_IVORY_STAIRS = ObjectHolder();
	public static final StairsBlock ORNATE_SAPPHIRE_IVORY_STAIRS = ObjectHolder();
	public static final StairsBlock PATTERNED_SAPPHIRE_IVORY_STAIRS = ObjectHolder();
	public static final StairsBlock LELYETIA_BRICKS_STAIRS = ObjectHolder();
	public static final StairsBlock LIME_BRICKS_STAIRS = ObjectHolder();
	public static final StairsBlock LUCALUS_STAIRS = ObjectHolder();
	public static final StairsBlock LUNAR_BRICKS_STAIRS = ObjectHolder();
	public static final StairsBlock LUNIDE_STAIRS = ObjectHolder();
	public static final StairsBlock MAGENTA_BRICKS_STAIRS = ObjectHolder();
	public static final StairsBlock BLACK_MYSTERIUM_BRICKS_STAIRS = ObjectHolder();
	public static final StairsBlock GREEN_MYSTERIUM_BRICKS_STAIRS = ObjectHolder();
	public static final StairsBlock ORANGE_BRICKS_STAIRS = ObjectHolder();
	public static final StairsBlock PINK_BRICKS_STAIRS = ObjectHolder();
	public static final StairsBlock PURPLE_BRICKS_STAIRS = ObjectHolder();
	public static final StairsBlock RED_BRICKS_STAIRS = ObjectHolder();
	public static final StairsBlock ROSIDIAN_BRICKS_STAIRS = ObjectHolder();
	public static final StairsBlock RUNIC_STAIRS = ObjectHolder();
	public static final StairsBlock RUNIC_CONSTRUCT_BRICKS_STAIRS = ObjectHolder();
	public static final StairsBlock SHADOW_STAIRS = ObjectHolder();
	public static final StairsBlock SHYRE_STAIRS = ObjectHolder();
	public static final StairsBlock WHITE_SHYRE_BRICKS_STAIRS = ObjectHolder();
	public static final StairsBlock YELLOW_SHYRE_BRICKS_STAIRS = ObjectHolder();
	public static final StairsBlock SKELETAL_BRICKS_STAIRS = ObjectHolder();
	public static final StairsBlock STRANGLEWOOD_STAIRS = ObjectHolder();
	public static final StairsBlock TOXICWOOD_STAIRS = ObjectHolder();
	public static final StairsBlock WHITEWASH_BRICKS_STAIRS = ObjectHolder();
	public static final StairsBlock YELLOW_BRICKS_STAIRS = ObjectHolder();

	public static final FenceBlock ACHONY_FENCE = ObjectHolder();
	public static final FenceBlock BLOODWOOD_FENCE = ObjectHolder();
	public static final FenceBlock CHURRY_FENCE = ObjectHolder();
	public static final FenceBlock CREEP_FENCE = ObjectHolder();
	public static final FenceBlock CYCADE_FENCE = ObjectHolder();
	public static final FenceBlock DAWNWOOD_FENCE = ObjectHolder();
	public static final FenceBlock HAUNTEDWOOD_FENCE = ObjectHolder();
	public static final FenceBlock IROWOOD_FENCE = ObjectHolder();
	public static final FenceBlock LUCALUS_FENCE = ObjectHolder();
	public static final FenceBlock LUNIDE_FENCE = ObjectHolder();
	public static final FenceBlock RUNIC_FENCE = ObjectHolder();
	public static final FenceBlock SHADOW_FENCE = ObjectHolder();
	public static final FenceBlock SHYRE_FENCE = ObjectHolder();
	public static final FenceBlock STRANGLEWOOD_FENCE = ObjectHolder();
	public static final FenceBlock TOXICWOOD_FENCE = ObjectHolder();
	public static final FenceBlock TWINKLESTONE_FENCE = ObjectHolder();

	public static final GateBlock ACHONY_GATE = ObjectHolder();
	public static final GateBlock BLOODWOOD_GATE = ObjectHolder();
	public static final GateBlock CHURRY_GATE = ObjectHolder();
	public static final GateBlock CREEP_GATE = ObjectHolder();
	public static final GateBlock CYCADE_GATE = ObjectHolder();
	public static final GateBlock DAWNWOOD_GATE = ObjectHolder();
	public static final GateBlock HAUNTEDWOOD_GATE = ObjectHolder();
	public static final GateBlock IROWOOD_GATE = ObjectHolder();
	public static final GateBlock LUCALUS_GATE = ObjectHolder();
	public static final GateBlock LUNIDE_GATE = ObjectHolder();
	public static final GateBlock RUNIC_GATE = ObjectHolder();
	public static final GateBlock SHADOW_GATE = ObjectHolder();
	public static final GateBlock SHYRE_GATE = ObjectHolder();
	public static final GateBlock STRANGLEWOOD_GATE = ObjectHolder();
	public static final GateBlock TOXICWOOD_GATE = ObjectHolder();

	public static final BasicBlock FLOWER_CORE = ObjectHolder();
	public static final BasicBlock BLACK_MUSHROOM = ObjectHolder();
	public static final BasicBlock BLUE_MUSHROOM_INSIDE = ObjectHolder();
	public static final BasicBlock BLUE_MUSHROOM_OUTSIDE = ObjectHolder();
	public static final BasicBlock GREEN_MUSHROOM_INSIDE = ObjectHolder();
	public static final BasicBlock GREEN_MUSHROOM_OUTSIDE = ObjectHolder();
	public static final BasicBlock ORANGE_MUSHROOM_INSIDE = ObjectHolder();
	public static final BasicBlock ORANGE_MUSHROOM_OUTSIDE = ObjectHolder();
	public static final BasicBlock PURPLE_MUSHROOM_INSIDE = ObjectHolder();
	public static final BasicBlock PURPLE_MUSHROOM_OUTSIDE = ObjectHolder();
	public static final BasicBlock BLACK_MUSHROOM_STEM = ObjectHolder();
	public static final BasicBlock BLUE_MUSHROOM_STEM = ObjectHolder();
	public static final BasicBlock GREEN_MUSHROOM_STEM = ObjectHolder();
	public static final BasicBlock ORANGE_MUSHROOM_STEM = ObjectHolder();
	public static final BasicBlock PURPLE_MUSHROOM_STEM = ObjectHolder();
	public static final BasicBlock YELLOW_MUSHROOM_STEM = ObjectHolder();
	public static final BasicBlock YELLOW_MUSHROOM_INSIDE = ObjectHolder();
	public static final BasicBlock YELLOW_MUSHROOM_OUTSIDE = ObjectHolder();
	public static final BasicBlock PLANT_STEM = ObjectHolder();

	public static final BasicFluidBlock CANDIED_WATER = ObjectHolder();

	public static final LightBlock ANCIENT_LIGHT = ObjectHolder();
	public static final LightBlock ARCHAIC_LIGHT = ObjectHolder();
	public static final LightBlock ARCHAIC_LIGHT_BREAKABLE = ObjectHolder();
	public static final LightBlock CREEP_CRYSTAL = ObjectHolder();
	public static final LightBlock DARKSTONE = ObjectHolder();
	public static final LightBlock DEEP_CRYSTAL = ObjectHolder();
	public static final LightBlock HIVE_LIGHT = ObjectHolder();
	public static final LightBlock STEEL_LIGHT = ObjectHolder();
	public static final LightBlock TWINKLESTONE = ObjectHolder();
	public static final LightBlock VOX_LIGHT = ObjectHolder();

	public static final LampBlock AMETHYST_LAMP = ObjectHolder();
	public static final LampBlock AQUATIC_LAMP = ObjectHolder();
	public static final LampBlock BARONYTE_LAMP = ObjectHolder();
	public static final LampBlock BLAZIUM_LAMP = ObjectHolder();
	public static final LampBlock BLOODSTONE_LAMP = ObjectHolder();
	public static final LampBlock CRYSTALLITE_LAMP = ObjectHolder();
	public static final LampBlock ELECANIUM_LAMP = ObjectHolder();
	public static final LampBlock EMBERSTONE_LAMP = ObjectHolder();
	public static final LampBlock FIRE_LAMP = ObjectHolder();
	public static final LampBlock GHASTLY_LAMP = ObjectHolder();
	public static final LampBlock GHOULISH_LAMP = ObjectHolder();
	public static final LampBlock IRO_LAMP = ObjectHolder();
	public static final LampBlock IVORY_LAMP = ObjectHolder();
	public static final LampBlock IVORY_AMETHYST_LAMP = ObjectHolder();
	public static final LampBlock IVORY_JADE_LAMP = ObjectHolder();
	public static final LampBlock IVORY_LIMONITE_LAMP = ObjectHolder();
	public static final LampBlock IVORY_ROSITE_LAMP = ObjectHolder();
	public static final LampBlock IVORY_SAPPHIRE_LAMP = ObjectHolder();
	public static final LampBlock JADE_LAMP = ObjectHolder();
	public static final LampBlock AQUA_LIFE_LAMP = ObjectHolder();
	public static final LampBlock BLACK_LIFE_LAMP = ObjectHolder();
	public static final LampBlock BLUE_LIFE_LAMP = ObjectHolder();
	public static final LampBlock BROWN_LIFE_LAMP = ObjectHolder();
	public static final LampBlock CYAN_LIFE_LAMP = ObjectHolder();
	public static final LampBlock DARK_GREY_LIFE_LAMP = ObjectHolder();
	public static final LampBlock GREEN_LIFE_LAMP = ObjectHolder();
	public static final LampBlock GREY_LIFE_LAMP = ObjectHolder();
	public static final LampBlock LIME_LIFE_LAMP = ObjectHolder();
	public static final LampBlock MAGENTA_LIFE_LAMP = ObjectHolder();
	public static final LampBlock ORANGE_LIFE_LAMP = ObjectHolder();
	public static final LampBlock PINK_LIFE_LAMP = ObjectHolder();
	public static final LampBlock PURPLE_LIFE_LAMP = ObjectHolder();
	public static final LampBlock RED_LIFE_LAMP = ObjectHolder();
	public static final LampBlock WHITE_LIFE_LAMP = ObjectHolder();
	public static final LampBlock YELLOW_LIFE_LAMP = ObjectHolder();
	public static final LampBlock LIMONITE_LAMP = ObjectHolder();
	public static final LampBlock LUNAR_LAMP = ObjectHolder();
	public static final LampBlock LYON_LAMP = ObjectHolder();
	public static final LampBlock MYSTIC_LAMP = ObjectHolder();
	public static final LampBlock NEON_LAMP = ObjectHolder();
	public static final LampBlock NEON_CIRCLING_LAMP = ObjectHolder();
	public static final LampBlock NEON_LAPIS_LAMP = ObjectHolder();
	public static final LampBlock NEON_LAPIS_CIRCLING_LAMP = ObjectHolder();
	public static final LampBlock NEON_LAPIS_TRIANGLES_LAMP = ObjectHolder();
	public static final LampBlock NEON_RUNIC_LAMP = ObjectHolder();
	public static final LampBlock NEON_TRIANGLES_LAMP = ObjectHolder();
	public static final LampBlock ROSITE_LAMP = ObjectHolder();
	public static final LampBlock SAPPHIRE_LAMP = ObjectHolder();
	public static final LampBlock SKELETAL_LAMP = ObjectHolder();

	public static final GlassBlock ABYSSAL_GLASS = ObjectHolder();
	public static final GlassBlock ANCIENT_GLASS = ObjectHolder();
	public static final GlassBlock AQUATIC_GLASS = ObjectHolder();
	public static final GlassBlock ARCHAIC_GLASS = ObjectHolder();
	public static final GlassBlock ARCHAIC_GLASS_BREAKABLE = ObjectHolder();
	public static final GlassBlock BARON_GLASS = ObjectHolder();
	public static final GlassBlock DECAYED_GLASS = ObjectHolder();
	public static final GlassBlock GARDENCIAN_GLASS = ObjectHolder();
	public static final GlassBlock HAVEN_GLASS = ObjectHolder();
	public static final GlassBlock IRO_GLASS = ObjectHolder();
	public static final GlassBlock LELYETIAN_GLASS = ObjectHolder();
	public static final GlassBlock LUNAR_GLASS = ObjectHolder();
	public static final GlassBlock RUNIC_GLASS = ObjectHolder();
	public static final GlassBlock UNBREAKABLE_RUNIC_GLASS = ObjectHolder();
	public static final GlassBlock SHYRE_GLASS = ObjectHolder();
	public static final GlassBlock VOX_GLASS = ObjectHolder();
	public static final GlassBlock ZHINX_GLASS = ObjectHolder();

	public static final CompressedBlock AMETHYST_BLOCK = ObjectHolder();
	public static final CompressedBlock BARONYTE_BLOCK = ObjectHolder();
	public static final CompressedBlock BLAZIUM_BLOCK = ObjectHolder();
	public static final CompressedBlock BLOODSTONE_BLOCK = ObjectHolder();
	public static final CompressedBlock CRYSTALLITE_BLOCK = ObjectHolder();
	public static final CompressedBlock ELECANIUM_BLOCK = ObjectHolder();
	public static final CompressedBlock EMBERSTONE_BLOCK = ObjectHolder();
	public static final CompressedBlock GEMENYTE_BLOCK = ObjectHolder();
	public static final CompressedBlock GHASTLY_BLOCK = ObjectHolder();
	public static final CompressedBlock GHOULISH_BLOCK = ObjectHolder();
	public static final CompressedBlock JADE_BLOCK = ObjectHolder();
	public static final CompressedBlock JEWELYTE_BLOCK = ObjectHolder();
	public static final CompressedBlock LIMONITE_BLOCK = ObjectHolder();
	public static final CompressedBlock LUNAR_BLOCK = ObjectHolder();
	public static final CompressedBlock LYON_BLOCK = ObjectHolder();
	public static final CompressedBlock MYSTITE_BLOCK = ObjectHolder();
	public static final CompressedBlock ORNAMYTE_BLOCK = ObjectHolder();
	public static final CompressedBlock ROSITE_BLOCK = ObjectHolder();
	public static final CompressedBlock SAPPHIRE_BLOCK = ObjectHolder();
	public static final CompressedBlock SHYREGEM_BLOCK = ObjectHolder();
	public static final CompressedBlock SHYRESTONE_BLOCK = ObjectHolder();
	public static final CompressedBlock SKELETAL_INGOT_BLOCK = ObjectHolder();
	public static final CompressedBlock VARSIUM_BLOCK = ObjectHolder();

	public static final CarpetBlock BARON_CARPET = ObjectHolder();
	public static final CarpetBlock BOREAN_CARPET = ObjectHolder();
	public static final CarpetBlock GARDENCIAN_CARPET = ObjectHolder();
	public static final CarpetBlock IRO_CARPET = ObjectHolder();
	public static final CarpetBlock LUNAR_CARPET = ObjectHolder();

	public static final BasicBlock CRYSTALLANIUM = ObjectHolder();
	public static final BasicBlock EMBERIUM = ObjectHolder();
	public static final BasicBlock SHADONANTIUM = ObjectHolder();
	public static final BasicBlock SKELETANIUM = ObjectHolder();

	public static final BasicBlock ANCIENT_ROCK = ObjectHolder();
	public static final BasicBlock BLACK_ANCIENT_TILE = ObjectHolder();
	public static final BasicBlock ANCIENT_TILE_CORE = ObjectHolder();
	public static final BasicBlock GREEN_ANCIENT_TILE = ObjectHolder();
	public static final BasicBlock ANCIENT_TILE_SHRINE = ObjectHolder();
	public static final BasicBlock WHITE_ANCIENT_TILE = ObjectHolder();
	public static final BasicBlock ARCHAIC_DIRT = ObjectHolder();
	public static final BasicBlock ARCHAIC_DIRT_BREAKABLE = ObjectHolder();
	public static final BasicBlock ARCHAIC_STREAM_HORIZONTAL = ObjectHolder();
	public static final BasicBlock ARCHAIC_STREAM_HORIZONTAL_BREAKABLE = ObjectHolder();
	public static final BasicBlock ARCHAIC_RECTANGLES = ObjectHolder();
	public static final BasicBlock ARCHAIC_RECTANGLES_BREAKABLE = ObjectHolder();
	public static final BasicBlock ARCHAIC_SQUARES = ObjectHolder();
	public static final BasicBlock ARCHAIC_SQUARES_BREAKABLE = ObjectHolder();
	public static final BasicBlock ARCHAIC_TILES = ObjectHolder();
	public static final BasicBlock ARCHAIC_TILES_BREAKABLE = ObjectHolder();
	public static final BasicBlock ARCHAIC_STREAM_VERTICAL = ObjectHolder();
	public static final BasicBlock ARCHAIC_STREAM_VERTICAL_BREAKABLE = ObjectHolder();
	public static final BasicBlock BARON_CASTLE_WALL = ObjectHolder();
	public static final BasicBlock BARON_CUBE = ObjectHolder();
	public static final BasicBlock BARON_GROUND = ObjectHolder();
	public static final BasicBlock BLOODSTONE_BAR_BRICKS = ObjectHolder();
	public static final BasicBlock BLOODSTONE_BARS = ObjectHolder();
	public static final BasicBlock GREEN_CANDY = ObjectHolder();
	public static final BasicBlock RED_CANDY = ObjectHolder();
	public static final BasicBlock WHITE_CANDY = ObjectHolder();
	public static final BasicBlock CHOCOLATE_BLOCK = ObjectHolder();
	public static final BasicBlock DARK_CHOCOLATE_BLOCK = ObjectHolder();
	public static final BasicBlock WHITE_CHOCOLATE_BLOCK = ObjectHolder();
	public static final BasicBlock COG_BLOCK = ObjectHolder();
	public static final BasicBlock BLUE_CORAL = ObjectHolder();
	public static final BasicBlock GREEN_CORAL = ObjectHolder();
	public static final BasicBlock ORANGE_CORAL = ObjectHolder();
	public static final BasicBlock PINK_CORAL = ObjectHolder();
	public static final BasicBlock WHITE_CORAL = ObjectHolder();
	public static final BasicBlock YELLOW_CORAL = ObjectHolder();
	public static final BasicBlock AQUA_COTTON_CANDY = ObjectHolder();
	public static final BasicBlock PINK_COTTON_CANDY = ObjectHolder();
	public static final BasicBlock CRATE = ObjectHolder();
	public static final BasicBlock BLUE_CRYSTAL_BLOCK = ObjectHolder();
	public static final BasicBlock GREEN_CRYSTAL_BLOCK = ObjectHolder();
	public static final BasicBlock PURPLE_CRYSTAL_BLOCK = ObjectHolder();
	public static final BasicBlock RED_CRYSTAL_BLOCK = ObjectHolder();
	public static final BasicBlock WHITE_CRYSTAL_BLOCK = ObjectHolder();
	public static final BasicBlock YELLOW_CRYSTAL_BLOCK = ObjectHolder();
	public static final BasicBlock DARK_FACE_BRICK = ObjectHolder();
	public static final BasicBlock DEEPLANDS_TRAP_EXPLOSION = ObjectHolder();
	public static final BasicBlock DEEPLANDS_TRAP_LAVA = ObjectHolder();
	public static final BasicBlock DEEPLANDS_TRAP_NIPPER = ObjectHolder();
	public static final BasicBlock DEGRADED_STEEL = ObjectHolder();
	public static final BasicBlock EYE_BLOCK = ObjectHolder();
	public static final BasicBlock GIANT_SNAIL_ACID = ObjectHolder();
	public static final BasicBlock GINGERBREAD = ObjectHolder();
	public static final BasicBlock HIVE_WALL = ObjectHolder();
	public static final BasicBlock IRO_BRICK_TRAP = ObjectHolder();
	public static final BasicBlock IROPOLE = ObjectHolder();
	public static final BasicBlock KAIYU_TEMPLE_BLOCK_FACE = ObjectHolder();
	public static final BasicBlock KAIYU_TEMPLE_BLOCK_FLOW = ObjectHolder();
	public static final BasicBlock KAIYU_TEMPLE_BLOCK_MAZE = ObjectHolder();
	public static final BasicBlock KAIYU_TEMPLE_BLOCK_PASS = ObjectHolder();
	public static final BasicBlock KAIYU_TEMPLE_BLOCK_PLAIN = ObjectHolder();
	public static final BasicBlock KAIYU_TEMPLE_BLOCK_SQUARES = ObjectHolder();
	public static final BasicBlock KAIYU_TEMPLE_BLOCK_TRACK = ObjectHolder();
	public static final BasicBlock KAIYU_TEMPLE_TRAP_FLOW = ObjectHolder();
	public static final BasicBlock KAIYU_TEMPLE_TRAP_MAZE = ObjectHolder();
	public static final BasicBlock KAIYU_TEMPLE_TRAP_PASS = ObjectHolder();
	public static final BasicBlock KAIYU_TEMPLE_TRAP_SQUARES = ObjectHolder();
	public static final BasicBlock DARKLIGHT_ORB = ObjectHolder();
	public static final BasicBlock DUSK_ORB = ObjectHolder();
	public static final BasicBlock LUNAR_ORB = ObjectHolder();
	public static final BasicBlock MOONLIGHT_ORB = ObjectHolder();
	public static final BasicBlock SUNFIRE_ORB = ObjectHolder();
	public static final BasicBlock LUNAR_PAD = ObjectHolder();
	public static final BasicBlock ORANGE_ACID = ObjectHolder();
	public static final BasicBlock PARAVITE_HIVE = ObjectHolder();
	public static final BasicBlock BLACK_PETALS = ObjectHolder();
	public static final BasicBlock BLUE_PETALS = ObjectHolder();
	public static final BasicBlock LIGHT_BLUE_PETALS = ObjectHolder();
	public static final BasicBlock MAGENTA_PETALS = ObjectHolder();
	public static final BasicBlock PURPLE_PETALS = ObjectHolder();
	public static final BasicBlock RED_PETALS = ObjectHolder();
	public static final BasicBlock ROSE_PETALS = ObjectHolder();
	public static final BasicBlock YELLOW_PETALS = ObjectHolder();
	public static final BasicBlock PLASTIC = ObjectHolder();
	public static final RunePostBlock RUNE_POST_COMPASS = ObjectHolder();
	public static final RunePostBlock RUNE_POST_DISTORTION = ObjectHolder();
	public static final RunePostBlock RUNE_POST_ENERGY = ObjectHolder();
	public static final RunePostBlock RUNE_POST_FIRE = ObjectHolder();
	public static final RunePostBlock RUNE_POST_KINETIC = ObjectHolder();
	public static final RunePostBlock RUNE_POST_LIFE = ObjectHolder();
	public static final RunePostBlock RUNE_POST_LUNAR = ObjectHolder();
	public static final RunePostBlock RUNE_POST_POISON = ObjectHolder();
	public static final RunePostBlock RUNE_POST_POWER = ObjectHolder();
	public static final RunePostBlock RUNE_POST_STORM = ObjectHolder();
	public static final RunePostBlock RUNE_POST_STRIKE = ObjectHolder();
	public static final RunePostBlock RUNE_POST_WATER = ObjectHolder();
	public static final RunePostBlock RUNE_POST_WIND = ObjectHolder();
	public static final RunePostBlock RUNE_POST_WITHER = ObjectHolder();
	public static final BasicBlock SKELETAL_BLOCK = ObjectHolder();
	public static final BasicBlock TENTACLES = ObjectHolder();
	public static final BasicBlock TENTACLES_DOTS_LEFT = ObjectHolder();
	public static final BasicBlock TENTACLES_DOTS_RIGHT = ObjectHolder();
	public static final BasicBlock TENTACLES_EYE_ORANGE = ObjectHolder();
	public static final BasicBlock TENTACLES_EYE_RED = ObjectHolder();
	public static final BasicBlock TENTACLES_GREEN = ObjectHolder();
	public static final BasicBlock TOXIC_STEM = ObjectHolder();
	public static final BasicBlock UNBREAKABLE_IRO_BRICKS = ObjectHolder();
	public static final BasicBlock UNBREAKABLE_PLANT_STEM = ObjectHolder();
	public static final BasicBlock UNBREAKABLE_RUNIC_BRICKS = ObjectHolder();
	public static final BasicNonCubeBlock BLUE_SHROOM = ObjectHolder();
	public static final BasicNonCubeBlock GREEN_SHROOM = ObjectHolder();
	public static final BasicNonCubeBlock ORANGE_SHROOM = ObjectHolder();
	public static final BasicNonCubeBlock PURPLE_SHROOM = ObjectHolder();
	public static final BasicNonCubeBlock SHROOM_STEM = ObjectHolder();
	public static final BasicNonCubeBlock VOX_SHROOM = ObjectHolder();
	public static final BasicNonCubeBlock YELLOW_SHROOM = ObjectHolder();
	public static final BasicNonCubeBlock VOX_LOG = ObjectHolder();
	public static final BoneyBlock BONEY_BLOCK = ObjectHolder();
	public static final CarvedRunicBlock CARVED_RUNE_DIRECTION = ObjectHolder();
	public static final CarvedRunicBlock CARVED_RUNE_EMPOWERING = ObjectHolder();
	public static final CarvedRunicBlock CARVED_RUNE_FOCUS = ObjectHolder();
	public static final CarvedRunicBlock CARVED_RUNE_POWER = ObjectHolder();
	public static final CarvedRunicBlock CARVED_RUNE_REALITY = ObjectHolder();
	public static final CarvedRunicBlock CARVED_RUNE_SPACE = ObjectHolder();
	public static final CarvedRunicBlock CARVED_RUNE_TRAVEL = ObjectHolder();
	public static final ChargingTable CHARGING_TABLE = ObjectHolder();
	public static final CloudBlock SHYRE_CLOUD = ObjectHolder();
	public static final DimensionalFabric DIMENSIONAL_FABRIC = ObjectHolder();
	public static final AirGap AIR_GAP = ObjectHolder();
	public static final DustopianLamp DUSTOPIAN_LAMP = ObjectHolder();
	public static final DustopianLampOff DUSTOPIAN_LAMP_OFF = ObjectHolder();
	public static final EnhancerBlock DAMAGE_ENHANCER = ObjectHolder();
	public static final EnhancerBlock DIVINE_ENHANCER = ObjectHolder();
	public static final EnhancerBlock DURABILITY_ENHANCER = ObjectHolder();
	public static final EnhancerBlock LUCK_ENHANCER = ObjectHolder();
	public static final EnhancerBlock MAGIC_ENHANCER = ObjectHolder();
	public static final EnhancerBlock RESISTANCE_ENHANCER = ObjectHolder();
	public static final EnhancerBlock SPEED_ENHANCER = ObjectHolder();
	public static final EnhancerBlock WEIGHT_ENHANCER = ObjectHolder();
	public static final LadderBlock ARCHAIC_LADDER = ObjectHolder();
	public static final LadderBlock ARCHAIC_LADDER_BREAKABLE = ObjectHolder();
	public static final LivingGrowth LIVING_GROWTH = ObjectHolder();
	public static final LogBlock CELEVE_STEM = ObjectHolder();
	public static final LunarPillar LUNAR_PILLAR = ObjectHolder();
	public static final SpikeyPillar SPIKEY_PILLAR = ObjectHolder();
	public static final ToxicBlock TOXIC_BLOCK = ObjectHolder();
	public static final ToxicWaste TOXIC_WASTE = ObjectHolder();

	public static final SpawnerBlock AMPHIBIOR_SPAWNER = ObjectHolder();
	public static final SpawnerBlock AMPHIBIYTE_SPAWNER = ObjectHolder();
	public static final SpawnerBlock ANGELICA_SPAWNER = ObjectHolder();
	public static final SpawnerBlock ARC_WIZARD_SPAWNER = ObjectHolder();
	public static final SpawnerBlock ARKZYNE_SPAWNER = ObjectHolder();
	public static final SpawnerBlock AROCKNID_SPAWNER = ObjectHolder();
	public static final SpawnerBlock BANSHEE_SPAWNER = ObjectHolder();
	public static final SpawnerBlock BAUMBA_SPAWNER = ObjectHolder();
	public static final SpawnerBlock BLOODSUCKER_SPAWNER = ObjectHolder();
	public static final SpawnerBlock CANE_BUG_SPAWNER = ObjectHolder();
	public static final SpawnerBlock CRUSILISK_SPAWNER = ObjectHolder();
	public static final SpawnerBlock DAWNLIGHT_SPAWNER = ObjectHolder();
	public static final SpawnerBlock DAYSEE_SPAWNER = ObjectHolder();
	public static final SpawnerBlock DIOCUS_SPAWNER = ObjectHolder();
	public static final SpawnerBlock ENFORCER_SPAWNER = ObjectHolder();
	public static final SpawnerBlock EXOHEAD_SPAWNER = ObjectHolder();
	public static final SpawnerBlock FACELESS_FLOATER_SPAWNER = ObjectHolder();
	public static final SpawnerBlock FENIX_SPAWNER = ObjectHolder();
	public static final SpawnerBlock FLESH_EATER_SPAWNER = ObjectHolder();
	public static final SpawnerBlock FLOWERFACE_SPAWNER = ObjectHolder();
	public static final SpawnerBlock FUNGOCK_SPAWNER = ObjectHolder();
	public static final SpawnerBlock GHASTUS_SPAWNER = ObjectHolder();
	public static final SpawnerBlock GINGERBIRD_SPAWNER = ObjectHolder();
	public static final SpawnerBlock GINGERBREAD_MAN_SPAWNER = ObjectHolder();
	public static final SpawnerBlock GOLDUM_SPAWNER = ObjectHolder();
	public static final SpawnerBlock GOLDUS_SPAWNER = ObjectHolder();
	public static final SpawnerBlock INMATE_X_SPAWNER = ObjectHolder();
	public static final SpawnerBlock INMATE_Y_SPAWNER = ObjectHolder();
	public static final SpawnerBlock IOSAUR_SPAWNER = ObjectHolder();
	public static final SpawnerBlock JAWE_SPAWNER = ObjectHolder();
	public static final SpawnerBlock KAIYU_SPAWNER = ObjectHolder();
	public static final SpawnerBlock LIGHTWALKER_SPAWNER = ObjectHolder();
	public static final SpawnerBlock LUXOCRON_SPAWNER = ObjectHolder();
	public static final SpawnerBlock MECHYON_SPAWNER = ObjectHolder();
	public static final SpawnerBlock MERKYRE_SPAWNER = ObjectHolder();
	public static final SpawnerBlock MERMAGE_SPAWNER = ObjectHolder();
	public static final SpawnerBlock MUSHROOM_SPIDER_SPAWNER = ObjectHolder();
	public static final SpawnerBlock NETHENGEIC_BEAST_SPAWNER = ObjectHolder();
	public static final SpawnerBlock NIGHTMARE_SPIDER_SPAWNER = ObjectHolder();
	public static final SpawnerBlock NIGHTWING_SPAWNER = ObjectHolder();
	public static final SpawnerBlock OPTERYX_SPAWNER = ObjectHolder();
	public static final SpawnerBlock PARAVITE_SPAWNER = ObjectHolder();
	public static final SpawnerBlock PHANTOM_SPAWNER = ObjectHolder();
	public static final SpawnerBlock POD_PLANT_SPAWNER = ObjectHolder();
	public static final SpawnerBlock RAWBONE_SPAWNER = ObjectHolder();
	public static final SpawnerBlock REAVER_SPAWNER = ObjectHolder();
	public static final SpawnerBlock REFLUCT_SPAWNER = ObjectHolder();
	public static final SpawnerBlock ROCK_CRITTER_SPAWNER = ObjectHolder();
	public static final SpawnerBlock RUNIC_GOLEM_SPAWNER = ObjectHolder();
	public static final SpawnerBlock RUNIC_GUARDIAN_SPAWNER = ObjectHolder();
	public static final SpawnerBlock SEEKER_SPAWNER = ObjectHolder();
	public static final SpawnerBlock SHAVO_SPAWNER = ObjectHolder();
	public static final SpawnerBlock SHYRE_TROLL_SPAWNER = ObjectHolder();
	public static final SpawnerBlock SKELEDON_SPAWNER = ObjectHolder();
	public static final SpawnerBlock SKELEKYTE_SPAWNER = ObjectHolder();
	public static final SpawnerBlock SOULSCORNE_SPAWNER = ObjectHolder();
	public static final SpawnerBlock SPECTRAL_WIZARD_SPAWNER = ObjectHolder();
	public static final SpawnerBlock SPINOLEDON_SPAWNER = ObjectHolder();
	public static final SpawnerBlock SURVEYOR_SPAWNER = ObjectHolder();
	public static final SpawnerBlock THARAFLY_SPAWNER = ObjectHolder();
	public static final SpawnerBlock UNDEAD_TROLL_SPAWNER = ObjectHolder();
	public static final SpawnerBlock URIOH_SPAWNER = ObjectHolder();
	public static final SpawnerBlock URV_SPAWNER = ObjectHolder();
	public static final SpawnerBlock VINE_WIZARD_SPAWNER = ObjectHolder();
	public static final SpawnerBlock VISAGE_SPAWNER = ObjectHolder();
	public static final SpawnerBlock VOLAR_SPAWNER = ObjectHolder();
	public static final SpawnerBlock ZARG_SPAWNER = ObjectHolder();
	public static final SpawnerBlock ZHINX_SPAWNER = ObjectHolder();
	public static final SpawnerBlock ZORP_SPAWNER = ObjectHolder();

	public static final BossAltarBlock ARMY_BLOCK = ObjectHolder();
	public static final BossAltarBlock BARONESS_ALTAR = ObjectHolder();
	public static final BossAltarBlock CANDY_BLOCK = ObjectHolder();
	public static final BossAltarBlock CLUNKHEAD_ALTAR = ObjectHolder();
	public static final BossAltarBlock CRAEXXEUS_ALTAR = ObjectHolder();
	public static final BossAltarBlock CREEP_ALTAR = ObjectHolder();
	public static final BossAltarBlock DRACYON_ALTAR = ObjectHolder();
	public static final BossAltarBlock GRAW_ALTAR = ObjectHolder();
	public static final GuardianAltar GUARDIAN_ALTAR = ObjectHolder();
	public static final BossAltarBlock HIVE_SPAWNER = ObjectHolder();
	public static final BossAltarBlock HYDRO_TABLE = ObjectHolder();
	public static final BossAltarBlock ILLUSION_ALTAR = ObjectHolder();
	public static final BossAltarBlock KROR_ALTAR = ObjectHolder();
	public static final BossAltarBlock MECHBOT_ALTAR = ObjectHolder();
	public static final BossAltarBlock POWER_STATION = ObjectHolder();
	public static final BossAltarBlock PRIMORDIAL_SHRINE = ObjectHolder();
	public static final BasicBlock ROCKRIDER_SHRINE = ObjectHolder();
	public static final BossAltarBlock SHADOW_ALTAR = ObjectHolder();
	public static final BossAltarBlock SILVERFOOT_ALTAR = ObjectHolder();
	public static final BossAltarBlock TOY_BOX = ObjectHolder();
	public static final BossAltarBlock VINOCORNE_SHRINE = ObjectHolder();
	public static final BossAltarBlock VISUALENT_ALTAR = ObjectHolder();
	public static final BossAltarBlock VOXXULON_ALTAR = ObjectHolder();

	public static final PortalBlock ABYSS_PORTAL = ObjectHolder();
	public static final PortalBlock ANCIENT_CAVERN_PORTAL = ObjectHolder();
	public static final PortalBlock BARATHOS_PORTAL = ObjectHolder();
	public static final PortalBlock BOREAN_PORTAL = ObjectHolder();
	public static final PortalBlock CANDYLAND_PORTAL = ObjectHolder();
	public static final PortalBlock CELEVE_PORTAL = ObjectHolder();
	public static final PortalBlock CREEPONIA_PORTAL = ObjectHolder();
	public static final PortalBlock CRYSTEVIA_PORTAL = ObjectHolder();
	public static final PortalBlock DEEPLANDS_PORTAL = ObjectHolder();
	public static final PortalBlock DUSTOPIA_PORTAL = ObjectHolder();
	public static final PortalBlock GARDENCIA_PORTAL = ObjectHolder();
	public static final PortalBlock GRECKON_PORTAL = ObjectHolder();
	public static final PortalBlock HAVEN_PORTAL = ObjectHolder();
	public static final PortalBlock IMMORTALLIS_PORTAL = ObjectHolder();
	public static final PortalBlock IROMINE_PORTAL = ObjectHolder();
	public static final PortalBlock LELYETIA_PORTAL = ObjectHolder();
	public static final PortalBlock LUNALUS_PORTAL = ObjectHolder();
	public static final PortalBlock MYSTERIUM_PORTAL = ObjectHolder();
	public static final PortalBlock NETHER_PORTAL = ObjectHolder();
	public static final PortalBlock PRECASIA_PORTAL = ObjectHolder();
	public static final PortalBlock RUNANDOR_PORTAL = ObjectHolder();
	public static final PortalBlock SHYRELANDS_PORTAL = ObjectHolder();
	public static final PortalBlock VOX_PONDS_PORTAL = ObjectHolder();

	public static final AncientAltar ANCIENT_ALTAR = ObjectHolder();
	public static final AncientCavernShrine EREBON_SHRINE = ObjectHolder();
	public static final AncientCavernShrine LUXON_SHRINE = ObjectHolder();
	public static final AncientCavernShrine PLUTON_SHRINE = ObjectHolder();
	public static final AncientCavernShrine SELYAN_SHRINE = ObjectHolder();
	public static final AscensionShrine ASCENSION_SHRINE = ObjectHolder();
	public static final BasicBlock VOX_CRATE = ObjectHolder();
	public static final CreationForge CREATION_FORGE = ObjectHolder();
	public static final CrystalCreator BLUE_CRYSTAL_CREATOR = ObjectHolder();
	public static final CrystalCreator GREEN_CRYSTAL_CREATOR = ObjectHolder();
	public static final CrystalCreator PURPLE_CRYSTAL_CREATOR = ObjectHolder();
	public static final CrystalCreator RED_CRYSTAL_CREATOR = ObjectHolder();
	public static final CrystalCreator WHITE_CRYSTAL_CREATOR = ObjectHolder();
	public static final CrystalCreator YELLOW_CRYSTAL_CREATOR = ObjectHolder();
	public static final CrystalExtensionShrine CRYSTAL_EXTENSION_SHRINE = ObjectHolder();
	public static final DecloggingTable DECLOGGING_TABLE = ObjectHolder();
	public static final DeepCase DEEP_CASE = ObjectHolder();
	public static final DivineStation DIVINE_STATION = ObjectHolder();
	public static final EnigmaTable ENIGMA_TABLE = ObjectHolder();
	public static final ExoidStation EXOID_STATION = ObjectHolder();
	public static final ExtractionDevice EXTRACTION_DEVICE = ObjectHolder();
	public static final ExtractionDevice EXTRACTION_DEVICE_ON = ObjectHolder();
	public static final FiltrationSystem FILTRATION_SYSTEM = ObjectHolder();
	public static final FrameBench FRAME_BENCH = ObjectHolder();
	public static final GoldAccumulator GOLD_ACCUMULATOR = ObjectHolder();
	public static final HauntingTable HAUNTING_TABLE = ObjectHolder();
	public static final ImmortallisProgressor IMMORTALLIS_PROGRESSOR_1 = ObjectHolder();
	public static final ImmortallisProgressor IMMORTALLIS_PROGRESSOR_2 = ObjectHolder();
	public static final ImmortallisProgressor IMMORTALLIS_PROGRESSOR_3 = ObjectHolder();
	public static final ImmortallisProgressor IMMORTALLIS_PROGRESSOR_4 = ObjectHolder();
	public static final ImmortallisProgressor IMMORTALLIS_PROGRESSOR_5 = ObjectHolder();
	public static final ImmortallisProgressor IMMORTALLIS_PROGRESSOR_6 = ObjectHolder();
	public static final ImmortallisProgressor IMMORTALLIS_PROGRESSOR_7 = ObjectHolder();
	public static final ImmortallisProgressor IMMORTALLIS_PROGRESSOR_8 = ObjectHolder();
	public static final ImmortallisProgressor IMMORTALLIS_PROGRESSOR_9 = ObjectHolder();
	public static final InfusionTable INFUSION_TABLE = ObjectHolder();
	public static final IroCrate IRO_CRATE = ObjectHolder();
	public static final LunarCreationTable LUNAR_CREATION_TABLE = ObjectHolder();
	public static final LunarEnrichmentTable LUNAR_ENRICHMENT_TABLE = ObjectHolder();
	public static final MendingTable MENDING_TABLE = ObjectHolder();
	public static final MineralizationStation MINERALIZATION_STATION = ObjectHolder();
	public static final PetalCraftingStation PETAL_CRAFTING_STATION = ObjectHolder();
	public static final PureGoldAccumulator PURE_GOLD_ACCUMULATOR = ObjectHolder();
	public static final RecreationStation RECREATION_STATION = ObjectHolder();
	public static final RuneRandomizer RUNE_RANDOMIZER = ObjectHolder();
	public static final RuneShrine RUNE_SHRINE = ObjectHolder();
	public static final RunicBlock RUNIC_BLOCK = ObjectHolder();
	public static final StrangeBlock STRANGE_BLOCK = ObjectHolder();
	public static final TeaSink TEA_SINK = ObjectHolder();
	public static final VoxStoreCrate VOX_STORE_CRATE = ObjectHolder();
	public static final WhitewashingTable WHITEWASHING_TABLE = ObjectHolder();

	public static final GenericPlantBlock ARCBULB = ObjectHolder();
	public static final GenericPlantBlock ARCFLOWER = ObjectHolder();
	public static final GenericPlantBlock BUREAL_STOCKS = ObjectHolder();
	public static final GenericPlantBlock CANDYCANE = ObjectHolder();
	public static final GenericPlantBlock CANDY_GRASS = ObjectHolder();
	public static final GenericPlantBlock BLUE_CANDY_GRASS = ObjectHolder();
	public static final GenericPlantBlock CELEVIANS_BLUE = ObjectHolder();
	public static final GenericPlantBlock CELEVIANS_PURPLE = ObjectHolder();
	public static final GenericPlantBlock CELEVIANS_RED = ObjectHolder();
	public static final GenericPlantBlock CELEVIANS_WHITE = ObjectHolder();
	public static final GenericPlantBlock CREEP_FLOWERS = ObjectHolder();
	public static final GenericPlantBlock CREEP_GRASS = ObjectHolder();
	public static final CrysteviaCrystalPlant BLUE_CRYSTAL_PLANT = ObjectHolder();
	public static final CrysteviaCrystalPlant GREEN_CRYSTAL_PLANT = ObjectHolder();
	public static final CrysteviaCrystalPlant PURPLE_CRYSTAL_PLANT = ObjectHolder();
	public static final CrysteviaCrystalPlant RED_CRYSTAL_PLANT = ObjectHolder();
	public static final CrysteviaCrystalPlant WHITE_CRYSTAL_PLANT = ObjectHolder();
	public static final CrysteviaCrystalPlant YELLOW_CRYSTAL_PLANT = ObjectHolder();
	public static final GenericPlantBlock DAILEERS = ObjectHolder();
	public static final GenericPlantBlock DAWN_BUSH = ObjectHolder();
	public static final GenericPlantBlock DAWN_FLOWER = ObjectHolder();
	public static final GenericPlantBlock DAWN_GRASS = ObjectHolder();
	public static final GenericPlantBlock DAYLOOMS_BLUE = ObjectHolder();
	public static final GenericPlantBlock DAYLOOMS_PINK = ObjectHolder();
	public static final GenericPlantBlock DAYLOOMS_YELLOW = ObjectHolder();
	public static final GenericPlantBlock DEAD_GRASS = ObjectHolder();
	public static final GenericPlantBlock DEEP_BLOOMS = ObjectHolder();
	public static final GenericPlantBlock DEEP_GRASS = ObjectHolder();
	public static final GenericPlantBlock HAUNTED_FLOWER = ObjectHolder();
	public static final GenericPlantBlock HAVEN_GRASS_PLANT = ObjectHolder();
	public static final GenericPlantBlock HORIZON_DAISIES = ObjectHolder();
	public static final GenericPlantBlock IRO_GRASS = ObjectHolder();
	public static final GenericPlantBlock IROTOPS = ObjectHolder();
	public static final GenericPlantBlock LELYETIAN_GRASS = ObjectHolder();
	public static final GenericPlantBlock LELYETIAN_GRASS_DOWN = ObjectHolder();
	public static final GenericPlantBlock LUCON_GRASS = ObjectHolder();
	public static final GenericPlantBlock LUNALIP = ObjectHolder();
	public static final GenericPlantBlock LUNTAR = ObjectHolder();
	public static final GenericPlantBlock LURCHIANS = ObjectHolder();
	public static final GenericPlantBlock LYLIPS = ObjectHolder();
	public static final GenericPlantBlock MAGIAS = ObjectHolder();
	public static final GenericPlantBlock MYSTIC_BUSH = ObjectHolder();
	public static final GenericPlantBlock MYSTIC_FERNS = ObjectHolder();
	public static final GenericPlantBlock OCEALITES_BLUE = ObjectHolder();
	public static final GenericPlantBlock RAINBOW_GRASS = ObjectHolder();
	public static final GenericPlantBlock RAINBOW_GRASS2 = ObjectHolder();
	public static final GenericPlantBlock RAINBOW_GRASS3 = ObjectHolder();
	public static final GenericPlantBlock RUNE_BULBS = ObjectHolder();
	public static final GenericPlantBlock RUNIC_BUSH = ObjectHolder();
	public static final GenericPlantBlock SHYRE_WEED = ObjectHolder();
	public static final GenericPlantBlock TANGLE_THORNS = ObjectHolder();
	public static final GenericPlantBlock TRILLIAD_BLOOM = ObjectHolder();
	public static final GenericPlantBlock TUBEICLES = ObjectHolder();
	public static final GenericPlantBlock GREEN_WATERWEEDS = ObjectHolder();
	public static final GenericPlantBlock WHITE_WATERWEEDS = ObjectHolder();
	public static final GenericPlantBlock YELLOW_WATERWEEDS = ObjectHolder();
	public static final PlantMultiStackable BLUE_LOLLYPOP = ObjectHolder();
	public static final PlantMultiStackable RED_LOLLYPOP = ObjectHolder();
	public static final PlantMultiStackable YELLOW_LOLLYPOP = ObjectHolder();
	public static final PlantStackable ANCIENT_VINES = ObjectHolder();
	public static final PlantStackable ANCIENT_VINES_CAP = ObjectHolder();
	public static final PlantStackable BLOOD_PINE_STEM = ObjectHolder();
	public static final PlantStackable BLOOD_PINE = ObjectHolder();
	public static final PlantStackable BLOOD_SPIKES = ObjectHolder();
	public static final PlantStackable BLOOD_STRANDS = ObjectHolder();
	public static final PlantStackable BULB_STOCK = ObjectHolder();
	public static final PlantStackable BULB_STOCK_CAP = ObjectHolder();
	public static final PlantStackable CELEBULBS_STEM = ObjectHolder();
	public static final PlantStackable CELEBULBS_GREEN = ObjectHolder();
	public static final PlantStackable CELEBULBS_YELLOW = ObjectHolder();
	public static final PlantStackable CORAL_CAGE = ObjectHolder();
	public static final PlantStackable DAWNWOOD_BARS = ObjectHolder();
	public static final PlantStackable EYE_SHRUB_STEM = ObjectHolder();
	public static final PlantStackable EYE_SHRUB = ObjectHolder();
	public static final PlantStackable GARDEN_GRASS = ObjectHolder();
	public static final PlantStackable HAVENDALES_BLUE_STEM = ObjectHolder();
	public static final PlantStackable HAVENDALES_BLUE = ObjectHolder();
	public static final PlantStackable HAVENDALES_PINK_STEM = ObjectHolder();
	public static final PlantStackable HAVENDALES_PINK = ObjectHolder();
	public static final PlantStackable HAVENDALES_YELLOW_STEM = ObjectHolder();
	public static final PlantStackable HAVENDALES_YELLOW = ObjectHolder();
	public static final PlantStackable LELYETIAN_STEM = ObjectHolder();
	public static final PlantStackable LELYETIAN_STEM_CAP = ObjectHolder();
	public static final PlantStackable LELYETIAN_STEM_CAP_DOWN = ObjectHolder();
	public static final PlantStackable LELYETIAN_WIGGLER = ObjectHolder();
	public static final PlantStackable LELYETIAN_WIGGLER_BOTTOM = ObjectHolder();
	public static final PlantStackable LELYETIAN_WIGGLER_TOP = ObjectHolder();
	public static final PlantStackable GREEN_PEPPERMINT = ObjectHolder();
	public static final PlantStackable RED_PEPPERMINT = ObjectHolder();
	public static final PlantStackable PLASTIC_STICK = ObjectHolder();
	public static final PlantStackable CANDY_TUBE = ObjectHolder();
	public static final PlantStackable SHYRE_STOCK = ObjectHolder();
	public static final PlantStackable SHYRE_CAP = ObjectHolder();
	public static final PlantStackable SHYRE_CAP_DOWN = ObjectHolder();
	public static final PlantStackable VOX_FUNGI_STEM = ObjectHolder();
	public static final PlantStackable VOX_FUNGI = ObjectHolder();
	public static final PlantStackable VOX_TENTACLES_STEM = ObjectHolder();
	public static final PlantStackable VOX_TENTACLES = ObjectHolder();
	public static final RedWaterweeds RED_WATERWEEDS = ObjectHolder();
	public static final VinesBlock CREEP_VINES = ObjectHolder();

	public static final CropBlock BUBBLE_BERRY_CROP = ObjectHolder(); // Seeds dropped in Lborean
	public static final CropBlock CHILLI_CROP = ObjectHolder(); // Seeds dropped in Lelyetia
	public static final CropBlock EYE_BULB_CROP = ObjectHolder(); // Dropped by Bulb stocks in Abyss grottos
	public static final CropBlock FLORACLES_CROP = ObjectHolder(); // Lborean red waterweeds
	public static final CropBlock GOLDICAPS_CROP = ObjectHolder(); // Garden Castle
	public static final CropBlock HEART_FRUIT_CROP = ObjectHolder(); // Seeds dropped by tangle thorns in Precasia
	public static final CropBlock HOLLY_TOPS_CROP = ObjectHolder(); // Dungeon Chests
	public static final CropBlock LUNACRIKE_CROP = ObjectHolder(); // Zal herbalist & lunar garden
	public static final CropBlock LUNA_GLOBE_CROP = ObjectHolder(); // Zal herbalist & lunar garden
	public static final CropBlock LUNALON_CROP = ObjectHolder(); // Zal herbalist & lunar garden
	public static final CropBlock MAGIC_MARANG_CROP = ObjectHolder(); // Haunted Leaves
	public static final CropBlock MYSTIC_SHROOM_CROP = ObjectHolder(); // Mysterium & Haunted Castle
	public static final CropBlock ROSIDON_CROP = ObjectHolder(); // Vinocorne
	public static final CropBlock TEA_CROP = ObjectHolder(); // Overworld drops
	public static final CropBlock THORNY_PLANT_CROP = ObjectHolder(); // TODO Obtain method
	public static final CropBlock TRILLIAD_CROP = ObjectHolder(); // Seeds dropped by trilliad blooms

	public static final SaplingBlock ACHONY_SAPLING = ObjectHolder();
	public static final SaplingBlock BLOODTWISTER_SAPLING = ObjectHolder();
	public static final SaplingBlock BLUE_CELEVUS_SAPLING = ObjectHolder();
	public static final SaplingBlock BLUE_HAVEN_SAPLING = ObjectHolder();
	public static final SaplingBlock BRIGHT_SHYRE_SAPLING = ObjectHolder();
	public static final SaplingBlock CHURRY_SAPLING = ObjectHolder();
	public static final SaplingBlock CREEP_SAPLING = ObjectHolder();
	public static final SaplingBlock DAWNWOOD_SAPLING = ObjectHolder();
	public static final SaplingBlock EYEBUSH_SAPLING = ObjectHolder();
	public static final SaplingBlock EYE_HANGER_SAPLING = ObjectHolder();
	public static final SaplingBlock GREEN_CELEVUS_SAPLING = ObjectHolder();
	public static final SaplingBlock HAUNTED_SAPLING = ObjectHolder();
	public static final SaplingBlock IRODUST_SAPLING = ObjectHolder();
	public static final SaplingBlock IROGOLD_SAPLING = ObjectHolder();
	public static final SaplingBlock LUCALUS_SAPLING = ObjectHolder();
	public static final SaplingBlock LUNICIA_SAPLING = ObjectHolder();
	public static final SaplingBlock LUNOSSO_SAPLING = ObjectHolder();
	public static final SaplingBlock PINK_HAVEN_SAPLING = ObjectHolder();
	public static final SaplingBlock PURPLE_CELEVUS_SAPLING = ObjectHolder();
	public static final SaplingBlock PURPLE_HAVEN_SAPLING = ObjectHolder();
	public static final SaplingBlock RED_CELEVUS_SAPLING = ObjectHolder();
	public static final SaplingBlock RED_HAVEN_SAPLING = ObjectHolder();
	public static final SaplingBlock RUNIC_SAPLING = ObjectHolder();
	public static final SaplingBlock SHADOW_SAPLING = ObjectHolder();
	public static final SaplingBlock SHYRE_SAPLING = ObjectHolder();
	public static final SaplingBlock STRANGLEWOOD_SAPLING = ObjectHolder();
	public static final SaplingBlock TURQUOISE_HAVEN_SAPLING = ObjectHolder();
	public static final SaplingBlock YELLOW_CELEVUS_SAPLING = ObjectHolder();
	public static final SaplingBlock YELLOW_HAVEN_SAPLING = ObjectHolder();

	public static final StatueBlock BANE_STATUE = ObjectHolder();
	public static final StatueBlock GOLD_BANE_STATUE = ObjectHolder();
	public static final StatueBlock ORNATE_BANE_STATUE = ObjectHolder();
	public static final StatueBlock BARONESS_STATUE = ObjectHolder();
	public static final StatueBlock GOLD_BARONESS_STATUE = ObjectHolder();
	public static final StatueBlock ORNATE_BARONESS_STATUE = ObjectHolder();
	public static final StatueBlock CLUNKHEAD_STATUE = ObjectHolder();
	public static final StatueBlock GOLD_CLUNKHEAD_STATUE = ObjectHolder();
	public static final StatueBlock ORNATE_CLUNKHEAD_STATUE = ObjectHolder();
	public static final StatueBlock CONIFERON_STATUE = ObjectHolder();
	public static final StatueBlock GOLD_CONIFERON_STATUE = ObjectHolder();
	public static final StatueBlock ORNATE_CONIFERON_STATUE = ObjectHolder();
	public static final StatueBlock CORALLUS_STATUE = ObjectHolder();
	public static final StatueBlock GOLD_CORALLUS_STATUE = ObjectHolder();
	public static final StatueBlock ORNATE_CORALLUS_STATUE = ObjectHolder();
	public static final StatueBlock COTTON_CANDOR_STATUE = ObjectHolder();
	public static final StatueBlock GOLD_COTTON_CANDOR_STATUE = ObjectHolder();
	public static final StatueBlock ORNATE_COTTON_CANDOR_STATUE = ObjectHolder();
	public static final StatueBlock CRAEXXEUS_STATUE = ObjectHolder();
	public static final StatueBlock GOLD_CRAEXXEUS_STATUE = ObjectHolder();
	public static final StatueBlock ORNATE_CRAEXXEUS_STATUE = ObjectHolder();
	public static final StatueBlock CREEP_STATUE = ObjectHolder();
	public static final StatueBlock GOLD_CREEP_STATUE = ObjectHolder();
	public static final StatueBlock ORNATE_CREEP_STATUE = ObjectHolder();
	public static final StatueBlock CRYSTOCORE_STATUE = ObjectHolder();
	public static final StatueBlock GOLD_CRYSTOCORE_STATUE = ObjectHolder();
	public static final StatueBlock ORNATE_CRYSTOCORE_STATUE = ObjectHolder();
	public static final StatueBlock DRACYON_STATUE = ObjectHolder();
	public static final StatueBlock GOLD_DRACYON_STATUE = ObjectHolder();
	public static final StatueBlock ORNATE_DRACYON_STATUE = ObjectHolder();
	public static final StatueBlock ELUSIVE_STATUE = ObjectHolder();
	public static final StatueBlock GOLD_ELUSIVE_STATUE = ObjectHolder();
	public static final StatueBlock ORNATE_ELUSIVE_STATUE = ObjectHolder();
	public static final StatueBlock FLASH_STATUE = ObjectHolder();
	public static final StatueBlock GOLD_FLASH_STATUE = ObjectHolder();
	public static final StatueBlock ORNATE_FLASH_STATUE = ObjectHolder();
	public static final StatueBlock GOLDORTH_STATUE = ObjectHolder();
	public static final StatueBlock GOLD_GOLDORTH_STATUE = ObjectHolder();
	public static final StatueBlock ORNATE_GOLDORTH_STATUE = ObjectHolder();
	public static final StatueBlock GRAW_STATUE = ObjectHolder();
	public static final StatueBlock GOLD_GRAW_STATUE = ObjectHolder();
	public static final StatueBlock ORNATE_GRAW_STATUE = ObjectHolder();
	public static final StatueBlock GUARDIAN_STATUE = ObjectHolder();
	public static final StatueBlock GOLD_GUARDIAN_STATUE = ObjectHolder();
	public static final StatueBlock ORNATE_GUARDIAN_STATUE = ObjectHolder();
	public static final StatueBlock GYRO_STATUE = ObjectHolder();
	public static final StatueBlock GOLD_GYRO_STATUE = ObjectHolder();
	public static final StatueBlock ORNATE_GYRO_STATUE = ObjectHolder();
	public static final StatueBlock HARKOS_STATUE = ObjectHolder();
	public static final StatueBlock GOLD_HARKOS_STATUE = ObjectHolder();
	public static final StatueBlock ORNATE_HARKOS_STATUE = ObjectHolder();
	public static final StatueBlock HIVE_KING_STATUE = ObjectHolder();
	public static final StatueBlock GOLD_HIVE_KING_STATUE = ObjectHolder();
	public static final StatueBlock ORNATE_HIVE_KING_STATUE = ObjectHolder();
	public static final StatueBlock HORON_STATUE = ObjectHolder();
	public static final StatueBlock GOLD_HORON_STATUE = ObjectHolder();
	public static final StatueBlock ORNATE_HORON_STATUE = ObjectHolder();
	public static final StatueBlock HYDROLISK_STATUE = ObjectHolder();
	public static final StatueBlock GOLD_HYDROLISK_STATUE = ObjectHolder();
	public static final StatueBlock ORNATE_HYDROLISK_STATUE = ObjectHolder();
	public static final StatueBlock KAJAROS_STATUE = ObjectHolder();
	public static final StatueBlock GOLD_KAJAROS_STATUE = ObjectHolder();
	public static final StatueBlock ORNATE_KAJAROS_STATUE = ObjectHolder();
	public static final StatueBlock KING_BAMBAMBAM_STATUE = ObjectHolder();
	public static final StatueBlock GOLD_KING_BAMBAMBAM_STATUE = ObjectHolder();
	public static final StatueBlock ORNATE_KING_BAMBAMBAM_STATUE = ObjectHolder();
	public static final StatueBlock KING_SHROOMUS_STATUE = ObjectHolder();
	public static final StatueBlock GOLD_KING_SHROOMUS_STATUE = ObjectHolder();
	public static final StatueBlock ORNATE_KING_SHROOMUS_STATUE = ObjectHolder();
	public static final StatueBlock KLOBBER_STATUE = ObjectHolder();
	public static final StatueBlock GOLD_KLOBBER_STATUE = ObjectHolder();
	public static final StatueBlock ORNATE_KLOBBER_STATUE = ObjectHolder();
	public static final StatueBlock KROR_STATUE = ObjectHolder();
	public static final StatueBlock GOLD_KROR_STATUE = ObjectHolder();
	public static final StatueBlock ORNATE_KROR_STATUE = ObjectHolder();
	public static final StatueBlock MECHBOT_STATUE = ObjectHolder();
	public static final StatueBlock GOLD_MECHBOT_STATUE = ObjectHolder();
	public static final StatueBlock ORNATE_MECHBOT_STATUE = ObjectHolder();
	public static final StatueBlock MIRAGE_STATUE = ObjectHolder();
	public static final StatueBlock GOLD_MIRAGE_STATUE = ObjectHolder();
	public static final StatueBlock ORNATE_MIRAGE_STATUE = ObjectHolder();
	public static final StatueBlock MISKEL_STATUE = ObjectHolder();
	public static final StatueBlock GOLD_MISKEL_STATUE = ObjectHolder();
	public static final StatueBlock ORNATE_MISKEL_STATUE = ObjectHolder();
	public static final StatueBlock NETHENGEIC_WITHER_STATUE = ObjectHolder();
	public static final StatueBlock GOLD_NETHENGEIC_WITHER_STATUE = ObjectHolder();
	public static final StatueBlock ORNATE_NETHENGEIC_WITHER_STATUE = ObjectHolder();
	public static final StatueBlock OKAZOR_STATUE = ObjectHolder();
	public static final StatueBlock GOLD_OKAZOR_STATUE = ObjectHolder();
	public static final StatueBlock ORNATE_OKAZOR_STATUE = ObjectHolder();
	public static final StatueBlock PENUMBRA_STATUE = ObjectHolder();
	public static final StatueBlock GOLD_PENUMBRA_STATUE = ObjectHolder();
	public static final StatueBlock ORNATE_PENUMBRA_STATUE = ObjectHolder();
	public static final StatueBlock PROSHIELD_STATUE = ObjectHolder();
	public static final StatueBlock GOLD_PROSHIELD_STATUE = ObjectHolder();
	public static final StatueBlock ORNATE_PROSHIELD_STATUE = ObjectHolder();
	public static final StatueBlock RAXXAN_STATUE = ObjectHolder();
	public static final StatueBlock GOLD_RAXXAN_STATUE = ObjectHolder();
	public static final StatueBlock ORNATE_RAXXAN_STATUE = ObjectHolder();
	public static final StatueBlock ROCKRIDER_STATUE = ObjectHolder();
	public static final StatueBlock GOLD_ROCKRIDER_STATUE = ObjectHolder();
	public static final StatueBlock ORNATE_ROCKRIDER_STATUE = ObjectHolder();
	public static final StatueBlock SHADOWLORD_STATUE = ObjectHolder();
	public static final StatueBlock GOLD_SHADOWLORD_STATUE = ObjectHolder();
	public static final StatueBlock ORNATE_SHADOWLORD_STATUE = ObjectHolder();
	public static final StatueBlock SILVERFOOT_STATUE = ObjectHolder();
	public static final StatueBlock GOLD_SILVERFOOT_STATUE = ObjectHolder();
	public static final StatueBlock ORNATE_SILVERFOOT_STATUE = ObjectHolder();
	public static final StatueBlock SKELETRON_STATUE = ObjectHolder();
	public static final StatueBlock GOLD_SKELETRON_STATUE = ObjectHolder();
	public static final StatueBlock ORNATE_SKELETRON_STATUE = ObjectHolder();
	public static final StatueBlock SMASH_STATUE = ObjectHolder();
	public static final StatueBlock GOLD_SMASH_STATUE = ObjectHolder();
	public static final StatueBlock ORNATE_SMASH_STATUE = ObjectHolder();
	public static final StatueBlock TYROSAUR_STATUE = ObjectHolder();
	public static final StatueBlock GOLD_TYROSAUR_STATUE = ObjectHolder();
	public static final StatueBlock ORNATE_TYROSAUR_STATUE = ObjectHolder();
	public static final StatueBlock VINOCORNE_STATUE = ObjectHolder();
	public static final StatueBlock GOLD_VINOCORNE_STATUE = ObjectHolder();
	public static final StatueBlock ORNATE_VINOCORNE_STATUE = ObjectHolder();
	public static final StatueBlock VISUALENT_STATUE = ObjectHolder();
	public static final StatueBlock GOLD_VISUALENT_STATUE = ObjectHolder();
	public static final StatueBlock ORNATE_VISUALENT_STATUE = ObjectHolder();
	public static final StatueBlock VOXXULON_STATUE = ObjectHolder();
	public static final StatueBlock GOLD_VOXXULON_STATUE = ObjectHolder();
	public static final StatueBlock ORNATE_VOXXULON_STATUE = ObjectHolder();
	public static final StatueBlock XXEUS_STATUE = ObjectHolder();
	public static final StatueBlock GOLD_XXEUS_STATUE = ObjectHolder();
	public static final StatueBlock ORNATE_XXEUS_STATUE = ObjectHolder();

	public static final BannerBlock ANCIENT_BANNER = ObjectHolder();
	public static final BannerBlock GILDED_ANCIENT_BANNER = ObjectHolder();
	public static final BannerBlock ENCRUSTED_ANCIENT_BANNER = ObjectHolder();
	public static final BannerBlock BEJEWELLED_ANCIENT_BANNER = ObjectHolder();
	public static final BannerBlock BARON_BANNER = ObjectHolder();
	public static final BannerBlock GILDED_BARON_BANNER = ObjectHolder();
	public static final BannerBlock ENCRUSTED_BARON_BANNER = ObjectHolder();
	public static final BannerBlock BEJEWELLED_BARON_BANNER = ObjectHolder();
	public static final BannerBlock BLOOD_BANNER = ObjectHolder();
	public static final BannerBlock GILDED_BLOOD_BANNER = ObjectHolder();
	public static final BannerBlock ENCRUSTED_BLOOD_BANNER = ObjectHolder();
	public static final BannerBlock BEJEWELLED_BLOOD_BANNER = ObjectHolder();
	public static final BannerBlock BOREIC_BANNER = ObjectHolder();
	public static final BannerBlock GILDED_BOREIC_BANNER = ObjectHolder();
	public static final BannerBlock ENCRUSTED_BOREIC_BANNER = ObjectHolder();
	public static final BannerBlock BEJEWELLED_BOREIC_BANNER = ObjectHolder();
	public static final BannerBlock CANDY_BANNER = ObjectHolder();
	public static final BannerBlock GILDED_CANDY_BANNER = ObjectHolder();
	public static final BannerBlock ENCRUSTED_CANDY_BANNER = ObjectHolder();
	public static final BannerBlock BEJEWELLED_CANDY_BANNER = ObjectHolder();
	public static final BannerBlock CLOWN_BANNER = ObjectHolder();
	public static final BannerBlock GILDED_CLOWN_BANNER = ObjectHolder();
	public static final BannerBlock ENCRUSTED_CLOWN_BANNER = ObjectHolder();
	public static final BannerBlock BEJEWELLED_CLOWN_BANNER = ObjectHolder();
	public static final BannerBlock CREATION_BANNER = ObjectHolder();
	public static final BannerBlock GILDED_CREATION_BANNER = ObjectHolder();
	public static final BannerBlock ENCRUSTED_CREATION_BANNER = ObjectHolder();
	public static final BannerBlock BEJEWELLED_CREATION_BANNER = ObjectHolder();
	public static final BannerBlock CREEPOID_BANNER = ObjectHolder();
	public static final BannerBlock GILDED_CREEPOID_BANNER = ObjectHolder();
	public static final BannerBlock ENCRUSTED_CREEPOID_BANNER = ObjectHolder();
	public static final BannerBlock BEJEWELLED_CREEPOID_BANNER = ObjectHolder();
	public static final BannerBlock CREEPY_BANNER = ObjectHolder();
	public static final BannerBlock GILDED_CREEPY_BANNER = ObjectHolder();
	public static final BannerBlock ENCRUSTED_CREEPY_BANNER = ObjectHolder();
	public static final BannerBlock BEJEWELLED_CREEPY_BANNER = ObjectHolder();
	public static final BannerBlock CRYSTAL_BANNER = ObjectHolder();
	public static final BannerBlock GILDED_CRYSTAL_BANNER = ObjectHolder();
	public static final BannerBlock ENCRUSTED_CRYSTAL_BANNER = ObjectHolder();
	public static final BannerBlock BEJEWELLED_CRYSTAL_BANNER = ObjectHolder();
	public static final BannerBlock DEEP_BANNER = ObjectHolder();
	public static final BannerBlock GILDED_DEEP_BANNER = ObjectHolder();
	public static final BannerBlock ENCRUSTED_DEEP_BANNER = ObjectHolder();
	public static final BannerBlock BEJEWELLED_DEEP_BANNER = ObjectHolder();
	public static final BannerBlock DUSTOPIAN_BANNER = ObjectHolder();
	public static final BannerBlock GILDED_DUSTOPIAN_BANNER = ObjectHolder();
	public static final BannerBlock ENCRUSTED_DUSTOPIAN_BANNER = ObjectHolder();
	public static final BannerBlock BEJEWELLED_DUSTOPIAN_BANNER = ObjectHolder();
	public static final BannerBlock ENERGY_BANNER = ObjectHolder();
	public static final BannerBlock GILDED_ENERGY_BANNER = ObjectHolder();
	public static final BannerBlock ENCRUSTED_ENERGY_BANNER = ObjectHolder();
	public static final BannerBlock BEJEWELLED_ENERGY_BANNER = ObjectHolder();
	public static final BannerBlock FUNGAL_BANNER = ObjectHolder();
	public static final BannerBlock GILDED_FUNGAL_BANNER = ObjectHolder();
	public static final BannerBlock ENCRUSTED_FUNGAL_BANNER = ObjectHolder();
	public static final BannerBlock BEJEWELLED_FUNGAL_BANNER = ObjectHolder();
	public static final BannerBlock GHOSTLY_BANNER = ObjectHolder();
	public static final BannerBlock GILDED_GHOSTLY_BANNER = ObjectHolder();
	public static final BannerBlock ENCRUSTED_GHOSTLY_BANNER = ObjectHolder();
	public static final BannerBlock BEJEWELLED_GHOSTLY_BANNER = ObjectHolder();
	public static final BannerBlock GHOUL_BANNER = ObjectHolder();
	public static final BannerBlock GILDED_GHOUL_BANNER = ObjectHolder();
	public static final BannerBlock ENCRUSTED_GHOUL_BANNER = ObjectHolder();
	public static final BannerBlock BEJEWELLED_GHOUL_BANNER = ObjectHolder();
	public static final BannerBlock GINGERBREAD_BANNER = ObjectHolder();
	public static final BannerBlock GILDED_GINGERBREAD_BANNER = ObjectHolder();
	public static final BannerBlock ENCRUSTED_GINGERBREAD_BANNER = ObjectHolder();
	public static final BannerBlock BEJEWELLED_GINGERBREAD_BANNER = ObjectHolder();
	public static final BannerBlock HAUNTED_BANNER = ObjectHolder();
	public static final BannerBlock GILDED_HAUNTED_BANNER = ObjectHolder();
	public static final BannerBlock ENCRUSTED_HAUNTED_BANNER = ObjectHolder();
	public static final BannerBlock BEJEWELLED_HAUNTED_BANNER = ObjectHolder();
	public static final BannerBlock ILLUSION_BANNER = ObjectHolder();
	public static final BannerBlock GILDED_ILLUSION_BANNER = ObjectHolder();
	public static final BannerBlock ENCRUSTED_ILLUSION_BANNER = ObjectHolder();
	public static final BannerBlock BEJEWELLED_ILLUSION_BANNER = ObjectHolder();
	public static final BannerBlock IMMORTAL_BANNER = ObjectHolder();
	public static final BannerBlock GILDED_IMMORTAL_BANNER = ObjectHolder();
	public static final BannerBlock ENCRUSTED_IMMORTAL_BANNER = ObjectHolder();
	public static final BannerBlock BEJEWELLED_IMMORTAL_BANNER = ObjectHolder();
	public static final BannerBlock LELYETIAN_BANNER = ObjectHolder();
	public static final BannerBlock GILDED_LELYETIAN_BANNER = ObjectHolder();
	public static final BannerBlock ENCRUSTED_LELYETIAN_BANNER = ObjectHolder();
	public static final BannerBlock BEJEWELLED_LELYETIAN_BANNER = ObjectHolder();
	public static final BannerBlock LIGHT_BANNER = ObjectHolder();
	public static final BannerBlock GILDED_LIGHT_BANNER = ObjectHolder();
	public static final BannerBlock ENCRUSTED_LIGHT_BANNER = ObjectHolder();
	public static final BannerBlock BEJEWELLED_LIGHT_BANNER = ObjectHolder();
	public static final BannerBlock LOTTO_BANNER = ObjectHolder();
	public static final BannerBlock GILDED_LOTTO_BANNER = ObjectHolder();
	public static final BannerBlock ENCRUSTED_LOTTO_BANNER = ObjectHolder();
	public static final BannerBlock BEJEWELLED_LOTTO_BANNER = ObjectHolder();
	public static final BannerBlock LUNAR_BANNER = ObjectHolder();
	public static final BannerBlock GILDED_LUNAR_BANNER = ObjectHolder();
	public static final BannerBlock ENCRUSTED_LUNAR_BANNER = ObjectHolder();
	public static final BannerBlock BEJEWELLED_LUNAR_BANNER = ObjectHolder();
	public static final BannerBlock MECHA_BANNER = ObjectHolder();
	public static final BannerBlock GILDED_MECHA_BANNER = ObjectHolder();
	public static final BannerBlock ENCRUSTED_MECHA_BANNER = ObjectHolder();
	public static final BannerBlock BEJEWELLED_MECHA_BANNER = ObjectHolder();
	public static final BannerBlock NETHENGEIC_BANNER = ObjectHolder();
	public static final BannerBlock GILDED_NETHENGEIC_BANNER = ObjectHolder();
	public static final BannerBlock ENCRUSTED_NETHENGEIC_BANNER = ObjectHolder();
	public static final BannerBlock BEJEWELLED_NETHENGEIC_BANNER = ObjectHolder();
	public static final BannerBlock NETHER_BANNER = ObjectHolder();
	public static final BannerBlock GILDED_NETHER_BANNER = ObjectHolder();
	public static final BannerBlock ENCRUSTED_NETHER_BANNER = ObjectHolder();
	public static final BannerBlock BEJEWELLED_NETHER_BANNER = ObjectHolder();
	public static final BannerBlock ROSIDIAN_BANNER = ObjectHolder();
	public static final BannerBlock GILDED_ROSIDIAN_BANNER = ObjectHolder();
	public static final BannerBlock ENCRUSTED_ROSIDIAN_BANNER = ObjectHolder();
	public static final BannerBlock BEJEWELLED_ROSIDIAN_BANNER = ObjectHolder();
	public static final BannerBlock RUNIC_BANNER = ObjectHolder();
	public static final BannerBlock GILDED_RUNIC_BANNER = ObjectHolder();
	public static final BannerBlock ENCRUSTED_RUNIC_BANNER = ObjectHolder();
	public static final BannerBlock BEJEWELLED_RUNIC_BANNER = ObjectHolder();
	public static final BannerBlock SEA_BANNER = ObjectHolder();
	public static final BannerBlock GILDED_SEA_BANNER = ObjectHolder();
	public static final BannerBlock ENCRUSTED_SEA_BANNER = ObjectHolder();
	public static final BannerBlock BEJEWELLED_SEA_BANNER = ObjectHolder();
	public static final BannerBlock SHADOW_BANNER = ObjectHolder();
	public static final BannerBlock GILDED_SHADOW_BANNER = ObjectHolder();
	public static final BannerBlock ENCRUSTED_SHADOW_BANNER = ObjectHolder();
	public static final BannerBlock BEJEWELLED_SHADOW_BANNER = ObjectHolder();
	public static final BannerBlock SHINY_BANNER = ObjectHolder();
	public static final BannerBlock GILDED_SHINY_BANNER = ObjectHolder();
	public static final BannerBlock ENCRUSTED_SHINY_BANNER = ObjectHolder();
	public static final BannerBlock BEJEWELLED_SHINY_BANNER = ObjectHolder();
	public static final BannerBlock SHYRE_BANNER = ObjectHolder();
	public static final BannerBlock GILDED_SHYRE_BANNER = ObjectHolder();
	public static final BannerBlock ENCRUSTED_SHYRE_BANNER = ObjectHolder();
	public static final BannerBlock BEJEWELLED_SHYRE_BANNER = ObjectHolder();
	public static final BannerBlock SKELETAL_BANNER = ObjectHolder();
	public static final BannerBlock GILDED_SKELETAL_BANNER = ObjectHolder();
	public static final BannerBlock ENCRUSTED_SKELETAL_BANNER = ObjectHolder();
	public static final BannerBlock BEJEWELLED_SKELETAL_BANNER = ObjectHolder();
	public static final BannerBlock SOUL_BANNER = ObjectHolder();
	public static final BannerBlock GILDED_SOUL_BANNER = ObjectHolder();
	public static final BannerBlock ENCRUSTED_SOUL_BANNER = ObjectHolder();
	public static final BannerBlock BEJEWELLED_SOUL_BANNER = ObjectHolder();
	public static final BannerBlock UTOPIAN_BANNER = ObjectHolder();
	public static final BannerBlock GILDED_UTOPIAN_BANNER = ObjectHolder();
	public static final BannerBlock ENCRUSTED_UTOPIAN_BANNER = ObjectHolder();
	public static final BannerBlock BEJEWELLED_UTOPIAN_BANNER = ObjectHolder();
	public static final BannerBlock VOID_BANNER = ObjectHolder();
	public static final BannerBlock GILDED_VOID_BANNER = ObjectHolder();
	public static final BannerBlock ENCRUSTED_VOID_BANNER = ObjectHolder();
	public static final BannerBlock BEJEWELLED_VOID_BANNER = ObjectHolder();
	public static final BannerBlock VOX_BANNER = ObjectHolder();
	public static final BannerBlock GILDED_VOX_BANNER = ObjectHolder();
	public static final BannerBlock ENCRUSTED_VOX_BANNER = ObjectHolder();
	public static final BannerBlock BEJEWELLED_VOX_BANNER = ObjectHolder();
	public static final BannerBlock PLUTON_BANNER = ObjectHolder();
	public static final BannerBlock LUXON_BANNER = ObjectHolder();
	public static final BannerBlock EREBON_BANNER = ObjectHolder();
	public static final BannerBlock SELYAN_BANNER = ObjectHolder();

	@SubscribeEvent
	public static void registerBlocks(final RegistryEvent.Register<Block> ev) {
		AdventOfAscension.logMessage(Level.INFO, "Beginning block registration");
		IForgeRegistry<Block> registry = ev.getRegistry();

		registerBlock(registry, new StoneBlock("AbyssalStone", "abyss_stone"), "blocks/generation/stone/", ORE_DICT_COBBLE);
		registerBlock(registry, new StoneBlock("BarathosHellstone", "barathos_hellstone"), "blocks/generation/stone/", ORE_DICT_COBBLE);
		registerBlock(registry, new StoneBlock("BaronStone", "baron_stone"), "blocks/generation/stone/", ORE_DICT_COBBLE);
		registerBlock(registry, new StoneBlock("BoreanStone", "borean_stone"), "blocks/generation/stone/", ORE_DICT_COBBLE);
		registerBlock(registry, new StoneBlock("CreepStone", "creep_stone"), "blocks/generation/stone/", ORE_DICT_COBBLE);
		registerBlock(registry, new StoneBlock("CrystevianStone", "crystevia_stone"), "blocks/generation/stone/", ORE_DICT_COBBLE);
		registerBlock(registry, new DeeplandsStone(), "blocks/generation/stone/", ORE_DICT_COBBLE);
		registerBlock(registry, new StoneBlock("DustopianStone", "dustopia_stone"), "blocks/generation/stone/", ORE_DICT_COBBLE);
		registerBlock(registry, new StoneBlock("GardencianStone", "gardencia_stone"), "blocks/generation/stone/", ORE_DICT_COBBLE);
		registerBlock(registry, new StoneBlock("GreckonStone", "greckon_stone"), "blocks/generation/stone/", ORE_DICT_COBBLE);
		registerBlock(registry, new StoneBlock("HavenStone", "haven_stone"), "blocks/generation/stone/", ORE_DICT_COBBLE);
		registerBlock(registry, new StoneBlock("IroStone", "iromine_stone"), "blocks/generation/stone/", ORE_DICT_COBBLE);
		registerBlock(registry, new StoneBlock("LelyetianStone", "lelyetia_stone"), "blocks/generation/stone/", ORE_DICT_COBBLE);
		registerBlock(registry, new StoneBlock("MysteriumStone", "mysterium_stone"), "blocks/generation/stone/", ORE_DICT_COBBLE);
		registerBlock(registry, new StoneBlock("HighPrecasianStone", "high_precasia_stone"), "blocks/generation/stone/", ORE_DICT_COBBLE);
		registerBlock(registry, new StoneBlock("LowPrecasiaStone", "low_precasia_stone"), "blocks/generation/stone/", ORE_DICT_COBBLE);
		registerBlock(registry, new StoneBlock("PrimedStone", "primed_stone"), "blocks/generation/stone/", ORE_DICT_COBBLE);
		registerBlock(registry, new StoneBlock("RunicStone", "runic_stone"), "blocks/generation/stone/", ORE_DICT_COBBLE);
		registerBlock(registry, new StoneBlock("ShyrelandsStone", "shyrelands_stone"), "blocks/generation/stone/", ORE_DICT_COBBLE);
		registerBlock(registry, new StoneBlock("ToxicStone", "toxic_stone"),"blocks/generation/stone/", ORE_DICT_COBBLE);
		registerBlock(registry, new StoneBlock("UnstableStone", "unstable_stone"), "blocks/generation/stone/", ORE_DICT_COBBLE);

		registerBlock(registry, new DirtBlock("BoreanDirt", "borean_dirt"), "blocks/generation/dirt/");
		registerBlock(registry, new DirtBlock("CandylandDirt", "candyland_dirt"), "blocks/generation/dirt/");
		registerBlock(registry, new DirtBlock("CeleveDirt", "celeve_dirt"), "blocks/generation/dirt/");
		registerBlock(registry, new DirtBlock("CreeponiaDirt", "creeponia_dirt"), "blocks/generation/dirt/");
		registerBlock(registry, new DirtBlock("DustopiaDirt", "dustopia_dirt"), "blocks/generation/dirt/");
		registerBlock(registry, new DirtBlock("GardenciaDirt", "gardencia_dirt"), "blocks/generation/dirt/");
		registerBlock(registry, new DirtBlock("GreckonDirt", "greckon_dirt"), "blocks/generation/dirt/");
		registerBlock(registry, new DirtBlock("HavenDirt", "haven_dirt"), "blocks/generation/dirt/");
		registerBlock(registry, new DirtBlock("LunalyteDirt", "lunalyte_dirt"), "blocks/generation/dirt/");
		registerBlock(registry, new DirtBlock("LunasoleDirt", "lunasole_dirt"), "blocks/generation/dirt/");
		registerBlock(registry, new DirtBlock("MysteriumDirt", "mysterium_dirt"), "blocks/generation/dirt/");
		registerBlock(registry, new DirtBlock("ToxicDirt", "toxic_dirt"), "blocks/generation/dirt/");

		registerBlock(registry, new GrassBlock("AbyssGrass", "abyss_grass", getUnmappedBlock("abyss_stone"), 1.3f, 8f), "blocks/generation/grass/");
		registerBlock(registry, new GrassBlock("BoreanGrass", "borean_grass", getUnmappedBlock("borean_dirt")),"blocks/generation/grass/");
		registerBlock(registry, new GrassBlock("CandylandGrass", "candyland_grass", getUnmappedBlock("candyland_dirt")),"blocks/generation/grass/");
		registerBlock(registry, new GrassBlock("CeleveGrass", "celeve_grass", getUnmappedBlock("celeve_dirt")), "blocks/generation/grass/");
		registerBlock(registry, new GrassBlock("CreeponiaGrass", "creeponia_grass", getUnmappedBlock("creeponia_dirt")),"blocks/generation/grass/");
		registerBlock(registry, new GrassBlock("DustopiaGrass", "dustopia_grass", getUnmappedBlock("dustopia_dirt")),"blocks/generation/grass/");
		registerBlock(registry, new GrassBlock("GardenciaGrass", "gardencia_grass", getUnmappedBlock("gardencia_dirt")),"blocks/generation/grass/");
		registerBlock(registry, new GrassBlock("GreckonGrass", "greckon_grass", getUnmappedBlock("greckon_dirt")), "blocks/generation/grass/");
		registerBlock(registry, new GrassBlock("HavenGrass", "haven_grass", getUnmappedBlock("haven_dirt")), "blocks/generation/grass/");
		registerBlock(registry, new GrassBlock("IromineGrass", "iromine_grass", getUnmappedBlock("iromine_stone"), 1.3f, 8f), "blocks/generation/grass/");
		registerBlock(registry, new GrassBlock("LelyetiaGrass", "lelyetia_grass", getUnmappedBlock("lelyetia_stone"), 1.3f, 8f), "blocks/generation/grass/");
		registerBlock(registry, new UpsideDownGrassBlock("LelyetiaDownGrass", "lelyetia_down_grass", getUnmappedBlock("lelyetia_stone"), 1.3f, 8f), "blocks/generation/grass/");
		registerBlock(registry, new GrassBlock("LunalyteGrass", "lunalyte_grass", getUnmappedBlock("lunalyte_dirt")), "blocks/generation/grass/");
		registerBlock(registry, new GrassBlock("LunasoleGrass", "lunasole_grass", getUnmappedBlock("lunasole_dirt")), "blocks/generation/grass/");
		registerBlock(registry, new GrassBlock("MysteriumGrass", "mysterium_grass", getUnmappedBlock("mysterium_dirt")), "blocks/generation/grass/");
		registerBlock(registry, new GrassBlock("PrecasiaGrass", "precasia_grass", getUnmappedBlock("high_precasia_stone"), 1.3f, 8f), "blocks/generation/grass/");
		registerBlock(registry, new GrassBlock("RunicGrass", "runic_grass", getUnmappedBlock("runic_stone"), 1.3f, 8f), "blocks/generation/grass/");
		registerBlock(registry, new GrassBlock("ShyrelandsGrass", "shyrelands_grass", getUnmappedBlock("shyrelands_stone"), 1.3f, 8f), "blocks/generation/grass/");
		registerBlock(registry, new GrassBlock("ToxicGrass", "toxic_grass", getUnmappedBlock("toxic_dirt")), "blocks/generation/grass/");

		registerBlock(registry, new OreBlock("AmethystOre", "amethyst_ore", 2, 2, 8), "blocks/generation/ores/", "oreAmethyst");
		registerBlock(registry, new OreBlock("BaronyteOre", "baronyte_ore", 3), "blocks/generation/ores/", "oreBaronyte");
		registerBlock(registry, new OreBlock("BlaziumOre", "blazium_ore", 3), "blocks/generation/ores/", "oreBlazium");
		registerBlock(registry, new OreBlock("BloodstoneOre", "bloodstone_ore", 4, 6, 11), "blocks/generation/ores/", "oreBloodstone");
		registerBlock(registry, new OreBlock("BlueGemstoneOre", "blue_crystal_ore", 4, 4, 7), "blocks/generation/ores/", "oreBlueGemstone");
		registerBlock(registry, new OreBlock("ChargedRuniumOre", "charged_runium_ore", 3), "blocks/generation/ores/", "oreChargedRunium");
		registerBlock(registry, new OreBlock("ChestboneFragmentsOre", "chestbone_fragments_ore", 3, 4, 8), "blocks/generation/ores/", "oreChestboneFragments");
		registerBlock(registry, new OreBlock("CrystalliteOre", "crystallite_ore", 4, 6, 11), "blocks/generation/ores/", "oreCrystallite");
		registerBlock(registry, new OreBlock("ElecaniumOre", "elecanium_ore", 4), "blocks/generation/ores/", "oreElecanium");
		registerBlock(registry, new OreBlock("EmberstoneOre", "emberstone_ore", 3), "blocks/generation/ores/", "oreEmberstone");
		registerBlock(registry, new OreBlock("FootboneFragmentsOre", "footbone_fragments_ore", 3, 4, 8), "blocks/generation/ores/", "oreFootboneFragments");
		registerBlock(registry, new OreBlock("GemenyteOre", "gemenyte_ore", 3, 4, 8), "blocks/generation/ores/", "oreGemenyte");
		registerBlock(registry, new OreBlock("GhastlyOre", "ghastly_ore", 4), "blocks/generation/ores/", "oreGhastly");
		registerBlock(registry, new OreBlock("GhoulishOre", "ghoulish_ore", 4), "blocks/generation/ores/", "oreGhoulish");
		registerBlock(registry, new OreBlock("GreenGemstoneOre", "green_crystal_ore", 4, 4, 7), "blocks/generation/ores/", "oreGreenGemstone");
		registerBlock(registry, new OreBlock("JadeOre", "jade_ore", 2, 3, 8), "blocks/generation/ores/", "oreJade");
		registerBlock(registry, new OreBlock("JewelyteOre", "jewelyte_ore", 3, 4, 8), "blocks/generation/ores/", "oreJewelyte");
		registerBlock(registry, new OreBlock("LegboneFragmentsOre", "legbone_fragments_ore", 3, 4, 8), "blocks/generation/ores/", "oreLegboneFragments");
		registerBlock(registry, new OreBlock("LimoniteOre", "limonite_ore", 1), "blocks/generation/ores/", "oreLimonite");
		registerBlock(registry, new OreBlock("LyonOre", "lyon_ore", 4), "blocks/generation/ores/", "oreLyon");
		registerBlock(registry, new OreBlock("MystiteOre", "mystite_ore", 4), "blocks/generation/ores/", "oreMystite");
		registerBlock(registry, new OreBlock("OrnamyteOre", "ornamyte_ore", 3, 4, 8), "blocks/generation/ores/", "oreOrnamyte");
		registerBlock(registry, new OreBlock("PurpleGemstoneOre", "purple_crystal_ore", 4, 4, 7), "blocks/generation/ores/", "orePurpleGemstone");
		registerBlock(registry, new OreBlock("RedGemstoneOre", "red_crystal_ore", 4, 4, 7), "blocks/generation/ores/", "oreRedGemstone");
		registerBlock(registry, new OreBlock("RositeOre", "rosite_ore", 2), "blocks/generation/ores/", "oreRosite");
		registerBlock(registry, new OreBlock("RuniumOre", "runium_ore", 2), "blocks/generation/ores/", "oreRunium");
		registerBlock(registry, new OreBlock("SapphireOre", "sapphire_ore", 3, 4, 9), "blocks/generation/ores/", "oreSapphire");
		registerBlock(registry, new OreBlock("ShyregemOre", "shyregem_ore", 4, 6, 13), "blocks/generation/ores/", "oreShyregem");
		registerBlock(registry, new OreBlock("ShyrestoneOre", "shyrestone_ore", 4), "blocks/generation/ores/", "oreShyrestone");
		registerBlock(registry, new OreBlock("SkullboneFragmentsOre", "skullbone_fragments_ore", 3, 4, 8), "blocks/generation/ores/", "oreSkullboneFragments");
		registerBlock(registry, new OreBlock("VarsiumOre", "varsium_ore", 3), "blocks/generation/ores/", "oreVarsium");
		registerBlock(registry, new OreBlock("WhiteGemstoneOre", "white_crystal_ore", 4, 4, 7), "blocks/generation/ores/", "oreWhiteGemstone");
		registerBlock(registry, new OreBlock("YellowGemstoneOre", "yellow_crystal_ore", 4, 4, 7), "blocks/generation/ores/", "oreYellowGemstone");

		registerBlock(registry, new BasicDecorationBlock("BaronBricks", "baron_bricks", Material.ROCK, 10f, 15f), "blocks/decoration/bricks/");
		registerBlock(registry, new BasicDecorationBlock("BlackBricks", "black_bricks", Material.ROCK, 2.0f, 10.0f), "blocks/decoration/bricks/");
		registerBlock(registry, new BasicDecorationBlock("BloodstoneBricks", "bloodstone_bricks", Material.ROCK, 10f, 15f), "blocks/decoration/bricks/");
		registerBlock(registry, new BasicDecorationBlock("BlueBricks", "blue_bricks", Material.ROCK, 2.0f, 10.0f), "blocks/decoration/bricks/");
		registerBlock(registry, new BasicDecorationBlock("BrownBricks", "brown_bricks", Material.ROCK, 2.0f, 10.0f), "blocks/decoration/bricks/");
		registerBlock(registry, new BasicDecorationBlock("CoralBricks", "coral_bricks", Material.ROCK, 10f, 15f), "blocks/decoration/bricks/");
		registerBlock(registry, new BasicDecorationBlock("CreeponiaBricks", "creeponia_bricks", Material.ROCK, 10f, 15f), "blocks/decoration/bricks/");
		registerBlock(registry, new BasicDecorationBlock("CrystalliteBricks", "crystallite_bricks", Material.ROCK, 10f, 15f), "blocks/decoration/bricks/");
		registerBlock(registry, new BasicDecorationBlock("CrysteviaBricks", "crystevia_bricks", Material.ROCK, 10f, 15f), "blocks/decoration/bricks/");
		registerBlock(registry, new BasicDecorationBlock("CyanBricks", "cyan_bricks", Material.ROCK, 2.0f, 10.0f), "blocks/decoration/bricks/");
		registerBlock(registry, new BasicDecorationBlock("DarkBricks", "dark_bricks", Material.ROCK, 10f, 15f), "blocks/decoration/bricks/");
		registerBlock(registry, new BasicDecorationBlock("DarkBlueBricks", "dark_blue_bricks", Material.ROCK, 2.0f, 10.0f), "blocks/decoration/bricks/");
		registerBlock(registry, new BasicDecorationBlock("DarkGreyBricks", "dark_grey_bricks", Material.ROCK, 2.0f, 10.0f), "blocks/decoration/bricks/");
		registerBlock(registry, new BasicDecorationBlock("DarkwashBricks", "darkwash_bricks", Material.ROCK, 50f, 2000f), "blocks/decoration/bricks/");
		registerBlock(registry, new BasicDecorationBlock("GardenciaBricks", "gardencia_bricks", Material.ROCK, 10f, 15f), "blocks/decoration/bricks/");
		registerBlock(registry, new BasicDecorationBlock("GreckonBricks", "greckon_bricks", Material.ROCK, 10f, 15f), "blocks/decoration/bricks/");
		registerBlock(registry, new BasicDecorationBlock("GreenBricks", "green_bricks", Material.ROCK, 2.0f, 10.0f), "blocks/decoration/bricks/");
		registerBlock(registry, new BasicDecorationBlock("GreyBricks", "grey_bricks", Material.ROCK, 2.0f, 10.0f), "blocks/decoration/bricks/");
		registerBlock(registry, new BasicDecorationBlock("HauntedBricks", "haunted_bricks", Material.ROCK, 10f, 15f), "blocks/decoration/bricks/");
		registerBlock(registry, new BasicDecorationBlock("IroDottedBricks", "iro_dotted_bricks", Material.ROCK, 10f, 15f), "blocks/decoration/bricks/");
		registerBlock(registry, new BasicDecorationBlock("IroStripedBricks", "iro_striped_bricks", Material.ROCK, 10f, 15f), "blocks/decoration/bricks/");
		registerBlock(registry, new BasicDecorationBlock("LelyetiaBricks", "lelyetia_bricks", Material.ROCK, 10f, 15f), "blocks/decoration/bricks/");
		registerBlock(registry, new BasicDecorationBlock("LimeBricks", "lime_bricks", Material.ROCK, 2.0f, 10.0f), "blocks/decoration/bricks/");
		registerBlock(registry, new BasicDecorationBlock("LunarBricks", "lunar_bricks", Material.ROCK, 10f, 15f), "blocks/decoration/bricks/");
		registerBlock(registry, new BasicDecorationBlock("MagentaBricks", "magenta_bricks", Material.ROCK, 2.0f, 10.0f), "blocks/decoration/bricks/");
		registerBlock(registry, new BasicDecorationBlock("BlackMysteriumBricks", "black_mysterium_bricks", Material.ROCK, 10f, 15f), "blocks/decoration/bricks/");
		registerBlock(registry, new BasicDecorationBlock("GreenMysteriumBricks", "green_mysterium_bricks", Material.ROCK, 10f, 15f), "blocks/decoration/bricks/");
		registerBlock(registry, new BasicDecorationBlock("OrangeBricks", "orange_bricks", Material.ROCK, 2.0f, 10.0f), "blocks/decoration/bricks/");
		registerBlock(registry, new BasicDecorationBlock("PinkBricks", "pink_bricks", Material.ROCK, 2.0f, 10.0f), "blocks/decoration/bricks/");
		registerBlock(registry, new BasicDecorationBlock("PurpleBricks", "purple_bricks", Material.ROCK, 2.0f, 10.0f), "blocks/decoration/bricks/");
		registerBlock(registry, new BasicDecorationBlock("RedBricks", "red_bricks", Material.ROCK, 2.0f, 10.0f), "blocks/decoration/bricks/");
		registerBlock(registry, new BasicDecorationBlock("RosidianBricks", "rosidian_bricks", Material.ROCK, 10f, 15f), "blocks/decoration/bricks/");
		registerBlock(registry, new BasicDecorationBlock("RunicConstructBricks", "runic_construct_bricks", Material.ROCK, 10f, 15f), "blocks/decoration/bricks/");
		registerBlock(registry, new BasicDecorationBlock("WhiteShyreBricks", "white_shyre_bricks", Material.ROCK, 10f, 15f), "blocks/decoration/bricks/");
		registerBlock(registry, new BasicDecorationBlock("YellowShyreBricks", "yellow_shyre_bricks", Material.ROCK, 10f, 15f), "blocks/decoration/bricks/");
		registerBlock(registry, new BasicDecorationBlock("SkeletalBricks", "skeletal_bricks", Material.ROCK, 10f, 15f), "blocks/decoration/bricks/");
		registerBlock(registry, new BasicDecorationBlock("WhiteBricks", "white_bricks", Material.ROCK, 2.0f, 10.0f), "blocks/decoration/bricks/");
		registerBlock(registry, new BasicDecorationBlock("WhitewashBricks", "whitewash_bricks", Material.ROCK, 50f, 2000f), "blocks/decoration/bricks/");
		registerBlock(registry, new BasicDecorationBlock("YellowBricks", "yellow_bricks", Material.ROCK, 2.0f, 10.0f), "blocks/decoration/bricks/");

		registerBlock(registry, new BasicDecorationBlock("IntricateAmethystIvory", "intricate_amethyst_ivory", Material.ROCK, 5.0f, 5.0f), "blocks/decoration/ivory/");
		registerBlock(registry, new BasicDecorationBlock("NaturalAmethystIvory", "natural_amethyst_ivory", Material.ROCK, 5.0f, 5.0f), "blocks/decoration/ivory/");
		registerBlock(registry, new BasicDecorationBlock("OrnateAmethystIvory", "ornate_amethyst_ivory", Material.ROCK, 5.0f, 5.0f), "blocks/decoration/ivory/");
		registerBlock(registry, new BasicDecorationBlock("PatternedAmethystIvory", "patterned_amethyst_ivory", Material.ROCK, 5.0f, 5.0f), "blocks/decoration/ivory/");
		registerBlock(registry, new BasicDecorationBlock("IntricateIvory", "intricate_ivory", Material.ROCK, 5.0f, 5.0f), "blocks/decoration/ivory/");
		registerBlock(registry, new BasicDecorationBlock("IntricateJadeIvory", "intricate_jade_ivory", Material.ROCK, 5.0f, 5.0f), "blocks/decoration/ivory/");
		registerBlock(registry, new BasicDecorationBlock("NaturalJadeIvory", "natural_jade_ivory", Material.ROCK, 5.0f, 5.0f), "blocks/decoration/ivory/");
		registerBlock(registry, new BasicDecorationBlock("OrnateJadeIvory", "ornate_jade_ivory", Material.ROCK, 5.0f, 5.0f), "blocks/decoration/ivory/");
		registerBlock(registry, new BasicDecorationBlock("PatternedJadeIvory", "patterned_jade_ivory", Material.ROCK, 5.0f, 5.0f), "blocks/decoration/ivory/");
		registerBlock(registry, new BasicDecorationBlock("IntricateLimoniteIvory", "intricate_limonite_ivory", Material.ROCK, 5.0f, 5.0f), "blocks/decoration/ivory/");
		registerBlock(registry, new BasicDecorationBlock("NaturalLimoniteIvory", "natural_limonite_ivory", Material.ROCK, 5.0f, 5.0f), "blocks/decoration/ivory/");
		registerBlock(registry, new BasicDecorationBlock("OrnateLimoniteIvory", "ornate_limonite_ivory", Material.ROCK, 5.0f, 5.0f), "blocks/decoration/ivory/");
		registerBlock(registry, new BasicDecorationBlock("PatternedLimoniteIvory", "patterned_limonite_ivory", Material.ROCK, 5.0f, 5.0f), "blocks/decoration/ivory/");
		registerBlock(registry, new BasicDecorationBlock("NaturalIvory", "natural_ivory", Material.ROCK, 5.0f, 5.0f), "blocks/decoration/ivory/");
		registerBlock(registry, new BasicDecorationBlock("OrnateIvory", "ornate_ivory", Material.ROCK, 5.0f, 5.0f), "blocks/decoration/ivory/");
		registerBlock(registry, new BasicDecorationBlock("PatternedIvory", "patterned_ivory", Material.ROCK, 5.0f, 5.0f), "blocks/decoration/ivory/");
		registerBlock(registry, new BasicDecorationBlock("IntricateRositeIvory", "intricate_rosite_ivory", Material.ROCK, 5.0f, 5.0f), "blocks/decoration/ivory/");
		registerBlock(registry, new BasicDecorationBlock("NaturalRositeIvory", "natural_rosite_ivory", Material.ROCK, 5.0f, 5.0f), "blocks/decoration/ivory/");
		registerBlock(registry, new BasicDecorationBlock("OrnateRositeIvory", "ornate_rosite_ivory", Material.ROCK, 5.0f, 5.0f), "blocks/decoration/ivory/");
		registerBlock(registry, new BasicDecorationBlock("PatternedRositeIvory", "patterned_rosite_ivory", Material.ROCK, 5.0f, 5.0f), "blocks/decoration/ivory/");
		registerBlock(registry, new BasicDecorationBlock("IntricateSapphireIvory", "intricate_sapphire_ivory", Material.ROCK, 5.0f, 5.0f), "blocks/decoration/ivory/");
		registerBlock(registry, new BasicDecorationBlock("NaturalSapphireIvory", "natural_sapphire_ivory", Material.ROCK, 5.0f, 5.0f), "blocks/decoration/ivory/");
		registerBlock(registry, new BasicDecorationBlock("OrnateSapphireIvory", "ornate_sapphire_ivory", Material.ROCK, 5.0f, 5.0f), "blocks/decoration/ivory/");
		registerBlock(registry, new BasicDecorationBlock("PatternedSapphireIvory", "patterned_sapphire_ivory", Material.ROCK, 5.0f, 5.0f), "blocks/decoration/ivory/");

		registerBlock(registry, new AchonySapling(), "blocks/decoration/saplings/", "treeSapling");
		registerBlock(registry, new BloodtwisterSapling(), "blocks/decoration/saplings/", "treeSapling");
		registerBlock(registry, new BlueCelevusSapling(), "blocks/decoration/saplings/", "treeSapling");
		registerBlock(registry, new BlueHavenSapling(), "blocks/decoration/saplings/", "treeSapling");
		registerBlock(registry, new BrightShyreSapling(), "blocks/decoration/saplings/", "treeSapling");
		registerBlock(registry, new ChurrySapling(), "blocks/decoration/saplings/", "treeSapling");
		registerBlock(registry, new CreepSapling(), "blocks/decoration/saplings/", "treeSapling");
		registerBlock(registry, new DawnwoodSapling(), "blocks/decoration/saplings/", "treeSapling");
		registerBlock(registry, new EyebushSapling(), "blocks/decoration/saplings/", "treeSapling");
		registerBlock(registry, new EyeHangerSapling(), "blocks/decoration/saplings/", "treeSapling");
		registerBlock(registry, new GreenCelevusSapling(), "blocks/decoration/saplings/", "treeSapling");
		registerBlock(registry, new HauntedSapling(), "blocks/decoration/saplings/", "treeSapling");
		registerBlock(registry, new IrodustSapling(), "blocks/decoration/saplings/", "treeSapling");
		registerBlock(registry, new IrogoldSapling(), "blocks/decoration/saplings/", "treeSapling");
		registerBlock(registry, new LucalusSapling(), "blocks/decoration/saplings/", "treeSapling");
		registerBlock(registry, new LuniciaSapling(), "blocks/decoration/saplings/", "treeSapling");
		registerBlock(registry, new LunossoSapling(), "blocks/decoration/saplings/", "treeSapling");
		registerBlock(registry, new PinkHavenSapling(), "blocks/decoration/saplings/", "treeSapling");
		registerBlock(registry, new PurpleCelevusSapling(), "blocks/decoration/saplings/", "treeSapling");
		registerBlock(registry, new PurpleHavenSapling(), "blocks/decoration/saplings/", "treeSapling");
		registerBlock(registry, new RedCelevusSapling(), "blocks/decoration/saplings/", "treeSapling");
		registerBlock(registry, new RedHavenSapling(), "blocks/decoration/saplings/", "treeSapling");
		registerBlock(registry, new RunicSapling(), "blocks/decoration/saplings/", "treeSapling");
		registerBlock(registry, new ShadowSapling(), "blocks/decoration/saplings/", "treeSapling");
		registerBlock(registry, new ShyreSapling(), "blocks/decoration/saplings/", "treeSapling");
		registerBlock(registry, new StranglewoodSapling(), "blocks/decoration/saplings/", "treeSapling");
		registerBlock(registry, new TurquoiseHavenSapling(), "blocks/decoration/saplings/", "treeSapling");
		registerBlock(registry, new YellowCelevusSapling(), "blocks/decoration/saplings/", "treeSapling");
		registerBlock(registry, new YellowHavenSapling(), "blocks/decoration/saplings/", "treeSapling");

		registerBlock(registry, new LeavesBlock("AchonyLeaves", "achony_leaves", getUnmappedBlock("achony_sapling"), 58), "blocks/generation/leaves/", ORE_DICT_LEAVES);
		registerBlock(registry, new LeavesBlock("BloodLeaves", "blood_leaves", getUnmappedBlock("bloodtwister_sapling"), 30), "blocks/generation/leaves/", ORE_DICT_LEAVES);
		registerBlock(registry, new LeavesBlock("BlueCelevusLeaves", "blue_celevus_leaves", getUnmappedBlock("blue_celevus_sapling"), 36), "blocks/generation/leaves/", ORE_DICT_LEAVES);
		registerBlock(registry, new LeavesBlock("GreenCelevusLeaves", "green_celevus_leaves", getUnmappedBlock("green_celevus_sapling"), 36), "blocks/generation/leaves/", ORE_DICT_LEAVES);
		registerBlock(registry, new LeavesBlock("PurpleCelevusLeaves", "purple_celevus_leaves", getUnmappedBlock("purple_celevus_sapling"), 36), "blocks/generation/leaves/", ORE_DICT_LEAVES);
		registerBlock(registry, new LeavesBlock("RedCelevusLeaves", "red_celevus_leaves", getUnmappedBlock("red_celevus_sapling"), 36), "blocks/generation/leaves/", ORE_DICT_LEAVES);
		registerBlock(registry, new LeavesBlock("WhiteCelevusLeaves", "white_celevus_leaves"), "blocks/generation/leaves/", ORE_DICT_LEAVES);
		registerBlock(registry, new LeavesBlock("YellowCelevusLeaves", "yellow_celevus_leaves", getUnmappedBlock("yellow_celevus_sapling"), 36), "blocks/generation/leaves/", ORE_DICT_LEAVES);
		registerBlock(registry, new LeavesBlock("ChurryLeaves", "churry_leaves", getUnmappedBlock("churry_sapling"), 66), "blocks/generation/leaves/", ORE_DICT_LEAVES);
		registerBlock(registry, new LeavesBlock("CreepLeaves", "creep_leaves", getUnmappedBlock("creep_sapling"), 17), "blocks/generation/leaves/", ORE_DICT_LEAVES);
		registerBlock(registry, new LeavesBlock("CycadeLeaves", "cycade_leaves"), "blocks/generation/leaves/", ORE_DICT_LEAVES);
		registerBlock(registry, new LeavesBlock("DawnLeaves", "dawn_leaves", getUnmappedBlock("dawnwood_sapling"), 15), "blocks/generation/leaves/", ORE_DICT_LEAVES);
		registerBlock(registry, new LeavesBlock("HauntedLeaves", "haunted_leaves", getUnmappedBlock("haunted_sapling"), 60), "blocks/generation/leaves/", ORE_DICT_LEAVES);
		registerBlock(registry, new LeavesBlock("HauntedEyesLeaves", "haunted_eyes_leaves", getUnmappedBlock("haunted_sapling"), 60), "blocks/generation/leaves/", ORE_DICT_LEAVES);
		registerBlock(registry, new LeavesBlock("BlueHavenLeaves", "blue_haven_leaves", getUnmappedBlock("blue_haven_sapling"), 38), "blocks/generation/leaves/", ORE_DICT_LEAVES);
		registerBlock(registry, new LeavesBlock("PinkHavenLeaves", "pink_haven_leaves", getUnmappedBlock("pink_haven_sapling"), 38), "blocks/generation/leaves/", ORE_DICT_LEAVES);
		registerBlock(registry, new LeavesBlock("PurpleHavenLeaves", "purple_haven_leaves", getUnmappedBlock("purple_haven_sapling"), 38), "blocks/generation/leaves/", ORE_DICT_LEAVES);
		registerBlock(registry, new LeavesBlock("RedHavenLeaves", "red_haven_leaves", getUnmappedBlock("red_haven_sapling"), 38), "blocks/generation/leaves/", ORE_DICT_LEAVES);
		registerBlock(registry, new LeavesBlock("TurquoiseHavenLeaves", "turquoise_haven_leaves", getUnmappedBlock("turquoise_haven_sapling"), 38), "blocks/generation/leaves/", ORE_DICT_LEAVES);
		registerBlock(registry, new LeavesBlock("YellowHavenLeaves", "yellow_haven_leaves", getUnmappedBlock("yellow_haven_sapling"), 38), "blocks/generation/leaves/", ORE_DICT_LEAVES);
		registerBlock(registry, new LeavesBlock("IrodustLeaves", "irodust_leaves", getUnmappedBlock("irodust_sapling"), 19), "blocks/generation/leaves/", ORE_DICT_LEAVES);
		registerBlock(registry, new LeavesBlock("IrogoldLeaves", "irogold_leaves", getUnmappedBlock("irogold_sapling"), 9), "blocks/generation/leaves/", ORE_DICT_LEAVES);
		registerBlock(registry, new LeavesBlock("LelyetianLeaves", "lelyetian_leaves"), "blocks/generation/leaves/", ORE_DICT_LEAVES);
		registerBlock(registry, new LeavesBlock("LucalusLeaves", "lucalus_leaves", getUnmappedBlock("lucalus_sapling"), 45), "blocks/generation/leaves/", ORE_DICT_LEAVES);
		registerBlock(registry, new LeavesBlock("LuniciaLeaves", "lunicia_leaves", getUnmappedBlock("lunicia_sapling"), 14), "blocks/generation/leaves/", ORE_DICT_LEAVES);
		registerBlock(registry, new LeavesBlock("LunossoLeaves", "lunosso_leaves", getUnmappedBlock("lunosso_sapling"), 8), "blocks/generation/leaves/", ORE_DICT_LEAVES);
		registerBlock(registry, new TranslucentLeavesBlock("RunicLeaves", "runic_leaves", getUnmappedBlock("runic_sapling"), 23), "blocks/generation/leaves/", ORE_DICT_LEAVES);
		registerBlock(registry, new LeavesBlock("ShadowLeaves", "shadow_leaves", getUnmappedBlock("shadow_sapling"), 27), "blocks/generation/leaves/", ORE_DICT_LEAVES);
		registerBlock(registry, new LeavesBlock("ShadowbloodLeaves", "shadowblood_leaves", getUnmappedBlock("eye_hanger_sapling"), 21), "blocks/generation/leaves/", ORE_DICT_LEAVES);
		registerBlock(registry, new LeavesBlock("ShyreLeaves", "shyre_leaves", getUnmappedBlock("shyre_sapling"), 7), "blocks/generation/leaves/", ORE_DICT_LEAVES);
		registerBlock(registry, new LeavesBlock("BrightShyreLeaves", "bright_shyre_leaves", getUnmappedBlock("bright_shyre_sapling"), 7), "blocks/generation/leaves/", ORE_DICT_LEAVES);
		registerBlock(registry, new LeavesBlock("StranglewoodLeaves", "stranglewood_leaves", getUnmappedBlock("stranglewood_sapling"), 34), "blocks/generation/leaves/", ORE_DICT_LEAVES);
		registerBlock(registry, new LeavesBlock("VeinLeaves", "vein_leaves", getUnmappedBlock("eyebush_sapling"), 30), "blocks/generation/leaves/", ORE_DICT_LEAVES);

		registerBlock(registry, new LogBlock("AchonyLog", "achony_log"), "blocks/generation/wood/", ORE_DICT_WOOD);
		registerBlock(registry, new LogBlock("BloodLog", "blood_log"), "blocks/generation/wood/", ORE_DICT_WOOD);
		registerBlock(registry, new LogBlock("ChurryLog", "churry_log"), "blocks/generation/wood/", ORE_DICT_WOOD);
		registerBlock(registry, new LogBlock("CreepLog", "creep_log"), "blocks/generation/wood/", ORE_DICT_WOOD);
		registerBlock(registry, new LogBlock("CycadeLog", "cycade_log"), "blocks/generation/wood/", ORE_DICT_WOOD);
		registerBlock(registry, new LogBlock("DawnLog", "dawn_log"), "blocks/generation/wood/", ORE_DICT_WOOD);
		registerBlock(registry, new LogBlock("EyeballLog", "eyeball_log"), "blocks/generation/wood/", ORE_DICT_WOOD);
		registerBlock(registry, new LogBlock("HauntedLog", "haunted_log"), "blocks/generation/wood/", ORE_DICT_WOOD);
		registerBlock(registry, new LogBlock("HauntedEyeLog", "haunted_eye_log"), "blocks/generation/wood/", ORE_DICT_WOOD);
		registerBlock(registry, new LogBlock("HauntedEyesLog", "haunted_eyes_log"), "blocks/generation/wood/", ORE_DICT_WOOD);
		registerBlock(registry, new LogBlock("HauntedFlashingLog", "haunted_flashing_log"), "blocks/generation/wood/", ORE_DICT_WOOD);
		registerBlock(registry, new LogBlock("HauntedPurplingLog", "haunted_purpling_log"), "blocks/generation/wood/", ORE_DICT_WOOD);
		registerBlock(registry, new LogBlock("IroLog", "iro_log"), "blocks/generation/wood/", ORE_DICT_WOOD);
		registerBlock(registry, new LogBlock("LucalusLog", "lucalus_log"), "blocks/generation/wood/", ORE_DICT_WOOD);
		registerBlock(registry, new LogBlock("LunideLog", "lunide_log"), "blocks/generation/wood/", ORE_DICT_WOOD);
		registerBlock(registry, new LogBlock("RunicLog", "runic_log"), "blocks/generation/wood/", ORE_DICT_WOOD);
		registerBlock(registry, new LogBlock("ShadowLog", "shadow_log"), "blocks/generation/wood/", ORE_DICT_WOOD);
		registerBlock(registry, new LogBlock("ShyreLog", "shyre_log"), "blocks/generation/wood/", ORE_DICT_WOOD);
		registerBlock(registry, new StranglewoodLog(), "blocks/generation/wood/", ORE_DICT_WOOD);
		registerBlock(registry, new LogBlock("ToxicLog", "toxic_log"), "blocks/generation/wood/", ORE_DICT_WOOD);

		registerBlock(registry, new BasicDecorationBlock("AchonyPlanks", "achony_planks", Material.WOOD), "blocks/decoration/planks/", ORE_DICT_PLANKS);
		registerBlock(registry, new BasicDecorationBlock("BloodwoodPlanks", "bloodwood_planks", Material.WOOD), "blocks/decoration/planks/", ORE_DICT_PLANKS);
		registerBlock(registry, new BasicDecorationBlock("ChurryPlanks", "churry_planks", Material.WOOD), "blocks/decoration/planks/", ORE_DICT_PLANKS);
		registerBlock(registry, new BasicDecorationBlock("CreepPlanks", "creep_planks", Material.WOOD), "blocks/decoration/planks/", ORE_DICT_PLANKS);
		registerBlock(registry, new BasicDecorationBlock("CycadePlanks", "cycade_planks", Material.WOOD), "blocks/decoration/planks/", ORE_DICT_PLANKS);
		registerBlock(registry, new BasicDecorationBlock("DawnwoodPlanks", "dawnwood_planks", Material.WOOD), "blocks/decoration/planks/", ORE_DICT_PLANKS);
		registerBlock(registry, new BasicDecorationBlock("HauntedwoodPlanks", "hauntedwood_planks", Material.WOOD), "blocks/decoration/planks/", ORE_DICT_PLANKS);
		registerBlock(registry, new BasicDecorationBlock("IrowoodPlanks", "irowood_planks", Material.WOOD), "blocks/decoration/planks/", ORE_DICT_PLANKS);
		registerBlock(registry, new BasicDecorationBlock("LucalusPlanks", "lucalus_planks", Material.WOOD), "blocks/decoration/planks/", ORE_DICT_PLANKS);
		registerBlock(registry, new BasicDecorationBlock("LunidePlanks", "lunide_planks", Material.WOOD), "blocks/decoration/planks/", ORE_DICT_PLANKS);
		registerBlock(registry, new BasicDecorationBlock("RunicPlanks", "runic_planks", Material.WOOD), "blocks/decoration/planks/", ORE_DICT_PLANKS);
		registerBlock(registry, new BasicDecorationBlock("ShadowPlanks", "shadow_planks", Material.WOOD), "blocks/decoration/planks/", ORE_DICT_PLANKS);
		registerBlock(registry, new BasicDecorationBlock("ShyrePlanks", "shyre_planks", Material.WOOD), "blocks/decoration/planks/", ORE_DICT_PLANKS);
		registerBlock(registry, new BasicDecorationBlock("StranglewoodPlanks", "stranglewood_planks", Material.WOOD), "blocks/decoration/planks/", ORE_DICT_PLANKS);
		registerBlock(registry, new BasicDecorationBlock("ToxicwoodPlanks", "toxicwood_planks", Material.WOOD), "blocks/decoration/planks/", ORE_DICT_PLANKS);

		registerBlock(registry, new SlabBlock.DoubleSlabBlock("AchonySlab", "achony_slab", Material.WOOD), "blocks/decoration/slabs/", ORE_DICT_SLAB_WOOD);
		registerBlock(registry, new SlabBlock.DoubleSlabBlock("BaronBricksSlab", "baron_bricks_slab", Material.ROCK), "blocks/decoration/slabs/");
		registerBlock(registry, new SlabBlock.DoubleSlabBlock("BlackBricksSlab", "black_bricks_slab", Material.ROCK), "blocks/decoration/slabs/");
		registerBlock(registry, new SlabBlock.DoubleSlabBlock("BloodstoneBricksSlab", "bloodstone_bricks_slab", Material.ROCK), "blocks/decoration/slabs/");
		registerBlock(registry, new SlabBlock.DoubleSlabBlock("BloodwoodSlab", "bloodwood_slab", Material.WOOD), "blocks/decoration/slabs/", ORE_DICT_SLAB_WOOD);
		registerBlock(registry, new SlabBlock.DoubleSlabBlock("BlueBricksSlab", "blue_bricks_slab", Material.ROCK), "blocks/decoration/slabs/");
		registerBlock(registry, new SlabBlock.DoubleSlabBlock("BrownBricksSlab", "brown_bricks_slab", Material.ROCK), "blocks/decoration/slabs/");
		registerBlock(registry, new SlabBlock.DoubleSlabBlock("ChurrySlab", "churry_slab", Material.WOOD), "blocks/decoration/slabs/", ORE_DICT_SLAB_WOOD);
		registerBlock(registry, new SlabBlock.DoubleSlabBlock("CoralBricksSlab", "coral_bricks_slab", Material.ROCK), "blocks/decoration/slabs/");
		registerBlock(registry, new SlabBlock.DoubleSlabBlock("CreepSlab", "creep_slab", Material.WOOD), "blocks/decoration/slabs/", ORE_DICT_SLAB_WOOD);
		registerBlock(registry, new SlabBlock.DoubleSlabBlock("CreeponiaBricksSlab", "creeponia_bricks_slab", Material.ROCK), "blocks/decoration/slabs/");
		registerBlock(registry, new SlabBlock.DoubleSlabBlock("CrystalliteBricksSlab", "crystallite_bricks_slab", Material.ROCK), "blocks/decoration/slabs/");
		registerBlock(registry, new SlabBlock.DoubleSlabBlock("CrysteviaBricksSlab", "crystevia_bricks_slab", Material.ROCK), "blocks/decoration/slabs/");
		registerBlock(registry, new SlabBlock.DoubleSlabBlock("CyanBricksSlab", "cyan_bricks_slab", Material.ROCK), "blocks/decoration/slabs/");
		registerBlock(registry, new SlabBlock.DoubleSlabBlock("CycadeSlab", "cycade_slab", Material.WOOD), "blocks/decoration/slabs/", ORE_DICT_SLAB_WOOD);
		registerBlock(registry, new SlabBlock.DoubleSlabBlock("DarkBlueBricksSlab", "dark_blue_bricks_slab", Material.ROCK), "blocks/decoration/slabs/");
		registerBlock(registry, new SlabBlock.DoubleSlabBlock("DarkBricksSlab", "dark_bricks_slab", Material.ROCK), "blocks/decoration/slabs/");
		registerBlock(registry, new SlabBlock.DoubleSlabBlock("DarkGreyBricksSlab", "dark_grey_bricks_slab", Material.ROCK), "blocks/decoration/slabs/");
		registerBlock(registry, new SlabBlock.DoubleSlabBlock("DarkwashBricksSlab", "darkwash_bricks_slab", Material.ROCK), "blocks/decoration/slabs/");
		registerBlock(registry, new SlabBlock.DoubleSlabBlock("DawnwoodSlab", "dawnwood_slab", Material.WOOD), "blocks/decoration/slabs/", ORE_DICT_SLAB_WOOD);
		registerBlock(registry, new SlabBlock.DoubleSlabBlock("GardenciaBricksSlab", "gardencia_bricks_slab", Material.ROCK), "blocks/decoration/slabs/");
		registerBlock(registry, new SlabBlock.DoubleSlabBlock("GreckonBricksSlab", "greckon_bricks_slab", Material.ROCK), "blocks/decoration/slabs/");
		registerBlock(registry, new SlabBlock.DoubleSlabBlock("GreenBricksSlab", "green_bricks_slab", Material.ROCK), "blocks/decoration/slabs/");
		registerBlock(registry, new SlabBlock.DoubleSlabBlock("GreyBricksSlab", "grey_bricks_slab", Material.ROCK), "blocks/decoration/slabs/");
		registerBlock(registry, new SlabBlock.DoubleSlabBlock("HauntedBricksSlab", "haunted_bricks_slab", Material.ROCK), "blocks/decoration/slabs/");
		registerBlock(registry, new SlabBlock.DoubleSlabBlock("HauntedwoodSlab", "hauntedwood_slab", Material.WOOD), "blocks/decoration/slabs/");
		registerBlock(registry, new SlabBlock.DoubleSlabBlock("IroDottedBricksSlab", "iro_dotted_bricks_slab", Material.ROCK), "blocks/decoration/slabs/");
		registerBlock(registry, new SlabBlock.DoubleSlabBlock("IroStripedBricksSlab", "iro_striped_bricks_slab", Material.ROCK), "blocks/decoration/slabs/");
		registerBlock(registry, new SlabBlock.DoubleSlabBlock("IrowoodSlab", "irowood_slab", Material.WOOD), "blocks/decoration/slabs/", ORE_DICT_SLAB_WOOD);
		registerBlock(registry, new SlabBlock.DoubleSlabBlock("IntricateAmethystIvorySlab", "intricate_amethyst_ivory_slab", Material.ROCK), "blocks/decoration/slabs/");
		registerBlock(registry, new SlabBlock.DoubleSlabBlock("NaturalAmethystIvorySlab", "natural_amethyst_ivory_slab", Material.ROCK), "blocks/decoration/slabs/");
		registerBlock(registry, new SlabBlock.DoubleSlabBlock("OrnateAmethystIvorySlab", "ornate_amethyst_ivory_slab", Material.ROCK), "blocks/decoration/slabs/");
		registerBlock(registry, new SlabBlock.DoubleSlabBlock("PatternedAmethystIvorySlab", "patterned_amethyst_ivory_slab", Material.ROCK), "blocks/decoration/slabs/");
		registerBlock(registry, new SlabBlock.DoubleSlabBlock("IntricateIvorySlab", "intricate_ivory_slab", Material.ROCK), "blocks/decoration/slabs/");
		registerBlock(registry, new SlabBlock.DoubleSlabBlock("IntricateJadeIvorySlab", "intricate_jade_ivory_slab", Material.ROCK), "blocks/decoration/slabs/");
		registerBlock(registry, new SlabBlock.DoubleSlabBlock("NaturalJadeIvorySlab", "natural_jade_ivory_slab", Material.ROCK), "blocks/decoration/slabs/");
		registerBlock(registry, new SlabBlock.DoubleSlabBlock("OrnateJadeIvorySlab", "ornate_jade_ivory_slab", Material.ROCK), "blocks/decoration/slabs/");
		registerBlock(registry, new SlabBlock.DoubleSlabBlock("PatternedJadeIvorySlab", "patterned_jade_ivory_slab", Material.ROCK), "blocks/decoration/slabs/");
		registerBlock(registry, new SlabBlock.DoubleSlabBlock("IntricateLimoniteIvorySlab", "intricate_limonite_ivory_slab", Material.ROCK), "blocks/decoration/slabs/");
		registerBlock(registry, new SlabBlock.DoubleSlabBlock("NaturalLimoniteIvorySlab", "natural_limonite_ivory_slab", Material.ROCK), "blocks/decoration/slabs/");
		registerBlock(registry, new SlabBlock.DoubleSlabBlock("OrnateLimoniteIvorySlab", "ornate_limonite_ivory_slab", Material.ROCK), "blocks/decoration/slabs/");
		registerBlock(registry, new SlabBlock.DoubleSlabBlock("PatternedLimoniteIvorySlab", "patterned_limonite_ivory_slab", Material.ROCK), "blocks/decoration/slabs/");
		registerBlock(registry, new SlabBlock.DoubleSlabBlock("NaturalIvorySlab", "natural_ivory_slab", Material.ROCK), "blocks/decoration/slabs/");
		registerBlock(registry, new SlabBlock.DoubleSlabBlock("OrnateIvorySlab", "ornate_ivory_slab", Material.ROCK), "blocks/decoration/slabs/");
		registerBlock(registry, new SlabBlock.DoubleSlabBlock("PatternedIvorySlab", "patterned_ivory_slab", Material.ROCK), "blocks/decoration/slabs/");
		registerBlock(registry, new SlabBlock.DoubleSlabBlock("IntricateRositeIvorySlab", "intricate_rosite_ivory_slab", Material.ROCK), "blocks/decoration/slabs/");
		registerBlock(registry, new SlabBlock.DoubleSlabBlock("NaturalRositeIvorySlab", "natural_rosite_ivory_slab", Material.ROCK), "blocks/decoration/slabs/");
		registerBlock(registry, new SlabBlock.DoubleSlabBlock("OrnateRositeIvorySlab", "ornate_rosite_ivory_slab", Material.ROCK), "blocks/decoration/slabs/");
		registerBlock(registry, new SlabBlock.DoubleSlabBlock("PatternedRositeIvorySlab", "patterned_rosite_ivory_slab", Material.ROCK), "blocks/decoration/slabs/");
		registerBlock(registry, new SlabBlock.DoubleSlabBlock("IntricateSapphireIvorySlab", "intricate_sapphire_ivory_slab", Material.ROCK), "blocks/decoration/slabs/");
		registerBlock(registry, new SlabBlock.DoubleSlabBlock("NaturalSapphireIvorySlab", "natural_sapphire_ivory_slab", Material.ROCK), "blocks/decoration/slabs/");
		registerBlock(registry, new SlabBlock.DoubleSlabBlock("OrnateSapphireIvorySlab", "ornate_sapphire_ivory_slab", Material.ROCK), "blocks/decoration/slabs/");
		registerBlock(registry, new SlabBlock.DoubleSlabBlock("PatternedSapphireIvorySlab", "patterned_sapphire_ivory_slab", Material.ROCK), "blocks/decoration/slabs/");
		registerBlock(registry, new SlabBlock.DoubleSlabBlock("LelyetiaBricksSlab", "lelyetia_bricks_slab", Material.ROCK), "blocks/decoration/slabs/");
		registerBlock(registry, new SlabBlock.DoubleSlabBlock("LimeBricksSlab", "lime_bricks_slab", Material.ROCK), "blocks/decoration/slabs/");
		registerBlock(registry, new SlabBlock.DoubleSlabBlock("LucalusSlab", "lucalus_slab", Material.WOOD), "blocks/decoration/slabs/", ORE_DICT_SLAB_WOOD);
		registerBlock(registry, new SlabBlock.DoubleSlabBlock("LunarBricksSlab", "lunar_bricks_slab", Material.ROCK), "blocks/decoration/slabs/");
		registerBlock(registry, new SlabBlock.DoubleSlabBlock("LunideSlab", "lunide_slab", Material.WOOD), "blocks/decoration/slabs/", ORE_DICT_SLAB_WOOD);
		registerBlock(registry, new SlabBlock.DoubleSlabBlock("MagentaBricksSlab", "magenta_bricks_slab", Material.ROCK), "blocks/decoration/slabs/");
		registerBlock(registry, new SlabBlock.DoubleSlabBlock("MysteriumBlackBricksSlab", "black_mysterium_bricks_slab", Material.ROCK), "blocks/decoration/slabs/");
		registerBlock(registry, new SlabBlock.DoubleSlabBlock("MysteriumGreenBricksSlab", "green_mysterium_bricks_slab", Material.ROCK), "blocks/decoration/slabs/");
		registerBlock(registry, new SlabBlock.DoubleSlabBlock("OrangeBricksSlab", "orange_bricks_slab", Material.ROCK), "blocks/decoration/slabs/");
		registerBlock(registry, new SlabBlock.DoubleSlabBlock("PinkBricksSlab", "pink_bricks_slab", Material.ROCK), "blocks/decoration/slabs/");
		registerBlock(registry, new SlabBlock.DoubleSlabBlock("PurpleBricksSlab", "purple_bricks_slab", Material.ROCK), "blocks/decoration/slabs/");
		registerBlock(registry, new SlabBlock.DoubleSlabBlock("RedBricksSlab", "red_bricks_slab", Material.ROCK), "blocks/decoration/slabs/");
		registerBlock(registry, new SlabBlock.DoubleSlabBlock("RosidianBricksSlab", "rosidian_bricks_slab", Material.ROCK), "blocks/decoration/slabs/");
		registerBlock(registry, new SlabBlock.DoubleSlabBlock("RunicSlab", "runic_slab", Material.WOOD), "blocks/decoration/slabs/", ORE_DICT_SLAB_WOOD);
		registerBlock(registry, new SlabBlock.DoubleSlabBlock("RunicConstructBricksSlab", "runic_construct_bricks_slab", Material.ROCK), "blocks/decoration/slabs/");
		registerBlock(registry, new SlabBlock.DoubleSlabBlock("ShadowSlab", "shadow_slab", Material.WOOD), "blocks/decoration/slabs/", ORE_DICT_SLAB_WOOD);
		registerBlock(registry, new SlabBlock.DoubleSlabBlock("ShyreSlab", "shyre_slab", Material.WOOD), "blocks/decoration/slabs/", ORE_DICT_SLAB_WOOD);
		registerBlock(registry, new SlabBlock.DoubleSlabBlock("ShyreWhiteBricksSlab", "white_shyre_bricks_slab", Material.ROCK), "blocks/decoration/slabs/");
		registerBlock(registry, new SlabBlock.DoubleSlabBlock("ShyreYellowBricksSlab", "yellow_shyre_bricks_slab", Material.ROCK), "blocks/decoration/slabs/");
		registerBlock(registry, new SlabBlock.DoubleSlabBlock("SkeletalBricksSlab", "skeletal_bricks_slab", Material.ROCK), "blocks/decoration/slabs/");
		registerBlock(registry, new SlabBlock.DoubleSlabBlock("StranglewoodSlab", "stranglewood_slab", Material.WOOD), "blocks/decoration/slabs/", ORE_DICT_SLAB_WOOD);
		registerBlock(registry, new SlabBlock.DoubleSlabBlock("ToxicwoodSlab", "toxicwood_slab", Material.WOOD), "blocks/decoration/slabs/", ORE_DICT_SLAB_WOOD);
		registerBlock(registry, new SlabBlock.DoubleSlabBlock("WhitewashBricksSlab", "whitewash_bricks_slab", Material.ROCK), "blocks/decoration/slabs/");
		registerBlock(registry, new SlabBlock.DoubleSlabBlock("YellowBricksSlab", "yellow_bricks_slab", Material.ROCK), "blocks/decoration/slabs/");

		registerBlock(registry, new StairsBlock("AchonyStairs", "achony_stairs", getUnmappedBlock("achony_planks")), "blocks/decoration/stairs/", ORE_DICT_STAIRS_WOOD);
		registerBlock(registry, new StairsBlock("BaronBricksStairs", "baron_bricks_stairs", getUnmappedBlock("baron_bricks")), "blocks/decoration/stairs/");
		registerBlock(registry, new StairsBlock("BlackBricksStairs", "black_bricks_stairs", getUnmappedBlock("black_bricks")), "blocks/decoration/stairs/");
		registerBlock(registry, new StairsBlock("BloodstoneBricksStairs", "bloodstone_bricks_stairs", getUnmappedBlock("bloodstone_bricks")), "blocks/decoration/stairs/");
		registerBlock(registry, new StairsBlock("BloodwoodStairs", "bloodwood_stairs", getUnmappedBlock("bloodwood_planks")), "blocks/decoration/stairs/", ORE_DICT_STAIRS_WOOD);
		registerBlock(registry, new StairsBlock("BlueBricksStairs", "blue_bricks_stairs", getUnmappedBlock("blue_bricks")), "blocks/decoration/stairs/");
		registerBlock(registry, new StairsBlock("BrownBricksStairs", "brown_bricks_stairs", getUnmappedBlock("brown_bricks")), "blocks/decoration/stairs/");
		registerBlock(registry, new StairsBlock("ChurryStairs", "churry_stairs", getUnmappedBlock("churry_planks")), "blocks/decoration/stairs/", ORE_DICT_STAIRS_WOOD);
		registerBlock(registry, new StairsBlock("CoralBricksStairs", "coral_bricks_stairs", getUnmappedBlock("coral_bricks")), "blocks/decoration/stairs/");
		registerBlock(registry, new StairsBlock("CreepStairs", "creep_stairs", getUnmappedBlock("creep_planks")), "blocks/decoration/stairs/", ORE_DICT_STAIRS_WOOD);
		registerBlock(registry, new StairsBlock("CreeponiaBricksStairs", "creeponia_bricks_stairs", getUnmappedBlock("creeponia_bricks")), "blocks/decoration/stairs/");
		registerBlock(registry, new StairsBlock("CrystalliteBricksStairs", "crystallite_bricks_stairs", getUnmappedBlock("crystallite_bricks")), "blocks/decoration/stairs/");
		registerBlock(registry, new StairsBlock("CrysteviaBricksStairs", "crystevia_bricks_stairs", getUnmappedBlock("crystevia_bricks")), "blocks/decoration/stairs/");
		registerBlock(registry, new StairsBlock("CyanBricksStairs", "cyan_bricks_stairs", getUnmappedBlock("cyan_bricks")), "blocks/decoration/stairs/");
		registerBlock(registry, new StairsBlock("CycadeStairs", "cycade_stairs", getUnmappedBlock("cycade_planks")), "blocks/decoration/stairs/", ORE_DICT_STAIRS_WOOD);
		registerBlock(registry, new StairsBlock("DarkBlueBricksStairs", "dark_blue_bricks_stairs", getUnmappedBlock("dark_blue_bricks")), "blocks/decoration/stairs/");
		registerBlock(registry, new StairsBlock("DarkBricksStairs", "dark_bricks_stairs", getUnmappedBlock("dark_bricks")), "blocks/decoration/stairs/");
		registerBlock(registry, new StairsBlock("DarkGreyBricksStairs", "dark_grey_bricks_stairs", getUnmappedBlock("dark_grey_bricks")), "blocks/decoration/stairs/");
		registerBlock(registry, new StairsBlock("DarkwashBricksStairs", "darkwash_bricks_stairs", getUnmappedBlock("darkwash_bricks")), "blocks/decoration/stairs/");
		registerBlock(registry, new StairsBlock("DawnwoodStairs", "dawnwood_stairs", getUnmappedBlock("dawnwood_planks")), "blocks/decoration/stairs/", ORE_DICT_STAIRS_WOOD);
		registerBlock(registry, new StairsBlock("GardenciaBricksStairs", "gardencia_bricks_stairs", getUnmappedBlock("gardencia_bricks")), "blocks/decoration/stairs/");
		registerBlock(registry, new StairsBlock("GreckonBricksStairs", "greckon_bricks_stairs", getUnmappedBlock("greckon_bricks")), "blocks/decoration/stairs/");
		registerBlock(registry, new StairsBlock("GreenBricksStairs", "green_bricks_stairs", getUnmappedBlock("green_bricks")), "blocks/decoration/stairs/");
		registerBlock(registry, new StairsBlock("GreyBricksStairs", "grey_bricks_stairs", getUnmappedBlock("grey_bricks")), "blocks/decoration/stairs/");
		registerBlock(registry, new StairsBlock("HauntedBricksStairs", "haunted_bricks_stairs", getUnmappedBlock("haunted_bricks")), "blocks/decoration/stairs/");
		registerBlock(registry, new StairsBlock("HauntedwoodStairs", "hauntedwood_stairs", getUnmappedBlock("hauntedwood_planks")), "blocks/decoration/stairs/", ORE_DICT_STAIRS_WOOD);
		registerBlock(registry, new StairsBlock("IroDottedBricksStairs", "iro_dotted_bricks_stairs", getUnmappedBlock("iro_dotted_bricks")), "blocks/decoration/stairs/");
		registerBlock(registry, new StairsBlock("IroStripedBricksStairs", "iro_striped_bricks_stairs", getUnmappedBlock("iro_striped_bricks")), "blocks/decoration/stairs/");
		registerBlock(registry, new StairsBlock("IrowoodStairs", "irowood_stairs", getUnmappedBlock("irowood_planks")), "blocks/decoration/stairs/", ORE_DICT_STAIRS_WOOD);
		registerBlock(registry, new StairsBlock("IntricateAmethystIvoryStairs", "intricate_amethyst_ivory_stairs", getUnmappedBlock("intricate_amethyst_ivory")), "blocks/decoration/stairs/");
		registerBlock(registry, new StairsBlock("NaturalAmethystIvoryStairs", "natural_amethyst_ivory_stairs", getUnmappedBlock("natural_amethyst_ivory")), "blocks/decoration/stairs/");
		registerBlock(registry, new StairsBlock("OrnateAmethystIvoryStairs", "ornate_amethyst_ivory_stairs", getUnmappedBlock("ornate_amethyst_ivory")), "blocks/decoration/stairs/");
		registerBlock(registry, new StairsBlock("PatternedAmethystIvoryStairs", "patterned_amethyst_ivory_stairs", getUnmappedBlock("patterned_amethyst_ivory")), "blocks/decoration/stairs/");
		registerBlock(registry, new StairsBlock("IntricateIvoryStairs", "intricate_ivory_stairs", getUnmappedBlock("intricate_ivory")), "blocks/decoration/stairs/");
		registerBlock(registry, new StairsBlock("IntricateJadeIvoryStairs", "intricate_jade_ivory_stairs", getUnmappedBlock("intricate_jade_ivory")), "blocks/decoration/stairs/");
		registerBlock(registry, new StairsBlock("NaturalJadeIvoryStairs", "natural_jade_ivory_stairs", getUnmappedBlock("natural_jade_ivory")), "blocks/decoration/stairs/");
		registerBlock(registry, new StairsBlock("OrnateJadeIvoryStairs", "ornate_jade_ivory_stairs", getUnmappedBlock("ornate_jade_ivory")), "blocks/decoration/stairs/");
		registerBlock(registry, new StairsBlock("PatternedJadeIvoryStairs", "patterned_jade_ivory_stairs", getUnmappedBlock("patterned_jade_ivory")), "blocks/decoration/stairs/");
		registerBlock(registry, new StairsBlock("IntricateLimoniteIvoryStairs", "intricate_limonite_ivory_stairs", getUnmappedBlock("intricate_limonite_ivory")), "blocks/decoration/stairs/");
		registerBlock(registry, new StairsBlock("NaturalLimoniteIvoryStairs", "natural_limonite_ivory_stairs", getUnmappedBlock("natural_limonite_ivory")), "blocks/decoration/stairs/");
		registerBlock(registry, new StairsBlock("OrnateLimoniteIvoryStairs", "ornate_limonite_ivory_stairs", getUnmappedBlock("ornate_limonite_ivory")), "blocks/decoration/stairs/");
		registerBlock(registry, new StairsBlock("PatternedLimoniteIvoryStairs", "patterned_limonite_ivory_stairs", getUnmappedBlock("patterned_limonite_ivory")), "blocks/decoration/stairs/");
		registerBlock(registry, new StairsBlock("NaturalIvoryStairs", "natural_ivory_stairs", getUnmappedBlock("natural_ivory")), "blocks/decoration/stairs/");
		registerBlock(registry, new StairsBlock("OrnateIvoryStairs", "ornate_ivory_stairs", getUnmappedBlock("ornate_ivory")), "blocks/decoration/stairs/");
		registerBlock(registry, new StairsBlock("PatternedIvoryStairs", "patterned_ivory_stairs", getUnmappedBlock("patterned_ivory")), "blocks/decoration/stairs/");
		registerBlock(registry, new StairsBlock("IntricateRositeIvoryStairs", "intricate_rosite_ivory_stairs", getUnmappedBlock("intricate_rosite_ivory")), "blocks/decoration/stairs/");
		registerBlock(registry, new StairsBlock("NaturalRositeIvoryStairs", "natural_rosite_ivory_stairs", getUnmappedBlock("natural_rosite_ivory")), "blocks/decoration/stairs/");
		registerBlock(registry, new StairsBlock("OrnateRositeIvoryStairs", "ornate_rosite_ivory_stairs", getUnmappedBlock("ornate_rosite_ivory")), "blocks/decoration/stairs/");
		registerBlock(registry, new StairsBlock("PatternedRositeIvoryStairs", "patterned_rosite_ivory_stairs", getUnmappedBlock("patterned_rosite_ivory")), "blocks/decoration/stairs/");
		registerBlock(registry, new StairsBlock("IntricateSapphireIvoryStairs", "intricate_sapphire_ivory_stairs", getUnmappedBlock("intricate_sapphire_ivory")), "blocks/decoration/stairs/");
		registerBlock(registry, new StairsBlock("NaturalSapphireIvoryStairs", "natural_sapphire_ivory_stairs", getUnmappedBlock("natural_sapphire_ivory")), "blocks/decoration/stairs/");
		registerBlock(registry, new StairsBlock("OrnateSapphireIvoryStairs", "ornate_sapphire_ivory_stairs", getUnmappedBlock("ornate_sapphire_ivory")), "blocks/decoration/stairs/");
		registerBlock(registry, new StairsBlock("PatternedSapphireIvoryStairs", "patterned_sapphire_ivory_stairs", getUnmappedBlock("patterned_sapphire_ivory")), "blocks/decoration/stairs/");
		registerBlock(registry, new StairsBlock("LelyetiaBricksStairs", "lelyetia_bricks_stairs", getUnmappedBlock("lelyetia_bricks")), "blocks/decoration/stairs/");
		registerBlock(registry, new StairsBlock("LimeBricksStairs", "lime_bricks_stairs", getUnmappedBlock("lime_bricks")), "blocks/decoration/stairs/");
		registerBlock(registry, new StairsBlock("LucalusStairs", "lucalus_stairs", getUnmappedBlock("lucalus_planks")), "blocks/decoration/stairs/", ORE_DICT_STAIRS_WOOD);
		registerBlock(registry, new StairsBlock("LunarBricksStairs", "lunar_bricks_stairs", getUnmappedBlock("lunar_bricks")), "blocks/decoration/stairs/");
		registerBlock(registry, new StairsBlock("LunideStairs", "lunide_stairs", getUnmappedBlock("lunide_planks")), "blocks/decoration/stairs/", ORE_DICT_STAIRS_WOOD);
		registerBlock(registry, new StairsBlock("MagentaBricksStairs", "magenta_bricks_stairs", getUnmappedBlock("magenta_bricks")), "blocks/decoration/stairs/");
		registerBlock(registry, new StairsBlock("MysteriumBlackBricksStairs", "black_mysterium_bricks_stairs", getUnmappedBlock("black_mysterium_bricks")), "blocks/decoration/stairs/");
		registerBlock(registry, new StairsBlock("MysteriumGreenBricksStairs", "green_mysterium_bricks_stairs", getUnmappedBlock("green_mysterium_bricks")), "blocks/decoration/stairs/");
		registerBlock(registry, new StairsBlock("OrangeBricksStairs", "orange_bricks_stairs", getUnmappedBlock("orange_bricks")), "blocks/decoration/stairs/");
		registerBlock(registry, new StairsBlock("PinkBricksStairs", "pink_bricks_stairs", getUnmappedBlock("pink_bricks")), "blocks/decoration/stairs/");
		registerBlock(registry, new StairsBlock("PurpleBricksStairs", "purple_bricks_stairs", getUnmappedBlock("purple_bricks")), "blocks/decoration/stairs/");
		registerBlock(registry, new StairsBlock("RedBricksStairs", "red_bricks_stairs", getUnmappedBlock("red_bricks")), "blocks/decoration/stairs/");
		registerBlock(registry, new StairsBlock("RosidianBricksStairs", "rosidian_bricks_stairs", getUnmappedBlock("rosidian_bricks")), "blocks/decoration/stairs/");
		registerBlock(registry, new StairsBlock("RunicStairs", "runic_stairs", getUnmappedBlock("runic_planks")), "blocks/decoration/stairs/", ORE_DICT_STAIRS_WOOD);
		registerBlock(registry, new StairsBlock("RunicConstructBricksStairs", "runic_construct_bricks_stairs", getUnmappedBlock("runic_construct_bricks")), "blocks/decoration/stairs/");
		registerBlock(registry, new StairsBlock("ShadowStairs", "shadow_stairs", getUnmappedBlock("shadow_planks")), "blocks/decoration/stairs/", ORE_DICT_STAIRS_WOOD);
		registerBlock(registry, new StairsBlock("ShyreStairs", "shyre_stairs", getUnmappedBlock("shyre_planks")), "blocks/decoration/stairs/", ORE_DICT_STAIRS_WOOD);
		registerBlock(registry, new StairsBlock("ShyreWhiteBricksStairs", "white_shyre_bricks_stairs", getUnmappedBlock("white_shyre_bricks")), "blocks/decoration/stairs/");
		registerBlock(registry, new StairsBlock("ShyreYellowBricksStairs", "yellow_shyre_bricks_stairs", getUnmappedBlock("yellow_shyre_bricks")), "blocks/decoration/stairs/");
		registerBlock(registry, new StairsBlock("SkeletalBricksStairs", "skeletal_bricks_stairs", getUnmappedBlock("skeletal_bricks")), "blocks/decoration/stairs/");
		registerBlock(registry, new StairsBlock("StranglewoodStairs", "stranglewood_stairs", getUnmappedBlock("stranglewood_planks")), "blocks/decoration/stairs/", ORE_DICT_STAIRS_WOOD);
		registerBlock(registry, new StairsBlock("ToxicwoodStairs", "toxicwood_stairs", getUnmappedBlock("toxicwood_planks")), "blocks/decoration/stairs/", ORE_DICT_STAIRS_WOOD);
		registerBlock(registry, new StairsBlock("WhitewashBricksStairs", "whitewash_bricks_stairs", getUnmappedBlock("whitewash_bricks")), "blocks/decoration/stairs/");
		registerBlock(registry, new StairsBlock("YellowBricksStairs", "yellow_bricks_stairs", getUnmappedBlock("yellow_bricks")), "blocks/decoration/stairs/");

		registerBlock(registry, new FenceBlock("AchonyFence", "achony_fence"), "blocks/decoration/fences/", ORE_DICT_FENCE_WOOD);
		registerBlock(registry, new FenceBlock("BloodwoodFence", "bloodwood_fence"), "blocks/decoration/fences/", ORE_DICT_FENCE_WOOD);
		registerBlock(registry, new FenceBlock("ChurryFence", "churry_fence"), "blocks/decoration/fences/", ORE_DICT_FENCE_WOOD);
		registerBlock(registry, new FenceBlock("CreepFence", "creep_fence"), "blocks/decoration/fences/", ORE_DICT_FENCE_WOOD);
		registerBlock(registry, new FenceBlock("CycadeFence", "cycade_fence"), "blocks/decoration/fences/", ORE_DICT_FENCE_WOOD);
		registerBlock(registry, new FenceBlock("DawnwoodFence", "dawnwood_fence"), "blocks/decoration/fences/", ORE_DICT_FENCE_WOOD);
		registerBlock(registry, new FenceBlock("HauntedwoodFence", "hauntedwood_fence"), "blocks/decoration/fences/", ORE_DICT_FENCE_WOOD);
		registerBlock(registry, new FenceBlock("IrowoodFence", "irowood_fence"), "blocks/decoration/fences/", ORE_DICT_FENCE_WOOD);
		registerBlock(registry, new FenceBlock("LucalusFence", "lucalus_fence"), "blocks/decoration/fences/", ORE_DICT_FENCE_WOOD);
		registerBlock(registry, new FenceBlock("LunideFence", "lunide_fence"), "blocks/decoration/fences/", ORE_DICT_FENCE_WOOD);
		registerBlock(registry, new FenceBlock("RunicFence", "runic_fence"), "blocks/decoration/fences/", ORE_DICT_FENCE_WOOD);
		registerBlock(registry, new FenceBlock("ShadowFence", "shadow_fence"), "blocks/decoration/fences/", ORE_DICT_FENCE_WOOD);
		registerBlock(registry, new FenceBlock("ShyreFence", "shyre_fence"), "blocks/decoration/fences/", ORE_DICT_FENCE_WOOD);
		registerBlock(registry, new FenceBlock("StranglewoodFence", "stranglewood_fence"), "blocks/decoration/fences/", ORE_DICT_FENCE_WOOD);
		registerBlock(registry, new FenceBlock("ToxicwoodFence", "toxicwood_fence"), "blocks/decoration/fences/", ORE_DICT_FENCE_WOOD);
		registerBlock(registry, new TwinklestoneFence(), "blocks/decoration/fences/");

		registerBlock(registry, new GateBlock("AchonyGate", "achony_gate"), "blocks/decoration/gates/", ORE_DICT_FENCE_GATE_WOOD);
		registerBlock(registry, new GateBlock("BloodwoodGate", "bloodwood_gate"), "blocks/decoration/gates/", ORE_DICT_FENCE_GATE_WOOD);
		registerBlock(registry, new GateBlock("ChurryGate", "churry_gate"), "blocks/decoration/gates/", ORE_DICT_FENCE_GATE_WOOD);
		registerBlock(registry, new GateBlock("CreepGate", "creep_gate"), "blocks/decoration/gates/", ORE_DICT_FENCE_GATE_WOOD);
		registerBlock(registry, new GateBlock("CycadeGate", "cycade_gate"), "blocks/decoration/gates/", ORE_DICT_FENCE_GATE_WOOD);
		registerBlock(registry, new GateBlock("DawnwoodGate", "dawnwood_gate"), "blocks/decoration/gates/", ORE_DICT_FENCE_GATE_WOOD);
		registerBlock(registry, new GateBlock("HauntedwoodGate", "hauntedwood_gate"), "blocks/decoration/gates/", ORE_DICT_FENCE_GATE_WOOD);
		registerBlock(registry, new GateBlock("IrowoodGate", "irowood_gate"), "blocks/decoration/gates/", ORE_DICT_FENCE_GATE_WOOD);
		registerBlock(registry, new GateBlock("LucalusGate", "lucalus_gate"), "blocks/decoration/gates/", ORE_DICT_FENCE_GATE_WOOD);
		registerBlock(registry, new GateBlock("LunideGate", "lunide_gate"), "blocks/decoration/gates/", ORE_DICT_FENCE_GATE_WOOD);
		registerBlock(registry, new GateBlock("RunicGate", "runic_gate"), "blocks/decoration/gates/", ORE_DICT_FENCE_GATE_WOOD);
		registerBlock(registry, new GateBlock("ShadowGate", "shadow_gate"), "blocks/decoration/gates/", ORE_DICT_FENCE_GATE_WOOD);
		registerBlock(registry, new GateBlock("ShyreGate", "shyre_gate"), "blocks/decoration/gates/", ORE_DICT_FENCE_GATE_WOOD);
		registerBlock(registry, new GateBlock("StranglewoodGate", "stranglewood_gate"), "blocks/decoration/gates/", ORE_DICT_FENCE_GATE_WOOD);
		registerBlock(registry, new GateBlock("ToxicwoodGate", "toxicwood_gate"), "blocks/decoration/gates/", ORE_DICT_FENCE_GATE_WOOD);

		registerBlock(registry, new BasicBlock("FlowerCore", "flower_core", Material.GOURD), "blocks/generation/misc/");
		registerBlock(registry, new BasicBlock("BlackMushroom", "black_mushroom", Material.GOURD), "blocks/generation/misc/");
		registerBlock(registry, new BasicBlock("BlueMushroomInside", "blue_mushroom_inside", Material.GOURD), "blocks/generation/misc/");
		registerBlock(registry, new BasicBlock("BlueMushroomOutside", "blue_mushroom_outside", Material.GOURD), "blocks/generation/misc/");
		registerBlock(registry, new BasicBlock("GreenMushroomInside", "green_mushroom_inside", Material.GOURD), "blocks/generation/misc/");
		registerBlock(registry, new BasicBlock("GreenMushroomOutside", "green_mushroom_outside", Material.GOURD), "blocks/generation/misc/");
		registerBlock(registry, new BasicBlock("OrangeMushroomInside", "orange_mushroom_inside", Material.GOURD), "blocks/generation/misc/");
		registerBlock(registry, new BasicBlock("OrangeMushroomOutside", "orange_mushroom_outside", Material.GOURD), "blocks/generation/misc/");
		registerBlock(registry, new BasicBlock("PurpleMushroomInside", "purple_mushroom_inside", Material.GOURD), "blocks/generation/misc/");
		registerBlock(registry, new BasicBlock("PurpleMushroomOutside", "purple_mushroom_outside", Material.GOURD), "blocks/generation/misc/");
		registerBlock(registry, new BasicBlock("BlackMushroomStem", "black_mushroom_stem", Material.GOURD), "blocks/generation/misc/");
		registerBlock(registry, new BasicBlock("BlueMushroomStem", "blue_mushroom_stem", Material.GOURD), "blocks/generation/misc/");
		registerBlock(registry, new BasicBlock("GreenMushroomStem", "green_mushroom_stem", Material.GOURD), "blocks/generation/misc/");
		registerBlock(registry, new BasicBlock("OrangeMushroomStem", "orange_mushroom_stem", Material.GOURD), "blocks/generation/misc/");
		registerBlock(registry, new BasicBlock("PurpleMushroomStem", "purple_mushroom_stem", Material.GOURD), "blocks/generation/misc/");
		registerBlock(registry, new BasicBlock("YellowMushroomStem", "yellow_mushroom_stem", Material.GOURD), "blocks/generation/misc/");
		registerBlock(registry, new BasicBlock("YellowMushroomInside", "yellow_mushroom_inside", Material.GOURD), "blocks/generation/misc/");
		registerBlock(registry, new BasicBlock("YellowMushroomOutside", "yellow_mushroom_outside", Material.GOURD), "blocks/generation/misc/");
		registerBlock(registry, new BasicBlock("PlantStem", "plant_stem", Material.GOURD), "blocks/generation/misc/");

		registerItemlessBlock(registry, new CandiedWaterBlock());

		registerBlock(registry, new UnbreakableLightBlock("AncientLight", "ancient_light", Material.GLASS, 1.0f), "blocks/functional/lights/");
		registerBlock(registry, new UnbreakableLightBlock("ArchaicLight", "archaic_light", Material.GLASS, 0.8f), "blocks/functional/lights/");
		registerBlock(registry, new LightBlock("ArchaicLightBreakable", "archaic_light_breakable", Material.GLASS, 0.8f, 1.2f, 0.5f), "blocks/functional/lights/");
		registerBlock(registry, new LightBlock("CreepCrystal", "creep_crystal", Material.GLASS, 0.8f, 1.2f, 0.5f), "blocks/functional/lights/");
		registerBlock(registry, new LightBlock("Darkstone", "darkstone", Material.GLASS, 0.8f, 1.2f, 0.5f), "blocks/functional/lights/");
		registerBlock(registry, new LightBlock("DeepCrystal", "deep_crystal", Material.GLASS, 0.8f, 1.2f, 0.5f), "blocks/functional/lights/");
		registerBlock(registry, new LightBlock("HiveLight", "hive_light", Material.GLASS, 0.8f, 1.2f, 0.5f), "blocks/functional/lights/");
		registerBlock(registry, new LightBlock("SteelLight", "steel_light", Material.IRON, 0.1f, 5.0f, 7.5f), "blocks/functional/lights/");
		registerBlock(registry, new LightBlock("Twinklestone", "twinklestone", Material.GLASS, 0.8f, 1.2f, 0.5f), "blocks/functional/lights/");
		registerBlock(registry, new VoxLight(), "blocks/functional/lights/");

		registerBlock(registry, new LampBlock("AmethystLamp", "amethyst_lamp", Material.REDSTONE_LIGHT, 1.0f, 1.5f, 1.0f), "blocks/functional/lamps/");
		registerBlock(registry, new LampBlock("AquaticLamp", "aquatic_lamp", Material.REDSTONE_LIGHT, 1.0f, 1.5f, 1.0f), "blocks/functional/lamps/");
		registerBlock(registry, new LampBlock("BaronyteLamp", "baronyte_lamp", Material.REDSTONE_LIGHT, 1.0f, 1.5f, 1.0f), "blocks/functional/lamps/");
		registerBlock(registry, new LampBlock("BlaziumLamp", "blazium_lamp", Material.REDSTONE_LIGHT, 1.0f, 1.5f, 1.0f), "blocks/functional/lamps/");
		registerBlock(registry, new LampBlock("BloodstoneLamp", "bloodstone_lamp", Material.REDSTONE_LIGHT, 1.0f, 1.5f, 1.0f), "blocks/functional/lamps/");
		registerBlock(registry, new LampBlock("CrystalliteLamp", "crystallite_lamp", Material.REDSTONE_LIGHT, 1.0f, 1.5f, 1.0f), "blocks/functional/lamps/");
		registerBlock(registry, new LampBlock("ElecaniumLamp", "elecanium_lamp", Material.REDSTONE_LIGHT, 1.0f, 1.5f, 1.0f), "blocks/functional/lamps/");
		registerBlock(registry, new LampBlock("EmberstoneLamp", "emberstone_lamp", Material.REDSTONE_LIGHT, 1.0f, 1.5f, 1.0f), "blocks/functional/lamps/");
		registerBlock(registry, new LampBlock("FireLamp", "fire_lamp", Material.REDSTONE_LIGHT, 1.0f, 1.5f, 1.0f), "blocks/functional/lamps/");
		registerBlock(registry, new LampBlock("GhastlyLamp", "ghastly_lamp", Material.REDSTONE_LIGHT, 1.0f, 1.5f, 1.0f), "blocks/functional/lamps/");
		registerBlock(registry, new LampBlock("GhoulishLamp", "ghoulish_lamp", Material.REDSTONE_LIGHT, 1.0f, 1.5f, 1.0f), "blocks/functional/lamps/");
		registerBlock(registry, new LampBlock("IroLamp", "iro_lamp", Material.REDSTONE_LIGHT, 1.0f, 1.5f, 1.0f), "blocks/functional/lamps/");
		registerBlock(registry, new LampBlock("IvoryLamp", "ivory_lamp", Material.REDSTONE_LIGHT, 1.0f, 1.5f, 1.0f), "blocks/functional/lamps/");
		registerBlock(registry, new LampBlock("IvoryAmethystLamp", "ivory_amethyst_lamp", Material.REDSTONE_LIGHT, 1.0f, 1.5f, 1.0f), "blocks/functional/lamps/");
		registerBlock(registry, new LampBlock("IvoryJadeLamp", "ivory_jade_lamp", Material.REDSTONE_LIGHT, 1.0f, 1.5f, 1.0f), "blocks/functional/lamps/");
		registerBlock(registry, new LampBlock("IvoryLimoniteLamp", "ivory_limonite_lamp", Material.REDSTONE_LIGHT, 1.0f, 1.5f, 1.0f), "blocks/functional/lamps/");
		registerBlock(registry, new LampBlock("IvoryRositeLamp", "ivory_rosite_lamp", Material.REDSTONE_LIGHT, 1.0f, 1.5f, 1.0f), "blocks/functional/lamps/");
		registerBlock(registry, new LampBlock("IvorySapphireLamp", "ivory_sapphire_lamp", Material.REDSTONE_LIGHT, 1.0f, 1.5f, 1.0f), "blocks/functional/lamps/");
		registerBlock(registry, new LampBlock("JadeLamp", "jade_lamp", Material.REDSTONE_LIGHT, 1.0f, 1.5f, 1.0f), "blocks/functional/lamps/");
		registerBlock(registry, new LampBlock("AquaLifeLamp", "aqua_life_lamp", Material.REDSTONE_LIGHT, 1.0f, 1.5f, 1.0f), "blocks/functional/lamps/");
		registerBlock(registry, new LampBlock("BlackLifeLamp", "black_life_lamp", Material.REDSTONE_LIGHT, 1.0f, 1.5f, 1.0f), "blocks/functional/lamps/");
		registerBlock(registry, new LampBlock("BlueLifeLamp", "blue_life_lamp", Material.REDSTONE_LIGHT, 1.0f, 1.5f, 1.0f), "blocks/functional/lamps/");
		registerBlock(registry, new LampBlock("BrownLifeLamp", "brown_life_lamp", Material.REDSTONE_LIGHT, 1.0f, 1.5f, 1.0f), "blocks/functional/lamps/");
		registerBlock(registry, new LampBlock("CyanLifeLamp", "cyan_life_lamp", Material.REDSTONE_LIGHT, 1.0f, 1.5f, 1.0f), "blocks/functional/lamps/");
		registerBlock(registry, new LampBlock("DarkGreyLifeLamp", "dark_grey_life_lamp", Material.REDSTONE_LIGHT, 1.0f, 1.5f, 1.0f), "blocks/functional/lamps/");
		registerBlock(registry, new LampBlock("GreenLifeLamp", "green_life_lamp", Material.REDSTONE_LIGHT, 1.0f, 1.5f, 1.0f), "blocks/functional/lamps/");
		registerBlock(registry, new LampBlock("GreyLifeLamp", "grey_life_lamp", Material.REDSTONE_LIGHT, 1.0f, 1.5f, 1.0f), "blocks/functional/lamps/");
		registerBlock(registry, new LampBlock("LimeLifeLamp", "lime_life_lamp", Material.REDSTONE_LIGHT, 1.0f, 1.5f, 1.0f), "blocks/functional/lamps/");
		registerBlock(registry, new LampBlock("MagentaLifeLamp", "magenta_life_lamp", Material.REDSTONE_LIGHT, 1.0f, 1.5f, 1.0f), "blocks/functional/lamps/");
		registerBlock(registry, new LampBlock("OrangeLifeLamp", "orange_life_lamp", Material.REDSTONE_LIGHT, 1.0f, 1.5f, 1.0f), "blocks/functional/lamps/");
		registerBlock(registry, new LampBlock("PinkLifeLamp", "pink_life_lamp", Material.REDSTONE_LIGHT, 1.0f, 1.5f, 1.0f), "blocks/functional/lamps/");
		registerBlock(registry, new LampBlock("PurpleLifeLamp", "purple_life_lamp", Material.REDSTONE_LIGHT, 1.0f, 1.5f, 1.0f), "blocks/functional/lamps/");
		registerBlock(registry, new LampBlock("RedLifeLamp", "red_life_lamp", Material.REDSTONE_LIGHT, 1.0f, 1.5f, 1.0f), "blocks/functional/lamps/");
		registerBlock(registry, new LampBlock("WhiteLifeLamp", "white_life_lamp", Material.REDSTONE_LIGHT, 1.0f, 1.5f, 1.0f), "blocks/functional/lamps/");
		registerBlock(registry, new LampBlock("YellowLifeLamp", "yellow_life_lamp", Material.REDSTONE_LIGHT, 1.0f, 1.5f, 1.0f), "blocks/functional/lamps/");
		registerBlock(registry, new LampBlock("LimoniteLamp", "limonite_lamp", Material.REDSTONE_LIGHT, 1.0f, 1.5f, 1.0f), "blocks/functional/lamps/");
		registerBlock(registry, new LampBlock("LunarLamp", "lunar_lamp", Material.REDSTONE_LIGHT, 1.0f, 1.5f, 1.0f), "blocks/functional/lamps/");
		registerBlock(registry, new LampBlock("LyonLamp", "lyon_lamp", Material.REDSTONE_LIGHT, 1.0f, 1.5f, 1.0f), "blocks/functional/lamps/");
		registerBlock(registry, new LampBlock("MysticLamp", "mystic_lamp", Material.REDSTONE_LIGHT, 1.0f, 1.5f, 1.0f), "blocks/functional/lamps/");
		registerBlock(registry, new LampBlock("NeonLamp", "neon_lamp", Material.REDSTONE_LIGHT, 1.0f, 1.5f, 1.0f), "blocks/functional/lamps/");
		registerBlock(registry, new LampBlock("NeonCirclingLamp", "neon_circling_lamp", Material.REDSTONE_LIGHT, 1.0f, 1.5f, 1.0f), "blocks/functional/lamps/");
		registerBlock(registry, new LampBlock("NeonLapisLamp", "neon_lapis_lamp", Material.REDSTONE_LIGHT, 1.0f, 1.5f, 1.0f), "blocks/functional/lamps/");
		registerBlock(registry, new LampBlock("NeonLapisCirclingLamp", "neon_lapis_circling_lamp", Material.REDSTONE_LIGHT, 1.0f, 1.5f, 1.0f), "blocks/functional/lamps/");
		registerBlock(registry, new LampBlock("NeonLapisTrianglesLamp", "neon_lapis_triangles_lamp", Material.REDSTONE_LIGHT, 1.0f, 1.5f, 1.0f), "blocks/functional/lamps/");
		registerBlock(registry, new LampBlock("NeonRunicLamp", "neon_runic_lamp", Material.REDSTONE_LIGHT, 1.0f, 1.5f, 1.0f), "blocks/functional/lamps/");
		registerBlock(registry, new LampBlock("NeonTrianglesLamp", "neon_triangles_lamp", Material.REDSTONE_LIGHT, 1.0f, 1.5f, 1.0f), "blocks/functional/lamps/");
		registerBlock(registry, new LampBlock("RositeLamp", "rosite_lamp", Material.REDSTONE_LIGHT, 1.0f, 1.5f, 1.0f), "blocks/functional/lamps/");
		registerBlock(registry, new LampBlock("SapphireLamp", "sapphire_lamp", Material.REDSTONE_LIGHT, 1.0f, 1.5f, 1.0f), "blocks/functional/lamps/");
		registerBlock(registry, new LampBlock("SkeletalLamp", "skeletal_lamp", Material.REDSTONE_LIGHT, 1.0f, 1.5f, 1.0f), "blocks/functional/lamps/");

		registerBlock(registry, new GlassBlock("AbyssalGlass", "abyssal_glass"), "blocks/decoration/glass/", ORE_DICT_GLASS);
		registerBlock(registry, new UnbreakableGlassBlock("AncientGlass", "ancient_glass"), "blocks/decoration/glass/", ORE_DICT_GLASS);
		registerBlock(registry, new GlassBlock("AquaticGlass", "aquatic_glass"), "blocks/decoration/glass/", ORE_DICT_GLASS);
		registerBlock(registry, new UnbreakableGlassBlock("ArchaicGlass", "archaic_glass"), "blocks/decoration/glass/", ORE_DICT_GLASS);
		registerBlock(registry, new GlassBlock("ArchaicGlassBreakable", "archaic_glass_breakable"), "blocks/decoration/glass/", ORE_DICT_GLASS);
		registerBlock(registry, new GlassBlock("BaronGlass", "baron_glass"), "blocks/decoration/glass/", ORE_DICT_GLASS);
		registerBlock(registry, new GlassBlock("DecayedGlass", "decayed_glass"), "blocks/decoration/glass/", ORE_DICT_GLASS);
		registerBlock(registry, new GlassBlock("GardencianGlass", "gardencian_glass"), "blocks/decoration/glass/", ORE_DICT_GLASS);
		registerBlock(registry, new GlassBlock("HavenGlass", "haven_glass"), "blocks/decoration/glass/", ORE_DICT_GLASS);
		registerBlock(registry, new GlassBlock("IroGlass", "iro_glass"), "blocks/decoration/glass/", ORE_DICT_GLASS);
		registerBlock(registry, new GlassBlock("LelyetianGlass", "lelyetian_glass"), "blocks/decoration/glass/", ORE_DICT_GLASS);
		registerBlock(registry, new UnbreakableGlassBlock("LunarGlass", "lunar_glass"), "blocks/decoration/glass/", ORE_DICT_GLASS);
		registerBlock(registry, new GlassBlock("RunicGlass", "runic_glass"), "blocks/decoration/glass/", ORE_DICT_GLASS);
		registerBlock(registry, new UnbreakableGlassBlock("UnbreakableRunicGlass", "unbreakable_runic_glass"), "blocks/decoration/glass/", ORE_DICT_GLASS);
		registerBlock(registry, new GlassBlock("ShyreGlass", "shyre_glass"), "blocks/decoration/glass/", ORE_DICT_GLASS);
		registerBlock(registry, new GlassBlock("VoxGlass", "vox_glass"), "blocks/decoration/glass/", ORE_DICT_GLASS);
		registerBlock(registry, new GlassBlock("ZhinxGlass", "zhinx_glass"), "blocks/decoration/glass/", ORE_DICT_GLASS);

		registerBlock(registry, new CompressedBlock("AmethystBlock", "amethyst_block"), "blocks/decoration/compressedblock/", "blockAmethyst");
		registerBlock(registry, new CompressedBlock("BaronyteBlock", "baronyte_block"), "blocks/decoration/compressedblock/", "blockBaronyte");
		registerBlock(registry, new CompressedBlock("BlaziumBlock", "blazium_block"), "blocks/decoration/compressedblock/", "blockBlazium");
		registerBlock(registry, new CompressedBlock("BloodstoneBlock", "bloodstone_block"), "blocks/decoration/compressedblock/", "blockBloodstone");
		registerBlock(registry, new CompressedBlock("CrystalliteBlock", "crystallite_block"), "blocks/decoration/compressedblock/", "blockCrystallite");
		registerBlock(registry, new CompressedBlock("ElecaniumBlock", "elecanium_block"), "blocks/decoration/compressedblock/", "blockElecanium");
		registerBlock(registry, new CompressedBlock("EmberstoneBlock", "emberstone_block"), "blocks/decoration/compressedblock/", "blockEmberstone");
		registerBlock(registry, new CompressedBlock("GemenyteBlock", "gemenyte_block"), "blocks/decoration/compressedblock/", "blockGemenyte");
		registerBlock(registry, new CompressedBlock("GhastlyBlock", "ghastly_block"), "blocks/decoration/compressedblock/", "blockGhastly");
		registerBlock(registry, new CompressedBlock("GhoulishBlock", "ghoulish_block"), "blocks/decoration/compressedblock/", "blockGhoulish");
		registerBlock(registry, new CompressedBlock("JadeBlock", "jade_block"), "blocks/decoration/compressedblock/", "blockJade");
		registerBlock(registry, new CompressedBlock("JewelyteBlock", "jewelyte_block"), "blocks/decoration/compressedblock/", "blockJewelyte");
		registerBlock(registry, new CompressedBlock("LimoniteBlock", "limonite_block", true), "blocks/decoration/compressedblock/", "blockLimonite");
		registerBlock(registry, new CompressedBlock("LunarBlock", "lunar_block"), "blocks/decoration/compressedblock/", "blockLunar");
		registerBlock(registry, new CompressedBlock("LyonBlock", "lyon_block"), "blocks/decoration/compressedblock/", "blockLyon");
		registerBlock(registry, new CompressedBlock("MystiteBlock", "mystite_block"), "blocks/decoration/compressedblock/", "blockMystite");
		registerBlock(registry, new CompressedBlock("OrnamyteBlock", "ornamyte_block"), "blocks/decoration/compressedblock/", "blockOrnamyte");
		registerBlock(registry, new CompressedBlock("RositeBlock", "rosite_block"), "blocks/decoration/compressedblock/", "blockRosite");
		registerBlock(registry, new CompressedBlock("SapphireBlock", "sapphire_block"), "blocks/decoration/compressedblock/", "blocksaphire");
		registerBlock(registry, new CompressedBlock("ShyregemBlock", "shyregem_block"), "blocks/decoration/compressedblock/", "blockShyregem");
		registerBlock(registry, new CompressedBlock("ShyrestoneBlock", "shyrestone_block"), "blocks/decoration/compressedblock/", "blockShyrestone");
		registerBlock(registry, new CompressedBlock("SkeletalIngotBlock", "skeletal_ingot_block"), "blocks/decoration/compressedblock/", "blockSkeletal");
		registerBlock(registry, new CompressedBlock("VarsiumBlock", "varsium_block"), "blocks/decoration/compressedblock/", "blockVarsium");

		registerBlock(registry, new CarpetBlock("BaronCarpet", "baron_carpet"), "blocks/decoration/carpets/");
		registerBlock(registry, new CarpetBlock("BoreanCarpet", "borean_carpet"), "blocks/decoration/carpets/");
		registerBlock(registry, new CarpetBlock("GardencianCarpet", "gardencian_carpet"), "blocks/decoration/carpets/");
		registerBlock(registry, new CarpetBlock("IroCarpet", "iro_carpet"), "blocks/decoration/carpets/");
		registerBlock(registry, new CarpetBlock("LunarCarpet", "lunar_carpet"), "blocks/decoration/carpets/");

		registerBlock(registry, new Crystallanium(), "blocks/functional/misc/");
		registerBlock(registry, new Emberium(), "blocks/functional/misc/");
		registerBlock(registry, new Shadonantium(), "blocks/functional/misc/");
		registerBlock(registry, new Skeletanium(), "blocks/functional/misc/");

		registerBlock(registry, new BasicBlock("AncientRock", "ancient_rock", Material.ROCK), "blocks/generation/misc/", ORE_DICT_STONE);
		registerBlock(registry, new UnbreakableBlock("BlackAncientTile", "black_ancient_tile", Material.ROCK), "blocks/generation/misc/");
		registerBlock(registry, new UnbreakableBlock("AncientTileCore", "ancient_tile_core", Material.ROCK), "blocks/generation/misc/");
		registerBlock(registry, new UnbreakableBlock("GreenAncientTile", "green_ancient_tile", Material.ROCK), "blocks/generation/misc/");
		registerBlock(registry, new UnbreakableBlock("AncientTileShrine", "ancient_tile_shrine", Material.ROCK), "blocks/generation/misc/");
		registerBlock(registry, new UnbreakableBlock("WhiteAncientTile", "white_ancient_tile", Material.ROCK), "blocks/generation/misc/");
		registerBlock(registry, new UnbreakableBlock("ArchaicDirt", "archaic_dirt", Material.GROUND), "blocks/generation/misc/");
		registerBlock(registry, new BasicDecorationBlock("ArchaicDirtBreakable", "archaic_dirt_breakable", Material.GROUND, 0.5f, 0.0f), "blocks/generation/misc/");
		registerBlock(registry, new UnbreakableBlock("ArchaicHorizontalStream", "archaic_stream_horizontal", Material.ROCK), "blocks/generation/misc/");
		registerBlock(registry, new BasicDecorationBlock("ArchaicHorizontalStreamBreakable", "archaic_stream_horizontal_breakable", Material.ROCK, 2.0f, 10.0f), "blocks/generation/misc/");
		registerBlock(registry, new UnbreakableBlock("ArchaicRectangles", "archaic_rectangles", Material.ROCK), "blocks/generation/misc/");
		registerBlock(registry, new BasicDecorationBlock("ArchaicRectanglesBreakable", "archaic_rectangles_breakable", Material.ROCK, 2.0f, 10.0f), "blocks/generation/misc/");
		registerBlock(registry, new UnbreakableBlock("ArchaicSquares", "archaic_squares", Material.ROCK), "blocks/generation/misc/");
		registerBlock(registry, new BasicDecorationBlock("ArchaicSquaresBreakable", "archaic_squares_breakable", Material.ROCK, 2.0f, 10.0f), "blocks/generation/misc/");
		registerBlock(registry, new UnbreakableBlock("ArchaicTiles", "archaic_tiles", Material.ROCK), "blocks/generation/misc/");
		registerBlock(registry, new BasicDecorationBlock("ArchaicTilesBreakable", "archaic_tiles_breakable", Material.ROCK, 2.0f, 10.0f), "blocks/generation/misc/");
		registerBlock(registry, new UnbreakableBlock("ArchaicVerticalStream", "archaic_stream_vertical", Material.ROCK), "blocks/generation/misc/");
		registerBlock(registry, new BasicDecorationBlock("ArchaicVerticalStreamBreakable", "archaic_stream_vertical_breakable", Material.ROCK, 2.0f, 10.0f), "blocks/generation/misc/");
		registerBlock(registry, new BasicBlock("BaronCastleWall", "baron_castle_wall", Material.ROCK), "blocks/generation/misc/");
		registerBlock(registry, new BasicBlock("BaronCube", "baron_cube", Material.ROCK), "blocks/generation/misc/");
		registerBlock(registry, new BasicBlock("BaronGround", "baron_ground", Material.CLAY), "blocks/generation/misc/");
		registerBlock(registry, new BasicBlock("BloodstoneBarBricks", "bloodstone_bar_bricks", Material.IRON, 7.5f, 7f), "blocks/generation/misc/");
		registerBlock(registry, new BasicBlock("BloodstoneBars", "bloodstone_bars", Material.IRON, 7.5f, 7f), "blocks/generation/misc/");
		registerBlock(registry, new BasicBlock("GreenCandy", "green_candy", Material.ROCK), "blocks/generation/misc/");
		registerBlock(registry, new BasicBlock("RedCandy", "red_candy", Material.ROCK), "blocks/generation/misc/");
		registerBlock(registry, new BasicBlock("WhiteCandy", "white_candy", Material.ROCK), "blocks/generation/misc/");
		registerBlock(registry, new BasicBlock("ChocolateBlock", "chocolate_block", Material.ROCK), "blocks/generation/misc/");
		registerBlock(registry, new BasicBlock("DarkChocolateBlock", "dark_chocolate_block", Material.ROCK), "blocks/generation/misc/");
		registerBlock(registry, new BasicBlock("WhiteChocolateBlock", "white_chocolate_block", Material.ROCK), "blocks/generation/misc/");
		registerBlock(registry, new BasicBlock("CogBlock", "cog_block", Material.ROCK), "blocks/generation/misc/");
		registerBlock(registry, new BasicBlock("BlueCoral", "blue_coral", Material.ROCK), "blocks/generation/misc/");
		registerBlock(registry, new BasicBlock("GreenCoral", "green_coral", Material.ROCK), "blocks/generation/misc/");
		registerBlock(registry, new BasicBlock("OrangeCoral", "orange_coral", Material.ROCK), "blocks/generation/misc/");
		registerBlock(registry, new BasicBlock("PinkCoral", "pink_coral", Material.ROCK), "blocks/generation/misc/");
		registerBlock(registry, new BasicBlock("WhiteCoral", "white_coral", Material.ROCK), "blocks/generation/misc/");
		registerBlock(registry, new BasicBlock("YellowCoral", "yellow_coral", Material.ROCK), "blocks/generation/misc/");
		registerBlock(registry, new CottonCandy("AquaCottonCandy", "aqua_cotton_candy"), "blocks/generation/misc/");
		registerBlock(registry, new CottonCandy("PinkCottonCandy", "pink_cotton_candy"), "blocks/generation/misc/");
		registerBlock(registry, new BasicDecorationBlock("Crate", "crate", Material.WOOD), "blocks/decoration/misc/");
		registerBlock(registry, new TranslucentBlock("BlueCrystal", "blue_crystal_block", Material.GLASS, 1.0f, 0f, 0), "blocks/generation/misc/");
		registerBlock(registry, new TranslucentBlock("GreenCrystal", "green_crystal_block", Material.GLASS, 1.0f, 0f, 0), "blocks/generation/misc/");
		registerBlock(registry, new TranslucentBlock("PurpleCrystal", "purple_crystal_block", Material.GLASS, 1.0f, 0f, 0), "blocks/generation/misc/");
		registerBlock(registry, new TranslucentBlock("RedCrystal", "red_crystal_block", Material.GLASS, 1.0f, 0f, 0), "blocks/generation/misc/");
		registerBlock(registry, new TranslucentBlock("WhiteCrystal", "white_crystal_block", Material.GLASS, 1.0f, 0f, 0), "blocks/generation/misc/");
		registerBlock(registry, new TranslucentBlock("YellowCrystal", "yellow_crystal_block", Material.GLASS, 1.0f, 0f, 0), "blocks/generation/misc/");
		registerBlock(registry, new BasicBlock("DarkFaceBrick", "dark_face_brick", Material.ROCK), "blocks/generation/misc/");
		registerBlock(registry, new DeeplandsTrapExplosion(), "blocks/generation/misc/");
		registerBlock(registry, new DeeplandsTrapLava(), "blocks/generation/misc/");
		registerBlock(registry, new DeeplandsTrapNipper(), "blocks/generation/misc/");
		registerBlock(registry, new BasicBlock("DegradedSteel", "degraded_steel", Material.IRON, 5.0f, 10.0f), "blocks/generation/misc/");
		registerBlock(registry, new BasicBlock("EyeBlock", "eye_block", Material.GOURD, 4.0f, 1.5f), "blocks/generation/misc/");
		registerBlock(registry, new GiantSnailAcid(), "blocks/functional/misc/");
		registerBlock(registry, new BasicBlock("Gingerbread", "gingerbread", Material.ROCK), "blocks/generation/misc/");
		registerBlock(registry, new BasicBlock("HiveWall", "hive_wall", Material.ROCK), "blocks/generation/misc/");

		registerBlock(registry, new IroBrickTrap(), "blocks/generation/misc/");
		registerBlock(registry, new BasicNonCubeBlock("Iropole", "iropole", Material.ROCK), "blocks/generation/misc/");
		registerBlock(registry, new UnbreakableBlock("KaiyuTempleBlockFace", "kaiyu_temple_block_face", Material.ROCK), "blocks/generation/misc/");
		registerBlock(registry, new UnbreakableBlock("KaiyuTempleBlockFlow", "kaiyu_temple_block_flow", Material.ROCK), "blocks/generation/misc/");
		registerBlock(registry, new UnbreakableBlock("KaiyuTempleBlockMaze", "kaiyu_temple_block_maze", Material.ROCK), "blocks/generation/misc/");
		registerBlock(registry, new UnbreakableBlock("KaiyuTempleBlockPass", "kaiyu_temple_block_pass", Material.ROCK), "blocks/generation/misc/");
		registerBlock(registry, new UnbreakableBlock("KaiyuTempleBlockPlain", "kaiyu_temple_block_plain", Material.ROCK), "blocks/generation/misc/");
		registerBlock(registry, new UnbreakableBlock("KaiyuTempleBlockSquares", "kaiyu_temple_block_squares", Material.ROCK), "blocks/generation/misc/");
		registerBlock(registry, new UnbreakableBlock("KaiyuTempleBlockTrack", "kaiyu_temple_block_track", Material.ROCK), "blocks/generation/misc/");
		registerBlock(registry, new KaiyuTempleTrapWither(), "blocks/generation/misc/");
		registerBlock(registry, new KaiyuTempleTrapDamage(), "blocks/generation/misc/");
		registerBlock(registry, new KaiyuTempleTrapPoison(), "blocks/generation/misc/");
		registerBlock(registry,	new KaiyuTempleTrapFire(), "blocks/generation/misc/");
		registerBlock(registry, new LunarOrbBlock("DarklightOrb", "darklight_orb"), "blocks/generation/misc/");
		registerBlock(registry, new LunarOrbBlock("DuskOrb", "dusk_orb"), "blocks/generation/misc/");
		registerBlock(registry, new LunarOrbBlock("LunarOrb", "lunar_orb"), "blocks/generation/misc/");
		registerBlock(registry, new LunarOrbBlock("MoonlightOrb", "moonlight_orb"), "blocks/generation/misc/");
		registerBlock(registry, new LunarOrbBlock("SunfireOrb", "sunfire_orb"), "blocks/generation/misc/");
		registerBlock(registry, new BasicBlock("LunarPad", "lunar_pad", Material.ROCK), "blocks/generation/misc/");
		registerBlock(registry, new AcidBlock("OrangeAcid", "orange_acid"), "blocks/functional/misc/");
		registerBlock(registry, new BasicBlock("ParaviteHive", "paravite_hive", Material.ROCK), "blocks/generation/misc/");
		registerBlock(registry, new UnbreakableBlock("BlackPetals", "black_petals", Material.GOURD), "blocks/generation/misc/");
		registerBlock(registry, new BasicBlock("BluePetals", "blue_petals", Material.GOURD), "blocks/generation/misc/");
		registerBlock(registry, new BasicBlock("LightBluePetals", "light_blue_petals", Material.GOURD), "blocks/generation/misc/");
		registerBlock(registry, new BasicBlock("MagentaPetals", "magenta_petals", Material.GOURD), "blocks/generation/misc/");
		registerBlock(registry, new BasicBlock("PurplePetals", "purple_petals", Material.GOURD), "blocks/generation/misc/");
		registerBlock(registry, new BasicBlock("RedPetals", "red_petals", Material.GOURD), "blocks/generation/misc/");
		registerBlock(registry, new BasicBlock("RosePetals", "rose_petals", Material.GOURD), "blocks/generation/misc/");
		registerBlock(registry, new BasicBlock("YellowPetals", "yellow_petals", Material.GOURD), "blocks/generation/misc/");
		registerBlock(registry, new BasicBlock("Plastic", "plastic", Material.ROCK), "blocks/generation/misc/");
		registerBlock(registry, new RunePostBlock("RunePostCompass", "rune_post_compass",63, 45), "blocks/generation/misc/");
		registerBlock(registry, new RunePostBlock("RunePostDistortion", "rune_post_distortion", 65, 50), "blocks/generation/misc/");
		registerBlock(registry, new RunePostBlock("RunePostEnergy", "rune_post_energy", 36, 22), "blocks/generation/misc/");
		registerBlock(registry, new RunePostBlock("RunePostFire", "rune_post_fire", 8, 7), "blocks/generation/misc/");
		registerBlock(registry, new RunePostBlock("RunePostKinetic", "rune_post_kinetic", 54, 32), "blocks/generation/misc/");
		registerBlock(registry, new RunePostBlock("RunePostLife", "rune_post_life", 72, 56), "blocks/generation/misc/");
		registerBlock(registry, new RunePostBlock("RunePostPoison", "rune_post_poison", 22, 14), "blocks/generation/misc/");
		registerBlock(registry, new RunePostBlock("RunePostLunar", "rune_post_lunar", 32, 20), "blocks/generation/misc/");
		registerBlock(registry, new RunePostBlock("RunePostPower", "rune_post_power", 59, 40), "blocks/generation/misc/");
		registerBlock(registry, new RunePostBlock("RunePostStorm", "rune_post_storm", 49, 30), "blocks/generation/misc/");
		registerBlock(registry, new RunePostBlock("RunePostStrike", "rune_post_strike", 42, 24), "blocks/generation/misc/");
		registerBlock(registry, new RunePostBlock("RunePostWater", "rune_post_water", 15, 10), "blocks/generation/misc/");
		registerBlock(registry, new RunePostBlock("RunePostWind", "rune_post_wind", 0, 4), "blocks/generation/misc/");
		registerBlock(registry, new RunePostBlock("RunePostWither", "rune_post_wither", 30, 15), "blocks/generation/misc/");
		registerBlock(registry, new BasicBlock("SkeletalBlock", "skeletal_block", Material.ROCK, 5.0f, 5.0f), "blocks/generation/misc/");
		registerBlock(registry, new BasicBlock("Tentacles", "tentacles", Material.GOURD, 3.0f, 1.0f), "blocks/generation/misc/");
		registerBlock(registry, new BasicBlock("TentaclesDotsLeft", "tentacles_dots_left", Material.GOURD, 3.0f, 1.0f), "blocks/generation/misc/");
		registerBlock(registry, new BasicBlock("TentaclesDotsRight", "tentacles_dots_right", Material.GOURD, 3.0f, 1.0f), "blocks/generation/misc/");
		registerBlock(registry, new BasicBlock("TentaclesEyeOrange", "tentacles_eye_orange", Material.GOURD, 3.0f, 1.0f), "blocks/generation/misc/");
		registerBlock(registry, new TentaclesEyeRed(), "blocks/generation/misc/");
		registerBlock(registry, new BasicBlock("TentaclesGreen", "tentacles_green", Material.GOURD, 3.0f, 1.0f), "blocks/generation/misc/");
		registerBlock(registry, new BasicBlock("ToxicStem", "toxic_stem", Material.GOURD), "blocks/generation/misc/");
		registerBlock(registry, new UnbreakableBlock("UnbreakableIroBricks", "unbreakable_iro_bricks", Material.ROCK), "blocks/generation/misc/");
		registerBlock(registry, new UnbreakableBlock("UnbreakablePlantStem", "unbreakable_plant_stem", Material.GOURD), "blocks/generation/misc/");
		registerBlock(registry, new UnbreakableBlock("UnbreakableRunicBricks", "unbreakable_runic_bricks", Material.ROCK), "blocks/generation/misc/");
		registerBlock(registry, new BasicNonCubeBlock("BlueShroom", "blue_shroom", Material.GOURD, 2.0f, 0.5f), "blocks/generation/misc/");
		registerBlock(registry, new BasicNonCubeBlock("GreenShroom", "green_shroom", Material.GOURD, 2.0f, 0.5f), "blocks/generation/misc/");
		registerBlock(registry, new BasicNonCubeBlock("OrangeShroom", "orange_shroom", Material.GOURD, 2.0f, 0.5f), "blocks/generation/misc/");
		registerBlock(registry, new BasicNonCubeBlock("PurpleShroom", "purple_shroom", Material.GOURD, 2.0f, 0.5f), "blocks/generation/misc/");
		registerBlock(registry, new BasicNonCubeBlock("ShroomStem", "shroom_stem", Material.GOURD, 2.0f, 0.5f).setBoundingBox(BasicNonCubeBlock.shroomStemAABB), "blocks/generation/misc/");
		registerBlock(registry, new BasicNonCubeBlock("VoxShroom", "vox_shroom", Material.GOURD, 2.0f, 0.5f), "blocks/generation/misc/");
		registerBlock(registry, new BasicNonCubeBlock("YellowShroom", "yellow_shroom", Material.GOURD, 2.0f, 0.5f), "blocks/generation/misc/");
		registerBlock(registry, new DirectionalBlock("VoxLog", "vox_log", Material.WOOD, 1.2f, 0.5f), "blocks/generation/misc/");
		registerBlock(registry, new BoneyBlock(), "blocks/generation/misc/");
		registerBlock(registry, new CarvedRunicPortalBlock("CarvedRuneOfDirection", "carved_rune_direction"), "blocks/generation/misc/");
		registerBlock(registry, new CarvedRunicBlock("CarvedRuneOfEmpowering", "carved_rune_empowering"), "blocks/generation/misc/");
		registerBlock(registry, new CarvedRunicBlock("CarvedRuneOfFocus", "carved_rune_focus"), "blocks/generation/misc/");
		registerBlock(registry, new CarvedRunicPortalBlock("CarvedRuneOfPower", "carved_rune_power"), "blocks/generation/misc/");
		registerBlock(registry, new CarvedRunicPortalBlock("CarvedRuneOfReality", "carved_rune_reality"), "blocks/generation/misc/");
		registerBlock(registry, new CarvedRunicPortalBlock("CarvedRuneOfSpace", "carved_rune_space"), "blocks/generation/misc/");
		registerBlock(registry, new CarvedRunicPortalBlock("CarvedRuneOfTravel", "carved_rune_travel"), "blocks/generation/misc/");
		registerBlock(registry, new ChargingTable(), "blocks/functional/utility/");
		registerBlock(registry, new CloudBlock("ShyreCloud", "shyre_cloud", Material.AIR), "blocks/generation/misc/");
		registerItemlessBlock(registry, new DimensionalFabric());
		registerItemlessBlock(registry, new AirGap());
		registerBlock(registry, new DustopianLamp(), "blocks/generation/special/");
		registerBlock(registry, new DustopianLampOff(), "blocks/generation/special/");
		registerBlock(registry, new EnhancerBlock("DamageEnhancer", "damage_enhancer"), "blocks/functional/misc/");
		registerBlock(registry, new EnhancerBlock("DivineEnhancer", "divine_enhancer"), "blocks/functional/misc/");
		registerBlock(registry, new EnhancerBlock("DurabilityEnhancer", "durability_enhancer"), "blocks/functional/misc/");
		registerBlock(registry, new EnhancerBlock("LuckEnhancer", "luck_enhancer"), "blocks/functional/misc/");
		registerBlock(registry, new EnhancerBlock("MagicEnhancer", "magic_enhancer"), "blocks/functional/misc/");
		registerBlock(registry, new EnhancerBlock("ResistanceEnhancer", "resistance_enhancer"), "blocks/functional/misc/");
		registerBlock(registry, new EnhancerBlock("SpeedEnhancer", "speed_enhancer"), "blocks/functional/misc/");
		registerBlock(registry, new EnhancerBlock("WeightEnhancer", "weight_enhancer"), "blocks/functional/misc/");
		registerBlock(registry, new LadderBlock("ArchaicLadder", "archaic_ladder", -1f, 999999999f), "blocks/functional/misc/");
		registerBlock(registry, new LadderBlock("ArchaicLadderBreakable", "archaic_ladder_breakable", 0.5f, 0.0f), "blocks/functional/misc/");
		registerItemlessBlock(registry, new LivingGrowth());
		registerBlock(registry, new LogBlock("CeleveStem", "celeve_stem"), "blocks/generation/misc/");
		registerBlock(registry, new LunarPillar(), "blocks/generation/misc/");
		registerBlock(registry, new SpikeyPillar(), "blocks/generation/misc/");
		registerBlock(registry, new ToxicBlock(), "blocks/generation/misc/");
		registerBlock(registry, new ToxicWaste(), "blocks/generation/misc/");

		registerBlock(registry, new SpawnerBlock("AmphibiorSpawner", "amphibior_spawner", "amphibior"), "blocks/functional/spawners/");
		registerBlock(registry, new SpawnerBlock("AmphibiyteSpawner", "amphibiyte_spawner", "amphibiyte"), "blocks/functional/spawners/");
		registerBlock(registry, new SpawnerBlock("AngelicaSpawner", "angelica_spawner", "angelica"), "blocks/functional/spawners/");
		registerBlock(registry, new SpawnerBlock("ArcWizardSpawner", "arc_wizard_spawner", "arc_wizard"), "blocks/functional/spawners/");
		registerBlock(registry, new SpawnerBlock("ArkzyneSpawner", "arkzyne_spawner", "arkzyne"), "blocks/functional/spawners/");
		registerBlock(registry, new SpawnerBlock("ArocknidSpawner", "arocknid_spawner", "arocknid"), "blocks/functional/spawners/");
		registerBlock(registry, new SpawnerBlock("BansheeSpawner", "banshee_spawner", "banshee"), "blocks/functional/spawners/");
		registerBlock(registry, new SpawnerBlock("BaumbaSpawner", "baumba_spawner", "baumba"), "blocks/functional/spawners/");
		registerBlock(registry, new SpawnerBlock("BloodsuckerSpawner", "bloodsucker_spawner", "bloodsucker"), "blocks/functional/spawners/");
		registerBlock(registry, new SpawnerBlock("CaneBugSpawner", "cane_bug_spawner", "cane_bug"), "blocks/functional/spawners/");
		registerBlock(registry, new SpawnerBlock("CrusiliskSpawner", "crusilisk_spawner", "crusilisk"), "blocks/functional/spawners/");
		registerBlock(registry, new SpawnerBlock("DawnlightSpawner", "dawnlight_spawner", "dawnlight"), "blocks/functional/spawners/");
		registerBlock(registry, new SpawnerBlock("DayseeSpawner", "daysee_spawner", "daysee"), "blocks/functional/spawners/");
		registerBlock(registry, new SpawnerBlock("DiocusSpawner", "diocus_spawner", "diocus"), "blocks/functional/spawners/");
		registerBlock(registry, new SpawnerBlock("EnforcerSpawner", "enforcer_spawner", "enforcer"), "blocks/functional/spawners/");
		registerBlock(registry, new SpawnerBlock("ExoheadSpawner", "exohead_spawner", "exohead"), "blocks/functional/spawners/");
		registerBlock(registry, new SpawnerBlock("FacelessFloaterSpawner", "faceless_floater_spawner", "faceless_floater"), "blocks/functional/spawners/");
		registerBlock(registry, new SpawnerBlock("FenixSpawner", "fenix_spawner", "fenix", true), "blocks/functional/spawners/");
		registerBlock(registry, new SpawnerBlock("FleshEaterSpawner", "flesh_eater_spawner", "flesh_eater"), "blocks/functional/spawners/");
		registerBlock(registry, new SpawnerBlock("FlowerfaceSpawner", "flowerface_spawner", "flowerface"), "blocks/functional/spawners/");
		registerBlock(registry, new SpawnerBlock("FungockSpawner", "fungock_spawner", "fungock"), "blocks/functional/spawners/");
		registerBlock(registry, new SpawnerBlock("GhastusSpawner", "ghastus_spawner", "ghastus", true), "blocks/functional/spawners/");
		registerBlock(registry, new SpawnerBlock("GingerbirdSpawner", "gingerbird_spawner", "gingerbird"), "blocks/functional/spawners/");
		registerBlock(registry, new SpawnerBlock("GingerbreadManSpawner", "gingerbread_man_spawner", "gingerbread_man"), "blocks/functional/spawners/");
		registerBlock(registry, new SpawnerBlock("GoldumSpawner", "goldum_spawner", "goldum", true), "blocks/functional/spawners/");
		registerBlock(registry, new SpawnerBlock("GoldusSpawner", "goldus_spawner", "goldus", true), "blocks/functional/spawners/");
		registerBlock(registry, new SpawnerBlock("InmateXSpawner", "inmate_x_spawner", "inmate_x"), "blocks/functional/spawners/");
		registerBlock(registry, new SpawnerBlock("InmateYSpawner", "inmate_y_spawner", "inmate_y"), "blocks/functional/spawners/");
		registerBlock(registry, new SpawnerBlock("IosaurSpawner", "iosaur_spawner", "iosaur"), "blocks/functional/spawners/");
		registerBlock(registry, new SpawnerBlock("JaweSpawner", "jawe_spawner", "jawe"), "blocks/functional/spawners/");
		registerBlock(registry, new SpawnerBlock("KaiyuSpawner", "kaiyu_spawner", "kaiyu"), "blocks/functional/spawners/");
		registerBlock(registry, new SpawnerBlock("LightwalkerSpawner", "lightwalker_spawner", "lightwalker"), "blocks/functional/spawners/");
		registerBlock(registry, new SpawnerBlock("LuxocronSpawner", "luxocron_spawner", "luxocron"), "blocks/functional/spawners/");
		registerBlock(registry, new SpawnerBlock("MechyonSpawner", "mechyon_spawner", "mechyon"), "blocks/functional/spawners/");
		registerBlock(registry, new SpawnerBlock("MerkyreSpawner", "merkyre_spawner", "merkyre"), "blocks/functional/spawners/");
		registerBlock(registry, new SpawnerBlock("MermageSpawner", "mermage_spawner", "mermage"), "blocks/functional/spawners/");
		registerBlock(registry, new SpawnerBlock("MushroomSpiderSpawner", "mushroom_spider_spawner", "mushroom_spider"), "blocks/functional/spawners/");
		registerBlock(registry, new SpawnerBlock("NethengeicBeastSpawner", "nethengeic_beast_spawner", "nethengeic_beast"), "blocks/functional/spawners/");
		registerBlock(registry, new SpawnerBlock("NightmareSpiderSpawner", "nightmare_spider_spawner", "nightmare_spider"), "blocks/functional/spawners/");
		registerBlock(registry, new SpawnerBlock("NightwingSpawner", "nightwing_spawner", "nightwing"), "blocks/functional/spawners/");
		registerBlock(registry, new SpawnerBlock("OpteryxSpawner", "opteryx_spawner", "opteryx"), "blocks/functional/spawners/");
		registerBlock(registry, new SpawnerBlock("ParaviteSpawner", "paravite_spawner", "paravite"), "blocks/functional/spawners/");
		registerBlock(registry, new SpawnerBlock("PhantomSpawner", "phantom_spawner", "phantom"), "blocks/functional/spawners/");
		registerBlock(registry, new SpawnerBlock("PodPlantSpawner", "pod_plant_spawner", "pod_plant"), "blocks/functional/spawners/");
		registerBlock(registry, new SpawnerBlock("RawboneSpawner", "rawbone_spawner", "rawbone"), "blocks/functional/spawners/");
		registerBlock(registry, new SpawnerBlock("ReaverSpawner", "reaver_spawner", "reaver", true), "blocks/functional/spawners/");
		registerBlock(registry, new SpawnerBlock("RefluctSpawner", "refluct_spawner", "refluct"), "blocks/functional/spawners/");
		registerBlock(registry, new SpawnerBlock("RockCritterSpawner", "rock_critter_spawner", "rock_critter"), "blocks/functional/spawners/");
		registerBlock(registry, new SpawnerBlock("RunicGolemSpawner", "runic_golem_spawner", "runic_golem"), "blocks/functional/spawners/");
		registerBlock(registry, new SpawnerBlock("RunicGuardianSpawner", "runic_guardian_spawner", "runic_guardian"), "blocks/functional/spawners/");
		registerBlock(registry, new SpawnerBlock("SeekerSpawner", "seeker_spawner", "seeker"), "blocks/functional/spawners/");
		registerBlock(registry, new SpawnerBlock("ShavoSpawner", "shavo_spawner", "shavo", true), "blocks/functional/spawners/");
		registerBlock(registry, new SpawnerBlock("ShyreTrollSpawner", "shyre_troll_spawner", "shyre_troll"), "blocks/functional/spawners/");
		registerBlock(registry, new SpawnerBlock("SkeledonSpawner", "skeledon_spawner", "skeledon", true), "blocks/functional/spawners/");
		registerBlock(registry, new SpawnerBlock("SkelekyteSpawner", "skelekyte_spawner", "skelekyte", true), "blocks/functional/spawners/");
		registerBlock(registry, new SpawnerBlock("SoulscorneSpawner", "soulscorne_spawner", "soulscorne"), "blocks/functional/spawners/");
		registerBlock(registry, new SpawnerBlock("SpectralWizardSpawner", "spectral_wizard_spawner", "spectral_wizard"), "blocks/functional/spawners/");
		registerBlock(registry, new SpawnerBlock("SpinoledonSpawner", "spinoledon_spawner", "spinoledon"), "blocks/functional/spawners/");
		registerBlock(registry, new SpawnerBlock("SurveyorSpawner", "surveyor_spawner", "surveyor"), "blocks/functional/spawners/");
		registerBlock(registry, new SpawnerBlock("TharaflySpawner", "tharafly_spawner", "tharafly"), "blocks/functional/spawners/");
		registerBlock(registry, new SpawnerBlock("UndeadTrollSpawner", "undead_troll_spawner", "undead_troll"), "blocks/functional/spawners/");
		registerBlock(registry, new SpawnerBlock("UriohSpawner", "urioh_spawner", "urioh", true), "blocks/functional/spawners/");
		registerBlock(registry, new SpawnerBlock("UrvSpawner", "urv_spawner", "urv", true), "blocks/functional/spawners/");
		registerBlock(registry, new SpawnerBlock("VineWizardSpawner", "vine_wizard_spawner", "vine_wizard"), "blocks/functional/spawners/");
		registerBlock(registry, new SpawnerBlock("VisageSpawner", "visage_spawner", "visage", true), "blocks/functional/spawners/");
		registerBlock(registry, new SpawnerBlock("VolarSpawner", "volar_spawner", "volar"), "blocks/functional/spawners/");
		registerBlock(registry, new SpawnerBlock("ZargSpawner", "zarg_spawner", "zarg"), "blocks/functional/spawners/");
		registerBlock(registry, new SpawnerBlock("ZhinxSpawner", "zhinx_spawner", "zhinx"), "blocks/functional/spawners/");
		registerBlock(registry, new SpawnerBlock("ZorpSpawner", "zorp_spawner", "zorp"), "blocks/functional/spawners/");

		registerBlock(registry, new ArmyBlock(), "blocks/functional/boss/");
		registerBlock(registry, new BaronessAltar(), "blocks/functional/boss/");
		registerBlock(registry, new CandyBlock(), "blocks/functional/boss/");
		registerBlock(registry, new ClunkheadAltar(), "blocks/functional/boss/");
		registerBlock(registry, new CraexxeusAltar(), "blocks/functional/boss/");
		registerBlock(registry, new CreepAltar(), "blocks/functional/boss/");
		registerBlock(registry, new DracyonAltar(), "blocks/functional/boss/");
		registerBlock(registry, new GrawAltar(), "blocks/functional/boss/");
		registerBlock(registry, new GuardianAltar(), "blocks/functional/boss/");
		registerBlock(registry, new HiveSpawner(), "blocks/functional/boss/");
		registerBlock(registry, new HydroTable(), "blocks/functional/boss/");
		registerBlock(registry, new IllusionAltar(), "blocks/functional/boss/");
		registerBlock(registry, new KrorAltar(), "blocks/functional/boss/");
		registerBlock(registry, new MechBotAltar(), "blocks/functional/boss/");
		registerBlock(registry, new PowerStation(), "blocks/functional/boss/");
		registerBlock(registry, new PrimordialShrine(), "blocks/functional/boss/");
		registerBlock(registry, new RockriderShrine(), "blocks/functional/boss/");
		registerBlock(registry, new ShadowAltar(), "blocks/functional/boss/");
		registerBlock(registry, new SilverfootAltar(), "blocks/functional/boss/");
		registerBlock(registry, new ToyBox(), "blocks/functional/boss/");
		registerBlock(registry, new VinocorneShrine(), "blocks/functional/boss/");
		registerBlock(registry, new VisualentAltar(), "blocks/functional/boss/");
		registerBlock(registry, new VoxxulonAltar(), "blocks/functional/boss/");

		registerBlock(registry, new PortalBlock("AbyssPortal", "abyss_portal", ConfigurationUtil.MainConfig.dimensionIds.abyss, Enums.RGBIntegers.RED_2), "blocks/functional/portal/");
		registerBlock(registry, new AncientCavernPortalBlock(), "blocks/functional/portal/");
		registerBlock(registry, new PortalBlock("BarathosPortal", "barathos_portal", ConfigurationUtil.MainConfig.dimensionIds.barathos, Enums.RGBIntegers.LIGHT_CORAL), "blocks/functional/portal/");
		registerBlock(registry, new PortalBlock("BoreanPortal", "borean_portal", ConfigurationUtil.MainConfig.dimensionIds.lborean, Enums.RGBIntegers.IRIS_BLUE), "blocks/functional/portal/");
		registerBlock(registry, new PortalBlock("CandylandPortal", "candyland_portal", ConfigurationUtil.MainConfig.dimensionIds.candyland, Enums.RGBIntegers.MISTY_ROSE), "blocks/functional/portal/");
		registerBlock(registry, new PortalBlock("CelevePortal", "celeve_portal", ConfigurationUtil.MainConfig.dimensionIds.celeve, Enums.RGBIntegers.YELLOW_2), "blocks/functional/portal/");
		registerBlock(registry, new PortalBlock("CreeponiaPortal", "creeponia_portal", ConfigurationUtil.MainConfig.dimensionIds.creeponia, Enums.RGBIntegers.DE_YORK), "blocks/functional/portal/");
		registerBlock(registry, new PortalBlock("CrysteviaPortal", "crystevia_portal", ConfigurationUtil.MainConfig.dimensionIds.crystevia, Enums.RGBIntegers.HELIOTROPE), "blocks/functional/portal/");
		registerBlock(registry, new PortalBlock("DeeplandsPortal", "deeplands_portal", ConfigurationUtil.MainConfig.dimensionIds.deeplands, Enums.RGBIntegers.SILVER), "blocks/functional/portal/");
		registerBlock(registry, new PortalBlock("DustopiaPortal", "dustopia_portal", ConfigurationUtil.MainConfig.dimensionIds.dustopia, Enums.RGBIntegers.BLACK), "blocks/functional/portal/");
		registerBlock(registry, new PortalBlock("GardenciaPortal", "gardencia_portal", ConfigurationUtil.MainConfig.dimensionIds.gardencia, Enums.RGBIntegers.DEEP_PINK), "blocks/functional/portal/");
		registerBlock(registry, new PortalBlock("GreckonPortal", "greckon_portal", ConfigurationUtil.MainConfig.dimensionIds.greckon, Enums.RGBIntegers.DARK_VIOLET), "blocks/functional/portal/");
		registerBlock(registry, new PortalBlock("HavenPortal", "haven_portal", ConfigurationUtil.MainConfig.dimensionIds.haven, Enums.RGBIntegers.BRIGHT_TURQUOISE), "blocks/functional/portal/");
		registerBlock(registry, new ImmortallisPortalBlock(), "blocks/functional/portal/");
		registerBlock(registry, new PortalBlock("IrominePortal", "iromine_portal", ConfigurationUtil.MainConfig.dimensionIds.iromine, Enums.RGBIntegers.TANGERINE_YELLOW), "blocks/functional/portal/");
		registerBlock(registry, new PortalBlock("LelyetiaPortal", "lelyetia_portal", ConfigurationUtil.MainConfig.dimensionIds.lelyetia, Enums.RGBIntegers.MANGO_TANGO), "blocks/functional/portal/");
		registerBlock(registry, new PortalBlock("LunalusPortal", "lunalus_portal", ConfigurationUtil.MainConfig.dimensionIds.lunalus, Enums.RGBIntegers.LAVENDER_BLUSH), "blocks/functional/portal/");
		registerBlock(registry, new PortalBlock("MysteriumPortal", "mysterium_portal", ConfigurationUtil.MainConfig.dimensionIds.mysterium, Enums.RGBIntegers.TYRIAN_PURPLE), "blocks/functional/portal/");
		registerBlock(registry, new PortalBlock("NetherPortal", "nether_portal", -1, Enums.RGBIntegers.PURPLE), "blocks/functional/portal/");
		registerBlock(registry, new PortalBlock("PrecasiaPortal", "precasia_portal", ConfigurationUtil.MainConfig.dimensionIds.precasia, Enums.RGBIntegers.ELECTRIC_LIME), "blocks/functional/portal/");
		registerBlock(registry, new PortalBlock("RunandorPortal", "runandor_portal", ConfigurationUtil.MainConfig.dimensionIds.runandor, Enums.RGBIntegers.ELECTRIC_BLUE), "blocks/functional/portal/");
		registerBlock(registry, new PortalBlock("ShyrelandsPortal", "shyrelands_portal", ConfigurationUtil.MainConfig.dimensionIds.shyrelands, Enums.RGBIntegers.YELLOW), "blocks/functional/portal/");
		registerBlock(registry, new PortalBlock("VoxPondsPortal", "vox_ponds_portal", ConfigurationUtil.MainConfig.dimensionIds.voxPonds, Enums.RGBIntegers.OLIVE), "blocks/functional/portal/");

		registerBlock(registry, new AncientAltar(), "blocks/functional/utility/");
		registerBlock(registry, new AncientCavernShrine("ErebonShrine", "erebon_shrine", EREBON), "blocks/functional/utility/");
		registerBlock(registry, new AncientCavernShrine("LuxonShrine", "luxon_shrine", LUXON), "blocks/functional/utility/");
		registerBlock(registry, new AncientCavernShrine("PlutonShrine", "pluton_shrine", PLUTON), "blocks/functional/utility/");
		registerBlock(registry, new AncientCavernShrine("SelyanShrine", "selyan_shrine", SELYAN), "blocks/functional/utility/");
		registerBlock(registry, new AscensionShrine(), "blocks/functional/utility/");
		registerBlock(registry, new VoxCrate(), "blocks/functional/utility/");
		registerBlock(registry, new CreationForge(), "blocks/functional/utility/");
		registerBlock(registry, new CrystalCreator("BlueCrystalCreator", "blue_crystal_creator"), "blocks/functional/utility/");
		registerBlock(registry, new CrystalCreator("GreenCrystalCreator", "green_crystal_creator"), "blocks/functional/utility/");
		registerBlock(registry, new CrystalCreator("PurpleCrystalCreator", "purple_crystal_creator"), "blocks/functional/utility/");
		registerBlock(registry, new CrystalCreator("RedCrystalCreator", "red_crystal_creator"), "blocks/functional/utility/");
		registerBlock(registry, new CrystalCreator("WhiteCrystalCreator", "white_crystal_creator"), "blocks/functional/utility/");
		registerBlock(registry, new CrystalCreator("YellowCrystalCreator", "yellow_crystal_creator"), "blocks/functional/utility/");
		registerBlock(registry, new CrystalExtensionShrine(), "blocks/functional/utility/");
		registerBlock(registry, new DecloggingTable(), "blocks/functional/utility/");
		registerBlock(registry, new DeepCase(), "blocks/functional/misc/");
		registerBlock(registry, new DivineStation(), "blocks/functional/utility/");
		registerBlock(registry, new EnigmaTable(), "blocks/functional/utility/");
		registerBlock(registry, new ExoidStation(), "blocks/functional/utility/");
		registerBlock(registry, new ExtractionDevice(false), "blocks/functional/utility/");
		registerBlock(registry, new ExtractionDevice(true), "blocks/functional/utility/");
		registerBlock(registry, new FiltrationSystem(), "blocks/functional/utility/");
		registerItemlessBlock(registry, ((FiltrationSystem)getUnmappedBlock("filtration_system")).getBoilingState());
		registerBlock(registry, new FrameBench(), "blocks/functional/utility/");
		registerBlock(registry, new GoldAccumulator(), "blocks/functional/utility/");
		registerBlock(registry, new HauntingTable(), "blocks/functional/utility/");
		registerBlock(registry, new ImmortallisProgressor("ImmortallisProgressor1", "immortallis_progressor_1", 1), "blocks/functional/utility/");
		registerBlock(registry, new ImmortallisProgressor("ImmortallisProgressor2", "immortallis_progressor_2", 2), "blocks/functional/utility/");
		registerBlock(registry, new ImmortallisProgressor("ImmortallisProgressor3", "immortallis_progressor_3", 3), "blocks/functional/utility/");
		registerBlock(registry, new ImmortallisProgressor("ImmortallisProgressor4", "immortallis_progressor_4", 4), "blocks/functional/utility/");
		registerBlock(registry, new ImmortallisProgressor("ImmortallisProgressor5", "immortallis_progressor_5", 5), "blocks/functional/utility/");
		registerBlock(registry, new ImmortallisProgressor("ImmortallisProgressor6", "immortallis_progressor_6", 6), "blocks/functional/utility/");
		registerBlock(registry, new ImmortallisProgressor("ImmortallisProgressor7", "immortallis_progressor_7", 7), "blocks/functional/utility/");
		registerBlock(registry, new ImmortallisProgressor("ImmortallisProgressor8", "immortallis_progressor_8", 8), "blocks/functional/utility/");
		registerBlock(registry, new ImmortallisProgressor("ImmortallisProgressor9", "immortallis_progressor_9", 9), "blocks/functional/utility/");
		registerBlock(registry, new InfusionTable(), "blocks/functional/utility/");
		registerBlock(registry, new IroCrate(), "blocks/functional/misc/");
		registerBlock(registry, new LunarCreationTable(), "blocks/functional/utility/");
		registerBlock(registry, new LunarEnrichmentTable(), "blocks/functional/utility/");
		registerBlock(registry, new MendingTable(), "blocks/functional/utility/");
		registerBlock(registry, new MineralizationStation(), "blocks/functional/utility/");
		registerBlock(registry, new PetalCraftingStation(), "blocks/functional/utility/");
		registerBlock(registry, new PureGoldAccumulator(), "blocks/functional/utility/");
		registerBlock(registry, new RecreationStation(), "blocks/functional/utility/");
		registerBlock(registry, new RuneRandomizer(), "blocks/functional/utility/");
		registerBlock(registry, new RuneShrine(), "blocks/functional/utility/");
		registerBlock(registry, new RunicBlock(), "blocks/functional/utility/");
		registerBlock(registry, new StrangeBlock(), "blocks/functional/utility/");
		registerBlock(registry, new TeaSink(), "blocks/functional/utility/");
		registerItemlessBlock(registry, ((TeaSink)getUnmappedBlock("tea_sink")).getFullSink());
		registerBlock(registry, new VoxStoreCrate(), "blocks/functional/utility/");
		registerBlock(registry, new WhitewashingTable(), "blocks/functional/utility/");

		registerBlock(registry, new FlowerBlock("Arcbulb", "arcbulb", Material.GRASS, Material.GROUND), "blocks/generation/plants/");
		registerBlock(registry, new FlowerBlock("Arcflower", "arcflower", Material.GRASS, Material.GROUND), "blocks/generation/plants/");
		registerBlock(registry, new GenericPlantBlock("BurealStocks", "bureal_stocks", Material.GRASS, Material.GROUND), "blocks/generation/plants/");
		registerBlock(registry, new GenericPlantBlock("Candycane", "candycane", Material.ROCK, 0.0f, Material.GRASS, Material.GROUND), "blocks/generation/plants/");
		registerBlock(registry, new GenericPlantBlock("CandyGrass", "candy_grass", Material.GRASS, Material.GROUND), "blocks/generation/plants/");
		registerBlock(registry, new GenericPlantBlock("BlueCandyGrass", "blue_candy_grass", Material.GRASS, Material.GROUND), "blocks/generation/plants/");
		registerBlock(registry, new FlowerBlock("CeleviansBlue", "celevians_blue", Material.GRASS, Material.GROUND), "blocks/generation/plants/");
		registerBlock(registry, new FlowerBlock("CeleviansPurple", "celevians_purple", Material.GRASS, Material.GROUND), "blocks/generation/plants/");
		registerBlock(registry, new FlowerBlock("CeleviansRed", "celevians_red", Material.GRASS, Material.GROUND), "blocks/generation/plants/");
		registerBlock(registry, new FlowerBlock("CeleviansWhite", "celevians_white", Material.GRASS, Material.GROUND), "blocks/generation/plants/");
		registerBlock(registry, new FlowerBlock("CreepFlowers", "creep_flowers", Material.GRASS, Material.GROUND), "blocks/generation/plants/");
		registerBlock(registry, new GenericPlantBlock("CreepGrass", "creep_grass", Material.GRASS, Material.GROUND), "blocks/generation/plants/");
		registerBlock(registry, new CrysteviaCrystalPlant("BlueCrystal", "blue_crystal_plant"), "blocks/generation/plants/");
		registerBlock(registry, new CrysteviaCrystalPlant("GreenCrystalPlant", "green_crystal_plant"), "blocks/generation/plants/");
		registerBlock(registry, new CrysteviaCrystalPlant("PurpleCrystalPlant", "purple_crystal_plant"), "blocks/generation/plants/");
		registerBlock(registry, new CrysteviaCrystalPlant("RedCrystalPlant", "red_crystal_plant"), "blocks/generation/plants/");
		registerBlock(registry, new CrysteviaCrystalPlant("WhiteCrystalPlant", "white_crystal_plant"), "blocks/generation/plants/");
		registerBlock(registry, new CrysteviaCrystalPlant("YellowCrystalPlant", "yellow_crystal_plant"), "blocks/generation/plants/");
		registerBlock(registry, new FlowerBlock("Daileers", "daileers", Material.GRASS, Material.GROUND), "blocks/generation/plants/");
		registerBlock(registry, new FlowerBlock("DawnBush", "dawn_bush", Material.GRASS, Material.GROUND), "blocks/generation/plants/");
		registerBlock(registry, new FlowerBlock("DawnFlower", "dawn_flower", Material.GRASS, Material.GROUND), "blocks/generation/plants/");
		registerBlock(registry, new GenericPlantBlock("DawnGrass", "dawn_grass", Material.GRASS, Material.GROUND), "blocks/generation/plants/");
		registerBlock(registry, new FlowerBlock("DayloomsBlue", "daylooms_blue", Material.GRASS, Material.GROUND), "blocks/generation/plants/");
		registerBlock(registry, new FlowerBlock("DayloomsPink", "daylooms_pink", Material.GRASS, Material.GROUND), "blocks/generation/plants/");
		registerBlock(registry, new FlowerBlock("DayloomsYellow", "daylooms_yellow", Material.GRASS, Material.GROUND), "blocks/generation/plants/");
		registerBlock(registry, new GenericPlantBlock("DeadGrass", "dead_grass", Material.GRASS, Material.GROUND), "blocks/generation/plants/");
		registerBlock(registry, new GenericPlantBlock("DeepBlooms", "deep_blooms", Material.ROCK), "blocks/generation/plants/");
		registerBlock(registry, new GenericPlantBlock("DeepGrass", "deep_grass", Material.ROCK), "blocks/generation/plants/");
		registerBlock(registry, new FlowerBlock("HauntedFlower", "haunted_flower", Material.GRASS, Material.GROUND), "blocks/generation/plants/");
		registerBlock(registry, new GenericPlantBlock("HavenGrassPlant", "haven_grass_plant", Material.GRASS, Material.GROUND), "blocks/generation/plants/");
		registerBlock(registry, new FlowerBlock("HorizonDaisies", "horizon_daisies", Material.GRASS, Material.GROUND), "blocks/generation/plants/");
		registerBlock(registry, new GenericPlantBlock("IroGrass", "iro_grass", Material.GRASS, Material.GROUND), "blocks/generation/plants/");
		registerBlock(registry, new GenericPlantBlock("Irotops", "irotops", Material.GRASS, Material.GROUND), "blocks/generation/plants/");
		registerBlock(registry, new GenericPlantBlock("LelyetianGrass", "lelyetian_grass", Material.GRASS, Material.GROUND), "blocks/generation/plants/");
		registerBlock(registry, new UpsideDownGenericPlant("LelyetianGrassDown", "lelyetian_grass_down", Material.GRASS, Material.GROUND), "blocks/generation/plants/");
		registerBlock(registry, new GenericPlantBlock("LuconGrass", "lucon_grass", Material.GRASS, Material.GROUND), "blocks/generation/plants/");
		registerBlock(registry, new GenericPlantBlock("Lunalip", "lunalip", Material.GROUND, Material.GRASS), "blocks/generation/plants/");
		registerBlock(registry, new GenericPlantBlock("Luntar", "luntar", Material.GROUND, Material.GRASS), "blocks/generation/plants/");
		registerBlock(registry, new GenericPlantBlock("Lurchians", "lurchians", Material.GRASS, Material.GROUND), "blocks/generation/plants/");
		registerBlock(registry, new FlowerBlock("Lylips", "lylips", Material.GRASS, Material.GROUND), "blocks/generation/plants/");
		registerBlock(registry, new FlowerBlock("Magias", "magias", Material.GRASS, Material.GROUND), "blocks/generation/plants/");
		registerBlock(registry, new MysticBush(), "blocks/generation/plants/");
		registerBlock(registry, new MysticFerns(), "blocks/generation/plants/");
		registerBlock(registry, new FlowerBlock("OcealitesBlue", "ocealites_blue", Material.GRASS, Material.GROUND), "blocks/generation/plants/");
		registerBlock(registry, new GenericPlantBlock("RainbowGrass", "rainbow_grass", Material.GRASS, Material.GROUND), "blocks/generation/plants/");
		registerBlock(registry, new GenericPlantBlock("RainbowGrass2", "rainbow_grass2", Material.GRASS, Material.GROUND), "blocks/generation/plants/");
		registerBlock(registry, new GenericPlantBlock("RainbowGrass3", "rainbow_grass3", Material.GRASS, Material.GROUND), "blocks/generation/plants/");
		registerBlock(registry, new GenericPlantBlock("RuneBulbs", "rune_bulbs", Material.GRASS, Material.GROUND), "blocks/generation/plants/");
		registerBlock(registry, new FlowerBlock("RunicBush", "runic_bush", Material.GRASS, Material.GROUND), "blocks/generation/plants/");
		registerBlock(registry, new FlowerBlock("ShyreWeed", "shyre_weed", Material.GRASS, Material.GROUND), "blocks/generation/plants/");
		registerBlock(registry, new TangleThorns(), "blocks/generation/plants/");
		registerBlock(registry, new TrilliadBloom(), "blocks/generation/plants/");
		registerBlock(registry, new GenericPlantBlock("Tubeicles", "tubeicles", Material.GRASS, Material.GROUND), "blocks/generation/plants/");
		registerBlock(registry, new GenericPlantBlock("GreenWaterweeds", "green_waterweeds", Material.GRASS, Material.GROUND), "blocks/generation/plants/");
		registerBlock(registry, new RedWaterweeds(), "blocks/generation/plants/");
		registerBlock(registry, new GenericPlantBlock("WhiteWaterweeds", "white_waterweeds", Material.GRASS, Material.GROUND), "blocks/generation/plants/");
		registerBlock(registry, new GenericPlantBlock("YellowWaterweeds", "yellow_waterweeds", Material.GRASS, Material.GROUND), "blocks/generation/plants/");
		registerBlock(registry, new PlantMultiStackable("BlueLollypop", "blue_lollypop", Material.GLASS, 0.0f, Material.GRASS, Material.GROUND), "blocks/generation/plants/");
		registerBlock(registry, new PlantMultiStackable("RedLollypop", "red_lollypop", Material.GLASS, 0.0f, Material.GRASS, Material.GROUND).addStemBlock((PlantMultiStackable)getUnmappedBlock("blue_lollypop")), "blocks/generation/plants/");
		registerBlock(registry, new PlantMultiStackable("YellowLollypop", "yellow_lollypop", Material.GLASS, 0.0f, Material.GRASS, Material.GROUND).addStemBlock((PlantMultiStackable)getUnmappedBlock("blue_lollypop"), (PlantMultiStackable)getUnmappedBlock("red_lollypop")), "blocks/generation/plants/");
		registerBlock(registry, new UpsideDownPlantStackable("AncientVines", "ancient_vines", Material.ROCK), "blocks/generation/plants/");
		registerBlock(registry, new UpsideDownPlantStackable("AncientVinesCap", "ancient_vines_cap", Material.ROCK).setStemBlock((PlantStackable)getUnmappedBlock("ancient_vines")), "blocks/generation/plants/");
		registerBlock(registry, new PlantStackable("BloodPineStem", "blood_pine_stem", Material.GRASS, Material.GROUND), "blocks/generation/plants/");
		registerBlock(registry, new PlantStackable("BloodPine", "blood_pine", Material.GRASS, Material.GROUND).setStemBlock((PlantStackable)getUnmappedBlock("blood_pine_stem")), "blocks/generation/plants/");
		registerBlock(registry, new BloodSpikes(), "blocks/generation/plants/");
		registerBlock(registry, new BloodStrands(), "blocks/generation/plants/");
		registerBlock(registry, new PlantStackable("EyeBulb", "bulb_stock", Material.GRASS, Material.GROUND), "blocks/generation/plants/");
		registerBlock(registry, new BulbStockCap(), "blocks/generation/plants/");
		registerBlock(registry, new PlantStackable("CelebulbsStem", "celebulbs_stem", Material.GRASS, Material.GROUND), "blocks/generation/plants/");
		registerBlock(registry, new PlantStackable("CelebulbsGreen", "celebulbs_green", Material.GRASS, Material.GROUND).setStemBlock((PlantStackable)getUnmappedBlock("celebulbs_stem")), "blocks/generation/plants/");
		registerBlock(registry, new PlantStackable("CelebulbsYellow", "celebulbs_yellow", Material.GRASS, Material.GROUND).setStemBlock((PlantStackable)getUnmappedBlock("celebulbs_stem")), "blocks/generation/plants/");
		registerBlock(registry, new PlantStackable("CoralCage", "coral_cage", Material.GRASS, Material.GROUND, Material.ROCK), "blocks/generation/plants/");
		registerBlock(registry, new DawnwoodBars(), "blocks/generation/plants/");
		registerBlock(registry, new PlantStackable("EyeShrubStem", "eye_shrub_stem", Material.GRASS, Material.GROUND), "blocks/generation/plants/");
		registerBlock(registry, new PlantStackable("EyeShrub", "eye_shrub", Material.GRASS, Material.GROUND).setStemBlock((PlantStackable)getUnmappedBlock("eye_shrub_stem")), "blocks/generation/plants/");
		registerBlock(registry, new PlantStackable("GardenGrass", "garden_grass", Material.GRASS, Material.GROUND), "blocks/generation/plants/");
		registerBlock(registry, new PlantStackable("HavendalesBlueStem", "havendales_blue_stem", Material.GRASS, Material.GROUND), "blocks/generation/plants/");
		registerBlock(registry, new PlantStackable("HavendalesBlue", "havendales_blue", Material.GRASS, Material.GROUND).setStemBlock((PlantStackable)getUnmappedBlock("havendales_blue_stem")), "blocks/generation/plants/");
		registerBlock(registry, new PlantStackable("HavendalesPinkStem", "havendales_pink_stem", Material.GRASS, Material.GROUND), "blocks/generation/plants/");
		registerBlock(registry, new PlantStackable("HavendalesPink", "havendales_pink", Material.GRASS, Material.GROUND).setStemBlock((PlantStackable)getUnmappedBlock("havendales_pink_stem")), "blocks/generation/plants/");
		registerBlock(registry, new PlantStackable("HavendalesYellowStem", "havendales_yellow_stem", Material.GRASS, Material.GROUND), "blocks/generation/plants/");
		registerBlock(registry, new PlantStackable("HavendalesYellow", "havendales_yellow", Material.GRASS, Material.GROUND).setStemBlock((PlantStackable)getUnmappedBlock("havendales_yellow_stem")), "blocks/generation/plants/");
		registerBlock(registry, new BidirectionalPlantStackable("LelyetianStem", "lelyetian_stem", Material.GRASS, Material.GROUND), "blocks/generation/plants/");
		registerBlock(registry, new PlantStackable("LelyetianStemCap", "lelyetian_stem_cap", Material.GRASS, Material.GROUND).setStemBlock((PlantStackable)getUnmappedBlock("lelyetian_stem")), "blocks/generation/plants/");
		registerBlock(registry, new UpsideDownPlantStackable("LelyetianStemCapDown", "lelyetian_stem_cap_down", Material.GRASS, Material.GROUND).setStemBlock((PlantStackable)getUnmappedBlock("lelyetian_stem")), "blocks/generation/plants/");
		registerBlock(registry, new BidirectionalPlantStackable("LelyetianWiggler", "lelyetian_wiggler", Material.GRASS, Material.GROUND), "blocks/generation/plants/");
		registerBlock(registry, new UpsideDownPlantStackable("LelyetianWigglerBottom", "lelyetian_wiggler_bottom", Material.GRASS, Material.GROUND).setStemBlock((PlantStackable)getUnmappedBlock("lelyetian_wiggler")), "blocks/generation/plants/");
		registerBlock(registry, new PlantStackable("LelyetianWigglerTop", "lelyetian_wiggler_top", Material.GRASS, Material.GROUND).setStemBlock((PlantStackable)getUnmappedBlock("lelyetian_wiggler")), "blocks/generation/plants/");
		registerBlock(registry, new PlantStackable("GreenPeppermint", "green_peppermint", Material.GLASS, 0.0f, Material.GRASS, Material.GROUND), "blocks/generation/plants/");
		registerBlock(registry, new PlantStackable("RedPeppermint", "red_peppermint", Material.GLASS, 0.0f, Material.GRASS, Material.GROUND), "blocks/generation/plants/");
		registerBlock(registry, new PlantStackable("PlasticStick", "plastic_stick", Material.ROCK, 0.0f, Material.GRASS, Material.GROUND), "blocks/generation/plants/");
		registerBlock(registry, new PlantStackable("CandyTube", "candy_tube", Material.GLASS, 0.0f, Material.GRASS, Material.GROUND).setStemBlock((PlantStackable)getUnmappedBlock("plastic_stick")), "blocks/generation/plants/");
		registerBlock(registry, new BidirectionalPlantStackable("ShyreStock", "shyre_stock", Material.GRASS, Material.GROUND), "blocks/generation/plants/");
		registerBlock(registry, new PlantStackable("ShyreCap", "shyre_cap", Material.GRASS, Material.GROUND).setStemBlock((PlantStackable)getUnmappedBlock("shyre_stock")), "blocks/generation/plants/");
		registerBlock(registry, new UpsideDownPlantStackable("ShyreCapDown", "shyre_cap_down", Material.GRASS, Material.GROUND).setStemBlock((PlantStackable)getUnmappedBlock("shyre_stock")), "blocks/generation/plants/");
		registerBlock(registry, new PlantStackable("VoxFungiStem", "vox_fungi_stem", Material.GRASS, Material.GROUND), "blocks/generation/plants/");
		registerBlock(registry, new PlantStackable("VoxFungi", "vox_fungi", Material.GRASS, Material.GROUND).setStemBlock((PlantStackable)getUnmappedBlock("vox_fungi_stem")), "blocks/generation/plants/");
		registerBlock(registry, new PlantStackable("VoxTentaclesStem", "vox_tentacles_stem", Material.GRASS, Material.GROUND, Material.SPONGE), "blocks/generation/plants/");
		registerBlock(registry, new PlantStackable("VoxTentacles", "vox_tentacles", Material.GRASS, Material.GROUND, Material.SPONGE).setStemBlock((PlantStackable)getUnmappedBlock("vox_tentacles_stem")), "blocks/generation/plants/");
		registerBlock(registry, new VinesBlock("CreepVines", "creep_vines"), "blocks/generation/plants/");

		registerItemlessBlock(registry, new CropBlock("BubbleBerryCrop", "bubble_berry_crop", true));
		registerItemlessBlock(registry, new CropBlock("ChilliCrop", "chilli_crop", true));
		registerItemlessBlock(registry, new CropBlock("EyeBulbCrop", "eye_bulb_crop", false));
		registerItemlessBlock(registry, new CropBlock("FloraclesCrop", "floracles_crop", true));
		registerItemlessBlock(registry, new CropBlock("GoldicapsCrop", "goldicaps_crop", true));
		registerItemlessBlock(registry, new CropBlock("HeartFruitCrop", "heart_fruit_crop", false));
		registerItemlessBlock(registry, new CropBlock("HollyTopsCrop", "holly_tops_crop", true));
		registerItemlessBlock(registry, new CropBlock("LunacrikeCrop", "lunacrike_crop", true));
		registerItemlessBlock(registry, new CropBlock("LunaGlobeCrop", "luna_globe_crop", true));
		registerItemlessBlock(registry, new CropBlock("LunalonsCrop", "lunalon_crop", true));
		registerItemlessBlock(registry, new CropBlock("MagicMarangCrop", "magic_marang_crop", false));
		registerItemlessBlock(registry, new CropBlock("MysticShroomCrop", "mystic_shroom_crop", false));
		registerItemlessBlock(registry, new CropBlock("RosidonCrop", "rosidon_crop", true));
		registerItemlessBlock(registry, new CropBlock("TeaCrop", "tea_crop", true));
		registerItemlessBlock(registry, new CropBlock("ThornyPlantCrop", "thorny_plant_crop", true));
		registerItemlessBlock(registry, new CropBlock("TrilliadCrop", "trilliad_crop", true));

		registerBlock(registry, new StatueBlock("BaneStatue", "bane_statue", () -> SoundsRegister.MOB_BANE_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("GoldBaneStatue", "gold_bane_statue", () -> SoundsRegister.MOB_BANE_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("OrnateBaneStatue", "ornate_bane_statue", () -> SoundsRegister.MOB_BANE_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("BaronessStatue", "baroness_statue", () -> SoundsRegister.MOB_ARIEL_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("GoldBaronessStatue", "gold_baroness_statue", () -> SoundsRegister.MOB_ARIEL_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("OrnateBaronessStatue", "ornate_baroness_statue", () -> SoundsRegister.MOB_ARIEL_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("ClunkheadStatue", "clunkhead_statue", () -> SoundsRegister.MOB_CLUNKHEAD_DEATH), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("GoldClunkheadStatue", "gold_clunkhead_statue", () -> SoundsRegister.MOB_CLUNKHEAD_DEATH), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("OrnateClunkheadStatue", "ornate_clunkhead_statue", () -> SoundsRegister.MOB_CLUNKHEAD_DEATH), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("ConiferonStatue", "coniferon_statue", () -> SoundsRegister.MOB_CONIFERON_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("GoldConiferonStatue", "gold_coniferon_statue", () -> SoundsRegister.MOB_CONIFERON_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("OrnateConiferonStatue", "ornate_coniferon_statue", () -> SoundsRegister.MOB_CONIFERON_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("CorallusStatue", "corallus_statue", () -> SoundsRegister.MOB_CORALLUS_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("GoldCorallusStatue", "gold_corallus_statue", () -> SoundsRegister.MOB_CORALLUS_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("OrnateCorallusStatue", "ornate_corallus_statue", () -> SoundsRegister.MOB_CORALLUS_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("CottonCandorStatue", "cotton_candor_statue", () -> SoundsRegister.MOB_COTTON_CANDOR_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("GoldCottonCandorStatue", "gold_cotton_candor_statue", () -> SoundsRegister.MOB_COTTON_CANDOR_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("OrnateCottonCandorStatue", "ornate_cotton_candor_statue", () -> SoundsRegister.MOB_COTTON_CANDOR_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("CraexxeusStatue", "craexxeus_statue", () -> SoundsRegister.MOB_CRAEXXEUS_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("GoldCraexxeusStatue", "gold_craexxeus_statue", () -> SoundsRegister.MOB_CRAEXXEUS_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("OrnateCraexxeusStatue", "ornate_craexxeus_statue", () -> SoundsRegister.MOB_CRAEXXEUS_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("CreepStatue", "creep_statue", () -> SoundsRegister.MOB_CREEPOID_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("GoldCreepStatue", "gold_creep_statue", () -> SoundsRegister.MOB_CREEPOID_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("OrnateCreepStatue", "ornate_creep_statue", () -> SoundsRegister.MOB_CREEPOID_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("CrystocoreStatue", "crystocore_statue", () -> SoundsRegister.MOB_CRYSTAL_CONSTRUCT_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("GoldCrystocoreStatue", "gold_crystocore_statue", () -> SoundsRegister.MOB_CRYSTAL_CONSTRUCT_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("OrnateCrystocoreStatue", "ornate_crystocore_statue", () -> SoundsRegister.MOB_CRYSTAL_CONSTRUCT_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("DracyonStatue", "dracyon_statue", () -> SoundsRegister.MOB_DRACYON_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("GoldDracyonStatue", "gold_dracyon_statue", () -> SoundsRegister.MOB_DRACYON_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("OrnateDracyonStatue", "ornate_dracyon_statue", () -> SoundsRegister.MOB_DRACYON_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("ElusiveStatue", "elusive_statue", () -> SoundsRegister.MOB_ELUSIVE_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("GoldElusiveStatue", "gold_elusive_statue", () -> SoundsRegister.MOB_ELUSIVE_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("OrnateElusiveStatue", "ornate_elusive_statue", () -> SoundsRegister.MOB_ELUSIVE_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("FlashStatue", "flash_statue", () -> SoundsRegister.MOB_IMMORTAL_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("OrnateFlashStatue", "ornate_flash_statue", () -> SoundsRegister.MOB_IMMORTAL_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("GoldFlashStatue", "gold_flash_statue", () -> SoundsRegister.MOB_IMMORTAL_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("GoldorthStatue", "goldorth_statue", () -> SoundsRegister.MOB_GOLDORTH_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("GoldGoldorthStatue", "gold_goldorth_statue", () -> SoundsRegister.MOB_GOLDORTH_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("OrnateGoldorthStatue", "ornate_goldorth_statue", () -> SoundsRegister.MOB_GOLDORTH_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("GrawStatue", "graw_statue", () -> SoundsRegister.MOB_GRAW_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("GoldGrawStatue", "gold_graw_statue", () -> SoundsRegister.MOB_GRAW_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("OrnateGrawStatue", "ornate_graw_statue", () -> SoundsRegister.MOB_GRAW_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("GuardianStatue", "guardian_statue", () -> SoundsRegister.MOB_GUARDIAN_DEATH), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("GoldGuardianStatue", "gold_guardian_statue", () -> SoundsRegister.MOB_GUARDIAN_DEATH), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("OrnateGuardianStatue", "ornate_guardian_statue", () -> SoundsRegister.MOB_GUARDIAN_DEATH), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("GyroStatue", "gyro_statue", () -> SoundsRegister.MOB_GYRO_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("GoldGyroStatue", "gold_gyro_statue", () -> SoundsRegister.MOB_GYRO_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("OrnateGyroStatue", "ornate_gyro_statue", () -> SoundsRegister.MOB_GYRO_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("HarkosStatue", "harkos_statue", () -> SoundsRegister.MOB_PRIMORDIAL_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("GoldHarkosStatue", "gold_harkos_statue", () -> SoundsRegister.MOB_PRIMORDIAL_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("OrnateHarkosStatue", "ornate_harkos_statue", () -> SoundsRegister.MOB_PRIMORDIAL_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("HiveKingStatue", "hive_king_statue", () -> SoundsRegister.MOB_HIVE_KING_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("GoldHiveKingStatue", "gold_hive_king_statue", () -> SoundsRegister.MOB_HIVE_KING_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("OrnateHiveKingStatue", "ornate_hive_king_statue", () -> SoundsRegister.MOB_HIVE_KING_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("HoronStatue", "horon_statue", () -> SoundsRegister.MOB_HORON_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("GoldHoronStatue", "gold_horon_statue", () -> SoundsRegister.MOB_HORON_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("OrnateHoronStatue", "ornate_horon_statue", () -> SoundsRegister.MOB_HORON_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("HydroliskStatue", "hydrolisk_statue", () -> SoundsRegister.MOB_HYDROLISK_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("GoldHydroliskStatue", "gold_hydrolisk_statue", () -> SoundsRegister.MOB_HYDROLISK_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("OrnateHydroliskStatue", "ornate_hydrolisk_statue", () -> SoundsRegister.MOB_HYDROLISK_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("KajarosStatue", "kajaros_statue", () -> SoundsRegister.MOB_PRIMORDIAL_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("GoldKajarosStatue", "gold_kajaros_statue", () -> SoundsRegister.MOB_PRIMORDIAL_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("OrnateKajarosStatue", "ornate_kajaros_statue", () -> SoundsRegister.MOB_PRIMORDIAL_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("KingBamBamBamStatue", "king_bambambam_statue", () -> SoundsRegister.MOB_KING_BAMBAMBAM_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("GoldKingBamBamBamStatue", "gold_king_bambambam_statue", () -> SoundsRegister.MOB_KING_BAMBAMBAM_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("OrnateKingBamBamBamStatue", "ornate_king_bambambam_statue", () -> SoundsRegister.MOB_KING_BAMBAMBAM_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("KingShroomusStatue", "king_shroomus_statue", () -> SoundsRegister.MOB_FUNGI_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("GoldKingShroomusStatue", "gold_king_shroomus_statue", () -> SoundsRegister.MOB_FUNGI_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("OrnateKingShroomusStatue", "ornate_king_shroomus_statue", () -> SoundsRegister.MOB_FUNGI_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("KlobberStatue", "klobber_statue", () -> SoundsRegister.MOB_IMMORTAL_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("GoldKlobberStatue", "gold_klobber_statue", () -> SoundsRegister.MOB_IMMORTAL_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("OrnateKlobberStatue", "ornate_klobber_statue", () -> SoundsRegister.MOB_IMMORTAL_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("KrorStatue", "kror_statue", () -> SoundsRegister.MOB_KROR_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("GoldKrorStatue", "gold_kror_statue", () -> SoundsRegister.MOB_KROR_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("OrnateKrorStatue", "ornate_kror_statue", () -> SoundsRegister.MOB_KROR_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("MechbotStatue", "mechbot_statue", () -> SoundsRegister.MOB_MECHYON_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("GoldMechbotStatue", "gold_mechbot_statue", () -> SoundsRegister.MOB_MECHYON_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("OrnateMechbotStatue", "ornate_mechbot_statue", () -> SoundsRegister.MOB_MECHYON_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("MirageStatue", "mirage_statue", () -> SoundsRegister.MOB_IMMORTAL_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("GoldMirageStatue", "gold_mirage_statue", () -> SoundsRegister.MOB_IMMORTAL_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("OrnateMirageStatue", "ornate_mirage_statue", () -> SoundsRegister.MOB_IMMORTAL_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("MiskelStatue", "miskel_statue", () -> SoundsRegister.MOB_PRIMORDIAL_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("GoldMiskelStatue", "gold_miskel_statue", () -> SoundsRegister.MOB_PRIMORDIAL_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("OrnateMiskelStatue", "ornate_miskel_statue", () -> SoundsRegister.MOB_PRIMORDIAL_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("NethengeicWitherStatue", "nethengeic_wither_statue", () -> SoundsRegister.MOB_NETHENGEIC_WITHER_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("GoldNethengeicWitherStatue", "gold_nethengeic_wither_statue", () -> SoundsRegister.MOB_NETHENGEIC_WITHER_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("OrnateNethengeicWitherStatue", "ornate_nethengeic_wither_statue", () -> SoundsRegister.MOB_NETHENGEIC_WITHER_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("OkazorStatue", "okazor_statue", () -> SoundsRegister.MOB_PRIMORDIAL_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("GoldOkazorStatue", "gold_okazor_statue", () -> SoundsRegister.MOB_PRIMORDIAL_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("OrnateOkazorStatue", "ornate_okazor_statue", () -> SoundsRegister.MOB_PRIMORDIAL_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("PenumbraStatue", "penumbra_statue", () -> SoundsRegister.MOB_PENUMBRA_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("GoldPenumbraStatue", "gold_penumbra_statue", () -> SoundsRegister.MOB_PENUMBRA_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("OrnatePenumbraStatue", "ornate_penumbra_statue", () -> SoundsRegister.MOB_PENUMBRA_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("ProshieldStatue", "proshield_statue", () -> SoundsRegister.MOB_IMMORTAL_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("GoldProshieldStatue", "gold_proshield_statue", () -> SoundsRegister.MOB_IMMORTAL_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("OrnateProshieldStatue", "ornate_proshield_statue", () -> SoundsRegister.MOB_IMMORTAL_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("RaxxanStatue", "raxxan_statue", () -> SoundsRegister.MOB_PRIMORDIAL_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("GoldRaxxanStatue", "gold_raxxan_statue", () -> SoundsRegister.MOB_PRIMORDIAL_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("OrnateRaxxanStatue", "ornate_raxxan_statue", () -> SoundsRegister.MOB_PRIMORDIAL_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("RockriderStatue", "rockrider_statue", () -> SoundsRegister.MOB_ROCK_RIDER_SWITCH), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("GoldRockriderStatue", "gold_rockrider_statue", () -> SoundsRegister.MOB_ROCK_RIDER_SWITCH), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("OrnateRockriderStatue", "ornate_rockrider_statue", () -> SoundsRegister.MOB_ROCK_RIDER_SWITCH), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("ShadowlordStatue", "shadowlord_statue", () -> SoundsRegister.MOB_SHADOWLORD_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("GoldShadowlordStatue", "gold_shadowlord_statue", () -> SoundsRegister.MOB_SHADOWLORD_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("OrnateShadowlordStatue", "ornate_shadowlord_statue", () -> SoundsRegister.MOB_SHADOWLORD_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("SilverfootStatue", "silverfoot_statue", () -> SoundEvents.BLOCK_ANVIL_FALL), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("GoldSilverfootStatue", "gold_silverfoot_statue", () -> SoundEvents.BLOCK_ANVIL_FALL), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("OrnateSilverfootStatue", "ornate_silverfoot_statue", () -> SoundEvents.BLOCK_ANVIL_FALL), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("SkeletronStatue", "skeletron_statue", () -> SoundEvents.ENTITY_SKELETON_AMBIENT), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("GoldSkeletronStatue", "gold_skeletron_statue", () -> SoundEvents.ENTITY_SKELETON_AMBIENT), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("OrnateSkeletronStatue", "ornate_skeletron_statue", () -> SoundEvents.ENTITY_SKELETON_AMBIENT), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("SmashStatue", "smash_statue", () -> SoundsRegister.MOB_SMASH_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("OrnateSmashStatue", "ornate_smash_statue", () -> SoundsRegister.MOB_SMASH_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("GoldSmashStatue", "gold_smash_statue", () -> SoundsRegister.MOB_SMASH_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("TyrosaurStatue", "tyrosaur_statue", () -> SoundsRegister.MOB_TYROSAUR_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("GoldTyrosaurStatue", "gold_tyrosaur_statue", () -> SoundsRegister.MOB_TYROSAUR_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("OrnateTyrosaurStatue", "ornate_tyrosaur_statue", () -> SoundsRegister.MOB_TYROSAUR_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("VinocorneStatue", "vinocorne_statue", () -> SoundsRegister.MOB_TREE_SPIRIT_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("GoldVinocorneStatue", "gold_vinocorne_statue", () -> SoundsRegister.MOB_TREE_SPIRIT_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("OrnateVinocorneStatue", "ornate_vinocorne_statue", () -> SoundsRegister.MOB_TREE_SPIRIT_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("VisualentStatue", "visualent_statue", () -> SoundsRegister.MOB_VISULAR_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("GoldVisualentStatue", "gold_visualent_statue", () -> SoundsRegister.MOB_VISULAR_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("OrnateVisualentStatue", "ornate_visualent_statue", () -> SoundsRegister.MOB_VISULAR_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("VoxxulonStatue", "voxxulon_statue", () -> SoundsRegister.MOB_VOXXULON_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("GoldVoxxulonStatue", "gold_voxxulon_statue", () -> SoundsRegister.MOB_VOXXULON_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("OrnateVoxxulonStatue", "ornate_voxxulon_statue", () -> SoundsRegister.MOB_VOXXULON_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("XxeusStatue", "xxeus_statue", () -> SoundsRegister.MOB_XXEUS_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("GoldXxeusStatue", "gold_xxeus_statue", () -> SoundsRegister.MOB_XXEUS_LIVING), "blocks/decoration/statues/");
		registerBlock(registry, new StatueBlock("OrnateXxeusStatue", "ornate_xxeus_statue", () -> SoundsRegister.MOB_XXEUS_LIVING), "blocks/decoration/statues/");

		registerBlock(registry, new BannerBlock("AncientBanner", "ancient_banner"), "blocks/decoration/banners/normal/");
		registerBlock(registry, new BannerBlock("GildedAncientBanner", "gilded_ancient_banner"), "blocks/decoration/banners/gilded/");
		registerBlock(registry, new BannerBlock("EncrustedAncientBanner", "encrusted_ancient_banner"), "blocks/decoration/banners/encrusted/");
		registerBlock(registry, new BannerBlock("BejewelledAncientBanner", "bejewelled_ancient_banner"), "blocks/decoration/banners/bejewelled/");
		registerBlock(registry, new BannerBlock("BaronBanner", "baron_banner"), "blocks/decoration/banners/normal/");
		registerBlock(registry, new BannerBlock("GildedBaronBanner", "gilded_baron_banner"), "blocks/decoration/banners/gilded/");
		registerBlock(registry, new BannerBlock("EncrustedBaronBanner", "encrusted_baron_banner"), "blocks/decoration/banners/encrusted/");
		registerBlock(registry, new BannerBlock("BejewelledBaronBanner", "bejewelled_baron_banner"), "blocks/decoration/banners/bejewelled/");
		registerBlock(registry, new BannerBlock("BloodBanner", "blood_banner"), "blocks/decoration/banners/normal/");
		registerBlock(registry, new BannerBlock("GildedBloodBanner", "gilded_blood_banner"), "blocks/decoration/banners/gilded/");
		registerBlock(registry, new BannerBlock("EncrustedBloodBanner", "encrusted_blood_banner"), "blocks/decoration/banners/encrusted/");
		registerBlock(registry, new BannerBlock("BejewelledBloodBanner", "bejewelled_blood_banner"), "blocks/decoration/banners/bejewelled/");
		registerBlock(registry, new BannerBlock("BoreicBanner", "boreic_banner"), "blocks/decoration/banners/normal/");
		registerBlock(registry, new BannerBlock("GildedBoreicBanner", "gilded_boreic_banner"), "blocks/decoration/banners/gilded/");
		registerBlock(registry, new BannerBlock("EncrustedBoreicBanner", "encrusted_boreic_banner"), "blocks/decoration/banners/encrusted/");
		registerBlock(registry, new BannerBlock("BejewelledBoreicBanner", "bejewelled_boreic_banner"), "blocks/decoration/banners/bejewelled/");
		registerBlock(registry, new BannerBlock("CandyBanner", "candy_banner"), "blocks/decoration/banners/normal/");
		registerBlock(registry, new BannerBlock("GildedCandyBanner", "gilded_candy_banner"), "blocks/decoration/banners/gilded/");
		registerBlock(registry, new BannerBlock("EncrustedCandyBanner", "encrusted_candy_banner"), "blocks/decoration/banners/encrusted/");
		registerBlock(registry, new BannerBlock("BejewelledCandyBanner", "bejewelled_candy_banner"), "blocks/decoration/banners/bejewelled/");
		registerBlock(registry, new BannerBlock("ClownBanner", "clown_banner"), "blocks/decoration/banners/normal/");
		registerBlock(registry, new BannerBlock("GildedClownBanner", "gilded_clown_banner"), "blocks/decoration/banners/gilded/");
		registerBlock(registry, new BannerBlock("EncrustedClownBanner", "encrusted_clown_banner"), "blocks/decoration/banners/encrusted/");
		registerBlock(registry, new BannerBlock("BejewelledClownBanner", "bejewelled_clown_banner"), "blocks/decoration/banners/bejewelled/");
		registerBlock(registry, new BannerBlock("CreationBanner", "creation_banner"), "blocks/decoration/banners/normal/");
		registerBlock(registry, new BannerBlock("GildedCreationBanner", "gilded_creation_banner"), "blocks/decoration/banners/gilded/");
		registerBlock(registry, new BannerBlock("EncrustedCreationBanner", "encrusted_creation_banner"), "blocks/decoration/banners/encrusted/");
		registerBlock(registry, new BannerBlock("BejewelledCreationBanner", "bejewelled_creation_banner"), "blocks/decoration/banners/bejewelled/");
		registerBlock(registry, new BannerBlock("CreepoidBanner", "creepoid_banner"), "blocks/decoration/banners/normal/"); // TODO Obtain method
		registerBlock(registry, new BannerBlock("GildedCreepoidBanner", "gilded_creepoid_banner"), "blocks/decoration/banners/gilded/");
		registerBlock(registry, new BannerBlock("EncrustedCreepoidBanner", "encrusted_creepoid_banner"), "blocks/decoration/banners/encrusted/");
		registerBlock(registry, new BannerBlock("BejewelledCreepoidBanner", "bejewelled_creepoid_banner"), "blocks/decoration/banners/bejewelled/");
		registerBlock(registry, new BannerBlock("CreepyBanner", "creepy_banner"), "blocks/decoration/banners/normal/");
		registerBlock(registry, new BannerBlock("GildedCreepyBanner", "gilded_creepy_banner"), "blocks/decoration/banners/gilded/");
		registerBlock(registry, new BannerBlock("EncrustedCreepyBanner", "encrusted_creepy_banner"), "blocks/decoration/banners/encrusted/");
		registerBlock(registry, new BannerBlock("BejewelledCreepyBanner", "bejewelled_creepy_banner"), "blocks/decoration/banners/bejewelled/");
		registerBlock(registry, new BannerBlock("CrystalBanner", "crystal_banner"), "blocks/decoration/banners/normal/");
		registerBlock(registry, new BannerBlock("GildedCrystalBanner", "gilded_crystal_banner"), "blocks/decoration/banners/gilded/");
		registerBlock(registry, new BannerBlock("EncrustedCrystalBanner", "encrusted_crystal_banner"), "blocks/decoration/banners/encrusted/");
		registerBlock(registry, new BannerBlock("BejewelledCrystalBanner", "bejewelled_crystal_banner"), "blocks/decoration/banners/bejewelled/");
		registerBlock(registry, new BannerBlock("DeepBanner", "deep_banner"), "blocks/decoration/banners/normal/");
		registerBlock(registry, new BannerBlock("GildedDeepBanner", "gilded_deep_banner"), "blocks/decoration/banners/gilded/");
		registerBlock(registry, new BannerBlock("EncrustedDeepBanner", "encrusted_deep_banner"), "blocks/decoration/banners/encrusted/");
		registerBlock(registry, new BannerBlock("BejewelledDeepBanner", "bejewelled_deep_banner"), "blocks/decoration/banners/bejewelled/");
		registerBlock(registry, new BannerBlock("DustopianBanner", "dustopian_banner"), "blocks/decoration/banners/normal/");
		registerBlock(registry, new BannerBlock("GildedDustopianBanner", "gilded_dustopian_banner"), "blocks/decoration/banners/gilded/");
		registerBlock(registry, new BannerBlock("EncrustedDustopianBanner", "encrusted_dustopian_banner"), "blocks/decoration/banners/encrusted/");
		registerBlock(registry, new BannerBlock("BejewelledDustopianBanner", "bejewelled_dustopian_banner"), "blocks/decoration/banners/bejewelled/");
		registerBlock(registry, new BannerBlock("EnergyBanner", "energy_banner"), "blocks/decoration/banners/normal/");
		registerBlock(registry, new BannerBlock("GildedEnergyBanner", "gilded_energy_banner"), "blocks/decoration/banners/gilded/");
		registerBlock(registry, new BannerBlock("EncrustedEnergyBanner", "encrusted_energy_banner"), "blocks/decoration/banners/encrusted/");
		registerBlock(registry, new BannerBlock("BejewelledEnergyBanner", "bejewelled_energy_banner"), "blocks/decoration/banners/bejewelled/");
		registerBlock(registry, new BannerBlock("FungalBanner", "fungal_banner"), "blocks/decoration/banners/normal/");
		registerBlock(registry, new BannerBlock("GildedFungalBanner", "gilded_fungal_banner"), "blocks/decoration/banners/gilded/");
		registerBlock(registry, new BannerBlock("EncrustedFungalBanner", "encrusted_fungal_banner"), "blocks/decoration/banners/encrusted/");
		registerBlock(registry, new BannerBlock("BejewelledFungalBanner", "bejewelled_fungal_banner"), "blocks/decoration/banners/bejewelled/");
		registerBlock(registry, new BannerBlock("GhostlyBanner", "ghostly_banner"), "blocks/decoration/banners/normal/"); // TODO Obtain method
		registerBlock(registry, new BannerBlock("GildedGhostlyBanner", "gilded_ghostly_banner"), "blocks/decoration/banners/gilded/");
		registerBlock(registry, new BannerBlock("EncrustedGhostlyBanner", "encrusted_ghostly_banner"), "blocks/decoration/banners/encrusted/");
		registerBlock(registry, new BannerBlock("BejewelledGhostlyBanner", "bejewelled_ghostly_banner"), "blocks/decoration/banners/bejewelled/");
		registerBlock(registry, new BannerBlock("GhoulBanner", "ghoul_banner"), "blocks/decoration/banners/normal/"); // TODO Obtain method
		registerBlock(registry, new BannerBlock("GildedGhoulBanner", "gilded_ghoul_banner"), "blocks/decoration/banners/gilded/");
		registerBlock(registry, new BannerBlock("EncrustedGhoulBanner", "encrusted_ghoul_banner"), "blocks/decoration/banners/encrusted/");
		registerBlock(registry, new BannerBlock("BejewelledGhoulBanner", "bejewelled_ghoul_banner"), "blocks/decoration/banners/bejewelled/");
		registerBlock(registry, new BannerBlock("GingerbreadBanner", "gingerbread_banner"), "blocks/decoration/banners/normal/"); // TODO Obtain method
		registerBlock(registry, new BannerBlock("GildedGingerbreadBanner", "gilded_gingerbread_banner"), "blocks/decoration/banners/gilded/");
		registerBlock(registry, new BannerBlock("EncrustedGingerbreadBanner", "encrusted_gingerbread_banner"), "blocks/decoration/banners/encrusted/");
		registerBlock(registry, new BannerBlock("BejewelledGingerbreadBanner", "bejewelled_gingerbread_banner"), "blocks/decoration/banners/bejewelled/");
		registerBlock(registry, new BannerBlock("HauntedBanner", "haunted_banner"), "blocks/decoration/banners/normal/");
		registerBlock(registry, new BannerBlock("GildedHauntedBanner", "gilded_haunted_banner"), "blocks/decoration/banners/gilded/");
		registerBlock(registry, new BannerBlock("EncrustedHauntedBanner", "encrusted_haunted_banner"), "blocks/decoration/banners/encrusted/");
		registerBlock(registry, new BannerBlock("BejewelledHauntedBanner", "bejewelled_haunted_banner"), "blocks/decoration/banners/bejewelled/");
		registerBlock(registry, new BannerBlock("IllusionBanner", "illusion_banner"), "blocks/decoration/banners/normal/"); // TODO Obtain method
		registerBlock(registry, new BannerBlock("GildedIllusionBanner", "gilded_illusion_banner"), "blocks/decoration/banners/gilded/");
		registerBlock(registry, new BannerBlock("EncrustedIllusionBanner", "encrusted_illusion_banner"), "blocks/decoration/banners/encrusted/");
		registerBlock(registry, new BannerBlock("BejewelledIllusionBanner", "bejewelled_illusion_banner"), "blocks/decoration/banners/bejewelled/");
		registerBlock(registry, new BannerBlock("ImmortalBanner", "immortal_banner"), "blocks/decoration/banners/normal/");
		registerBlock(registry, new BannerBlock("GildedImmortalBanner", "gilded_immortal_banner"), "blocks/decoration/banners/gilded/");
		registerBlock(registry, new BannerBlock("EncrustedImmortalBanner", "encrusted_immortal_banner"), "blocks/decoration/banners/encrusted/");
		registerBlock(registry, new BannerBlock("BejewelledImmortalBanner", "bejewelled_immortal_banner"), "blocks/decoration/banners/bejewelled/");
		registerBlock(registry, new BannerBlock("LelyetianBanner", "lelyetian_banner"), "blocks/decoration/banners/normal/");
		registerBlock(registry, new BannerBlock("GildedLelyetianBanner", "gilded_lelyetian_banner"), "blocks/decoration/banners/gilded/");
		registerBlock(registry, new BannerBlock("EncrustedLelyetianBanner", "encrusted_lelyetian_banner"), "blocks/decoration/banners/encrusted/");
		registerBlock(registry, new BannerBlock("BejewelledLelyetianBanner", "bejewelled_lelyetian_banner"), "blocks/decoration/banners/bejewelled/");
		registerBlock(registry, new BannerBlock("LightBanner", "light_banner"), "blocks/decoration/banners/normal/"); // TODO Obtain method
		registerBlock(registry, new BannerBlock("GildedLightBanner", "gilded_light_banner"), "blocks/decoration/banners/gilded/");
		registerBlock(registry, new BannerBlock("EncrustedLightBanner", "encrusted_light_banner"), "blocks/decoration/banners/encrusted/");
		registerBlock(registry, new BannerBlock("BejewelledLightBanner", "bejewelled_light_banner"), "blocks/decoration/banners/bejewelled/");
		registerBlock(registry, new BannerBlock("LottoBanner", "lotto_banner"), "blocks/decoration/banners/normal/");
		registerBlock(registry, new BannerBlock("GildedLottoBanner", "gilded_lotto_banner"), "blocks/decoration/banners/gilded/");
		registerBlock(registry, new BannerBlock("EncrustedLottoBanner", "encrusted_lotto_banner"), "blocks/decoration/banners/encrusted/");
		registerBlock(registry, new BannerBlock("BejewelledLottoBanner", "bejewelled_lotto_banner"), "blocks/decoration/banners/bejewelled/");
		registerBlock(registry, new BannerBlock("LunarBanner", "lunar_banner"), "blocks/decoration/banners/normal/");
		registerBlock(registry, new BannerBlock("GildedLunarBanner", "gilded_lunar_banner"), "blocks/decoration/banners/gilded/");
		registerBlock(registry, new BannerBlock("EncrustedLunarBanner", "encrusted_lunar_banner"), "blocks/decoration/banners/encrusted/");
		registerBlock(registry, new BannerBlock("BejewelledLunarBanner", "bejewelled_lunar_banner"), "blocks/decoration/banners/bejewelled/");
		registerBlock(registry, new BannerBlock("MechaBanner", "mecha_banner"), "blocks/decoration/banners/normal/");
		registerBlock(registry, new BannerBlock("GildedMechaBanner", "gilded_mecha_banner"), "blocks/decoration/banners/gilded/");
		registerBlock(registry, new BannerBlock("EncrustedMechaBanner", "encrusted_mecha_banner"), "blocks/decoration/banners/encrusted/");
		registerBlock(registry, new BannerBlock("BejewelledMechaBanner", "bejewelled_mecha_banner"), "blocks/decoration/banners/bejewelled/");
		registerBlock(registry, new BannerBlock("NethengeicBanner", "nethengeic_banner"), "blocks/decoration/banners/normal/");
		registerBlock(registry, new BannerBlock("GildedNethengeicBanner", "gilded_nethengeic_banner"), "blocks/decoration/banners/gilded/");
		registerBlock(registry, new BannerBlock("EncrustedNethengeicBanner", "encrusted_nethengeic_banner"), "blocks/decoration/banners/encrusted/");
		registerBlock(registry, new BannerBlock("BejewelledNethengeicBanner", "bejewelled_nethengeic_banner"), "blocks/decoration/banners/bejewelled/");
		registerBlock(registry, new BannerBlock("NetherBanner", "nether_banner"), "blocks/decoration/banners/normal/");
		registerBlock(registry, new BannerBlock("GildedNetherBanner", "gilded_nether_banner"), "blocks/decoration/banners/gilded/");
		registerBlock(registry, new BannerBlock("EncrustedNetherBanner", "encrusted_nether_banner"), "blocks/decoration/banners/encrusted/");
		registerBlock(registry, new BannerBlock("BejewelledNetherBanner", "bejewelled_nether_banner"), "blocks/decoration/banners/bejewelled/");
		registerBlock(registry, new BannerBlock("RosidianBanner", "rosidian_banner"), "blocks/decoration/banners/normal/");
		registerBlock(registry, new BannerBlock("GildedRosidianBanner", "gilded_rosidian_banner"), "blocks/decoration/banners/gilded/");
		registerBlock(registry, new BannerBlock("EncrustedRosidianBanner", "encrusted_rosidian_banner"), "blocks/decoration/banners/encrusted/");
		registerBlock(registry, new BannerBlock("BejewelledRosidianBanner", "bejewelled_rosidian_banner"), "blocks/decoration/banners/bejewelled/");
		registerBlock(registry, new BannerBlock("RunicBanner", "runic_banner"), "blocks/decoration/banners/normal/");
		registerBlock(registry, new BannerBlock("GildedRunicBanner", "gilded_runic_banner"), "blocks/decoration/banners/gilded/");
		registerBlock(registry, new BannerBlock("EncrustedRunicBanner", "encrusted_runic_banner"), "blocks/decoration/banners/encrusted/");
		registerBlock(registry, new BannerBlock("BejewelledRunicBanner", "bejewelled_runic_banner"), "blocks/decoration/banners/bejewelled/");
		registerBlock(registry, new BannerBlock("SeaBanner", "sea_banner"), "blocks/decoration/banners/normal/"); // TODO Obtain method
		registerBlock(registry, new BannerBlock("GildedSeaBanner", "gilded_sea_banner"), "blocks/decoration/banners/gilded/");
		registerBlock(registry, new BannerBlock("EncrustedSeaBanner", "encrusted_sea_banner"), "blocks/decoration/banners/encrusted/");
		registerBlock(registry, new BannerBlock("BejewelledSeaBanner", "bejewelled_sea_banner"), "blocks/decoration/banners/bejewelled/");
		registerBlock(registry, new BannerBlock("ShadowBanner", "shadow_banner"), "blocks/decoration/banners/normal/");
		registerBlock(registry, new BannerBlock("GildedShadowBanner", "gilded_shadow_banner"), "blocks/decoration/banners/gilded/");
		registerBlock(registry, new BannerBlock("EncrustedShadowBanner", "encrusted_shadow_banner"), "blocks/decoration/banners/encrusted/");
		registerBlock(registry, new BannerBlock("BejewelledShadowBanner", "bejewelled_shadow_banner"), "blocks/decoration/banners/bejewelled/");
		registerBlock(registry, new BannerBlock("ShinyBanner", "shiny_banner"), "blocks/decoration/banners/normal/"); // TODO Obtain method
		registerBlock(registry, new BannerBlock("GildedShinyBanner", "gilded_shiny_banner"), "blocks/decoration/banners/gilded/");
		registerBlock(registry, new BannerBlock("EncrustedShinyBanner", "encrusted_shiny_banner"), "blocks/decoration/banners/encrusted/");
		registerBlock(registry, new BannerBlock("BejewelledShinyBanner", "bejewelled_shiny_banner"), "blocks/decoration/banners/bejewelled/");
		registerBlock(registry, new BannerBlock("ShyreBanner", "shyre_banner"), "blocks/decoration/banners/normal/");
		registerBlock(registry, new BannerBlock("GildedShyreBanner", "gilded_shyre_banner"), "blocks/decoration/banners/gilded/");
		registerBlock(registry, new BannerBlock("EncrustedShyreBanner", "encrusted_shyre_banner"), "blocks/decoration/banners/encrusted/");
		registerBlock(registry, new BannerBlock("BejewelledShyreBanner", "bejewelled_shyre_banner"), "blocks/decoration/banners/bejewelled/");
		registerBlock(registry, new BannerBlock("SkeletalBanner", "skeletal_banner"), "blocks/decoration/banners/normal/");
		registerBlock(registry, new BannerBlock("GildedSkeletalBanner", "gilded_skeletal_banner"), "blocks/decoration/banners/gilded/");
		registerBlock(registry, new BannerBlock("EncrustedSkeletalBanner", "encrusted_skeletal_banner"), "blocks/decoration/banners/encrusted/");
		registerBlock(registry, new BannerBlock("BejewelledSkeletalBanner", "bejewelled_skeletal_banner"), "blocks/decoration/banners/bejewelled/");
		registerBlock(registry, new BannerBlock("SoulBanner", "soul_banner"), "blocks/decoration/banners/normal/");
		registerBlock(registry, new BannerBlock("GildedSoulBanner", "gilded_soul_banner"), "blocks/decoration/banners/gilded/");
		registerBlock(registry, new BannerBlock("EncrustedSoulBanner", "encrusted_soul_banner"), "blocks/decoration/banners/encrusted/");
		registerBlock(registry, new BannerBlock("BejewelledSoulBanner", "bejewelled_soul_banner"), "blocks/decoration/banners/bejewelled/");
		registerBlock(registry, new BannerBlock("UtopianBanner", "utopian_banner"), "blocks/decoration/banners/normal/");
		registerBlock(registry, new BannerBlock("GildedUtopianBanner", "gilded_utopian_banner"), "blocks/decoration/banners/gilded/");
		registerBlock(registry, new BannerBlock("EncrustedUtopianBanner", "encrusted_utopian_banner"), "blocks/decoration/banners/encrusted/");
		registerBlock(registry, new BannerBlock("BejewelledUtopianBanner", "bejewelled_utopian_banner"), "blocks/decoration/banners/bejewelled/");
		registerBlock(registry, new BannerBlock("VoidBanner", "void_banner"), "blocks/decoration/banners/normal/");
		registerBlock(registry, new BannerBlock("GildedVoidBanner", "gilded_void_banner"), "blocks/decoration/banners/gilded/");
		registerBlock(registry, new BannerBlock("EncrustedVoidBanner", "encrusted_void_banner"), "blocks/decoration/banners/encrusted/");
		registerBlock(registry, new BannerBlock("BejewelledVoidBanner", "bejewelled_void_banner"), "blocks/decoration/banners/bejewelled/");
		registerBlock(registry, new BannerBlock("VoxBanner", "vox_banner"), "blocks/decoration/banners/normal/");
		registerBlock(registry, new BannerBlock("GildedVoxBanner", "gilded_vox_banner"), "blocks/decoration/banners/gilded/");
		registerBlock(registry, new BannerBlock("EncrustedVoxBanner", "encrusted_vox_banner"), "blocks/decoration/banners/encrusted/");
		registerBlock(registry, new BannerBlock("BejewelledVoxBanner", "bejewelled_vox_banner"), "blocks/decoration/banners/bejewelled/");
		registerBlock(registry, new BannerBlock("PlutonBanner", "pluton_banner"), "blocks/decoration/banners/special/");
		registerBlock(registry, new BannerBlock("LuxonBanner", "luxon_banner"), "blocks/decoration/banners/special/");
		registerBlock(registry, new BannerBlock("ErebonBanner", "erebon_banner"), "blocks/decoration/banners/special/");
		registerBlock(registry, new BannerBlock("SelyanBanner", "selyan_banner"), "blocks/decoration/banners/special/");
	}

	@SubscribeEvent
	public static void remapMissing(final RegistryEvent.MissingMappings<Block> ev) {
		for (RegistryEvent.MissingMappings.Mapping<Block> map : ev.getMappings()) {
			switch (map.key.toString()) {
				case "aoa3:blue_crystal_ore":
					map.remap(BLUE_CRYSTAL_ORE);
					break;
				case "aoa3:green_crystal_ore":
					map.remap(GREEN_CRYSTAL_ORE);
					break;
				case "aoa3:red_crystal_ore":
					map.remap(RED_CRYSTAL_ORE);
					break;
				case "aoa3:purple_crystal_ore":
					map.remap(PURPLE_CRYSTAL_ORE);
					break;
				case "aoa3:white_crystal_ore":
					map.remap(WHITE_CRYSTAL_ORE);
					break;
				case "aoa3:yellow_crystal_ore":
					map.remap(YELLOW_CRYSTAL_ORE);
					break;
				case "aoa3:magical_enhancer":
					map.remap(MAGIC_ENHANCER);
					break;
				case "aoa3:vox_log2":
					map.remap(VOX_LOG);
					break;
				default:
					break;
			}
		}
	}

	@SubscribeEvent
	public static void registerItemBlockRenders(final ModelRegistryEvent ev) {
		blockRegistryList.forEach(wrapper -> {
			if (wrapper.itemBlock != null)
				registerRender(wrapper.itemBlock, wrapper.modelSubfolder);
		});

		AdventOfAscension.proxy.registerStateMappers();
	}

	public static void doInitTasks() {
		AdventOfAscension.logOptionalMessage("Performing miscellaneous post-init blocks tasks");

		blockRegistryList.forEach(wrapper -> {
			if (wrapper.oreDictEntries != null) {
				for (String entry : wrapper.oreDictEntries) {
					OreDictionary.registerOre(entry, wrapper.block);
				}
			}
		});

		BLUE_CRYSTAL_CREATOR.setConversionItems(ItemRegister.BLUE_GEMSTONES, ItemRegister.BLUE_CRYSTAL);
		GREEN_CRYSTAL_CREATOR.setConversionItems(ItemRegister.GREEN_GEMSTONES, ItemRegister.GREEN_CRYSTAL);
		PURPLE_CRYSTAL_CREATOR.setConversionItems(ItemRegister.PURPLE_GEMSTONES, ItemRegister.PURPLE_CRYSTAL);
		RED_CRYSTAL_CREATOR.setConversionItems(ItemRegister.RED_GEMSTONES, ItemRegister.RED_CRYSTAL);
		WHITE_CRYSTAL_CREATOR.setConversionItems(ItemRegister.WHITE_GEMSTONES, ItemRegister.WHITE_CRYSTAL);
		YELLOW_CRYSTAL_CREATOR.setConversionItems(ItemRegister.YELLOW_GEMSTONES, ItemRegister.YELLOW_CRYSTAL);
		AMETHYST_ORE.setDrop(ItemRegister.AMETHYST);
		BLOODSTONE_ORE.setDrop(ItemRegister.BLOODSTONE);
		BLUE_CRYSTAL_ORE.setDrop(ItemRegister.BLUE_GEMSTONES);
		CHESTBONE_FRAGMENTS_ORE.setDrop(ItemRegister.CHESTBONE_FRAGMENT);
		CRYSTALLITE_ORE.setDrop(ItemRegister.CRYSTALLITE);
		FOOTBONE_FRAGMENTS_ORE.setDrop(ItemRegister.FOOTBONE_FRAGMENT);
		GEMENYTE_ORE.setDrop(ItemRegister.GEMENYTE);
		GREEN_CRYSTAL_ORE.setDrop(ItemRegister.GREEN_GEMSTONES);
		JADE_ORE.setDrop(ItemRegister.JADE);
		JEWELYTE_ORE.setDrop(ItemRegister.JEWELYTE);
		LEGBONE_FRAGMENTS_ORE.setDrop(ItemRegister.LEGBONE_FRAGMENT);
		ORNAMYTE_ORE.setDrop(ItemRegister.ORNAMYTE);
		PURPLE_CRYSTAL_ORE.setDrop(ItemRegister.PURPLE_GEMSTONES);
		RED_CRYSTAL_ORE.setDrop(ItemRegister.RED_GEMSTONES);
		SAPPHIRE_ORE.setDrop(ItemRegister.SAPPHIRE);
		SHYREGEM_ORE.setDrop(ItemRegister.SHYREGEM);
		SKULLBONE_FRAGMENTS_ORE.setDrop(ItemRegister.SKULLBONE_FRAGMENT);
		WHITE_CRYSTAL_ORE.setDrop(ItemRegister.WHITE_GEMSTONES);
		YELLOW_CRYSTAL_ORE.setDrop(ItemRegister.YELLOW_GEMSTONES);
		BLUE_CRYSTAL_PLANT.setDruseDrop(ItemRegister.BLUE_DRUSE);
		GREEN_CRYSTAL_PLANT.setDruseDrop(ItemRegister.GREEN_DRUSE);
		PURPLE_CRYSTAL_PLANT.setDruseDrop(ItemRegister.PURPLE_DRUSE);
		RED_CRYSTAL_PLANT.setDruseDrop(ItemRegister.RED_DRUSE);
		YELLOW_CRYSTAL_PLANT.setDruseDrop(ItemRegister.YELLOW_DRUSE);
		WHITE_CRYSTAL_PLANT.setDruseDrop(ItemRegister.WHITE_DRUSE);

		blockRegistryList = null;
	}

	@SideOnly(Side.CLIENT)
	public static void registerStateMappers() {
		for (BlockRegistryWrapper wrapper : blockRegistryList) {
			if (wrapper.block instanceof CustomStateMapperBlock) {
				ModelLoader.setCustomStateMapper(wrapper.block, ((CustomStateMapperBlock)wrapper.block).getStateMapper());
			}
			else if (wrapper.block instanceof BasicFluidBlock) {
				BasicFluidBlock.FluidStateMapper fluidStateMapper = ((BasicFluidBlock)wrapper.block).getFluidStateMap();
				Item fluidItem = Item.getItemFromBlock(wrapper.block);

				if (fluidItem != Items.AIR)
					ModelLoader.setCustomMeshDefinition(fluidItem, fluidStateMapper);

				ModelLoader.setCustomStateMapper(wrapper.block, fluidStateMapper);
			}
		}
	}

	private static void registerBlock(IForgeRegistry<Block> registry, Block block, String modelSubfolder, String... oreDictKeys) {
		registry.register(block);

		ItemBlock itemBlock;

		if (block instanceof SlabBlock.DoubleSlabBlock) {
			BlockSlab halfBlock = ((SlabBlock)block).getHalfBlock();

			blockRegistryList.add(new BlockRegistryWrapper(halfBlock, (ItemSlab)new ItemSlab(halfBlock, halfBlock, (SlabBlock.DoubleSlabBlock)block).setRegistryName(halfBlock.getRegistryName()), "blocks/decoration/slabs/", oreDictKeys));
			blockRegistryList.add(new BlockRegistryWrapper(block, null, null));

			registry.register(halfBlock);

			return;
		}
		else if (block instanceof LampBlock) {
			LampBlock offLamp = ((LampBlock)block).getOffLamp();

			blockRegistryList.add(new BlockRegistryWrapper(offLamp, (ItemBlock)new ItemBlock(offLamp).setRegistryName(offLamp.getRegistryName()), modelSubfolder, oreDictKeys));
			blockRegistryList.add(new BlockRegistryWrapper(block, (ItemBlock)new ItemBlock(block).setRegistryName(block.getRegistryName()), modelSubfolder));

			registry.register(offLamp);

			return;
		}
		else {
			itemBlock = (ItemBlock)new ItemBlock(block).setRegistryName(block.getRegistryName());
		}

		blockRegistryList.add(new BlockRegistryWrapper(block, itemBlock, modelSubfolder, oreDictKeys));
	}

	private static void registerItemlessBlock(IForgeRegistry<Block> registry, Block block) {
		registry.register(block);
		blockRegistryList.add(new BlockRegistryWrapper(block, null, null));
	}

	@SubscribeEvent
	public static void registerItemBlocks(final RegistryEvent.Register<Item> ev) {
		blockRegistryList.forEach(wrapper -> {
			if (wrapper.itemBlock != null)
				ev.getRegistry().register(wrapper.itemBlock);
		});
	}

	private static void registerRender(Item item, String location) {
		ModelLoader.setCustomModelResourceLocation(item, 0, new ModelResourceLocation(new ResourceLocation("aoa3:" + location + item.getRegistryName().getPath()), "inventory"));
	}

	@Nullable
	public static Block getUnmappedBlock(String blockRegistryName) {
		if (blockRegistryList != null) {
			for (BlockRegistryWrapper wrapper : blockRegistryList) {
				if (wrapper.block.getRegistryName().getPath().equals(blockRegistryName))
					return wrapper.block;
			}
		}

		return null;
	}

	private static class BlockRegistryWrapper {
		private final String[] oreDictEntries;
		private final String modelSubfolder;
		private final Block block;
		private final ItemBlock itemBlock;

		private BlockRegistryWrapper(Block block, ItemBlock itemBlock, String modelSubfolder, String... oreDictEntries) {
			this.block = block;
			this.itemBlock = itemBlock;
			this.modelSubfolder = modelSubfolder;
			this.oreDictEntries = oreDictEntries == null || oreDictEntries.length == 0 ? null : oreDictEntries;
		}
	}

	@SuppressWarnings("ConstantConditions")
	@Nonnull
	private static <T> T ObjectHolder() {
		return null;
	}
}
